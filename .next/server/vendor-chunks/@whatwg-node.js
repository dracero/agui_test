/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@whatwg-node";
exports.ids = ["vendor-chunks/@whatwg-node"];
exports.modules = {

/***/ "(rsc)/./node_modules/@whatwg-node/disposablestack/cjs/AsyncDisposableStack.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@whatwg-node/disposablestack/cjs/AsyncDisposableStack.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PonyfillAsyncDisposableStack = void 0;\nconst promise_helpers_1 = __webpack_require__(/*! @whatwg-node/promise-helpers */ \"(rsc)/./node_modules/@whatwg-node/promise-helpers/cjs/index.js\");\nconst SupressedError_js_1 = __webpack_require__(/*! ./SupressedError.js */ \"(rsc)/./node_modules/@whatwg-node/disposablestack/cjs/SupressedError.js\");\nconst symbols_js_1 = __webpack_require__(/*! ./symbols.js */ \"(rsc)/./node_modules/@whatwg-node/disposablestack/cjs/symbols.js\");\nconst utils_js_1 = __webpack_require__(/*! ./utils.js */ \"(rsc)/./node_modules/@whatwg-node/disposablestack/cjs/utils.js\");\nconst SuppressedError = globalThis.SuppressedError || SupressedError_js_1.PonyfillSuppressedError;\nclass PonyfillAsyncDisposableStack {\n    callbacks = [];\n    get disposed() {\n        return this.callbacks.length === 0;\n    }\n    use(value) {\n        if ((0, utils_js_1.isAsyncDisposable)(value)) {\n            this.callbacks.push(() => value[symbols_js_1.DisposableSymbols.asyncDispose]());\n        }\n        else if ((0, utils_js_1.isSyncDisposable)(value)) {\n            this.callbacks.push(() => value[symbols_js_1.DisposableSymbols.dispose]());\n        }\n        return value;\n    }\n    adopt(value, onDisposeAsync) {\n        if (onDisposeAsync) {\n            this.callbacks.push(() => onDisposeAsync(value));\n        }\n        return value;\n    }\n    defer(onDisposeAsync) {\n        if (onDisposeAsync) {\n            this.callbacks.push(onDisposeAsync);\n        }\n    }\n    move() {\n        const stack = new PonyfillAsyncDisposableStack();\n        stack.callbacks = this.callbacks;\n        this.callbacks = [];\n        return stack;\n    }\n    disposeAsync() {\n        return this[symbols_js_1.DisposableSymbols.asyncDispose]();\n    }\n    _error;\n    _iterateCallbacks() {\n        const cb = this.callbacks.pop();\n        if (cb) {\n            return (0, promise_helpers_1.handleMaybePromise)(cb, () => this._iterateCallbacks(), error => {\n                this._error = this._error ? new SuppressedError(error, this._error) : error;\n                return this._iterateCallbacks();\n            });\n        }\n    }\n    [symbols_js_1.DisposableSymbols.asyncDispose]() {\n        const res$ = this._iterateCallbacks();\n        if (res$?.then) {\n            return res$.then(() => {\n                if (this._error) {\n                    const error = this._error;\n                    this._error = undefined;\n                    throw error;\n                }\n            });\n        }\n        if (this._error) {\n            const error = this._error;\n            this._error = undefined;\n            throw error;\n        }\n        return undefined;\n    }\n    [Symbol.toStringTag] = 'AsyncDisposableStack';\n}\nexports.PonyfillAsyncDisposableStack = PonyfillAsyncDisposableStack;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL2Rpc3Bvc2FibGVzdGFjay9janMvQXN5bmNEaXNwb3NhYmxlU3RhY2suanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsb0NBQW9DO0FBQ3BDLDBCQUEwQixtQkFBTyxDQUFDLG9HQUE4QjtBQUNoRSw0QkFBNEIsbUJBQU8sQ0FBQyxvR0FBcUI7QUFDekQscUJBQXFCLG1CQUFPLENBQUMsc0ZBQWM7QUFDM0MsbUJBQW1CLG1CQUFPLENBQUMsa0ZBQVk7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQ0FBb0MiLCJzb3VyY2VzIjpbIi9ob21lL2NldGVjL05vZGVQcm9qZWN0cy9hZ3VpX3Rlc3Qvbm9kZV9tb2R1bGVzL0B3aGF0d2ctbm9kZS9kaXNwb3NhYmxlc3RhY2svY2pzL0FzeW5jRGlzcG9zYWJsZVN0YWNrLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5Qb255ZmlsbEFzeW5jRGlzcG9zYWJsZVN0YWNrID0gdm9pZCAwO1xuY29uc3QgcHJvbWlzZV9oZWxwZXJzXzEgPSByZXF1aXJlKFwiQHdoYXR3Zy1ub2RlL3Byb21pc2UtaGVscGVyc1wiKTtcbmNvbnN0IFN1cHJlc3NlZEVycm9yX2pzXzEgPSByZXF1aXJlKFwiLi9TdXByZXNzZWRFcnJvci5qc1wiKTtcbmNvbnN0IHN5bWJvbHNfanNfMSA9IHJlcXVpcmUoXCIuL3N5bWJvbHMuanNcIik7XG5jb25zdCB1dGlsc19qc18xID0gcmVxdWlyZShcIi4vdXRpbHMuanNcIik7XG5jb25zdCBTdXBwcmVzc2VkRXJyb3IgPSBnbG9iYWxUaGlzLlN1cHByZXNzZWRFcnJvciB8fCBTdXByZXNzZWRFcnJvcl9qc18xLlBvbnlmaWxsU3VwcHJlc3NlZEVycm9yO1xuY2xhc3MgUG9ueWZpbGxBc3luY0Rpc3Bvc2FibGVTdGFjayB7XG4gICAgY2FsbGJhY2tzID0gW107XG4gICAgZ2V0IGRpc3Bvc2VkKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5jYWxsYmFja3MubGVuZ3RoID09PSAwO1xuICAgIH1cbiAgICB1c2UodmFsdWUpIHtcbiAgICAgICAgaWYgKCgwLCB1dGlsc19qc18xLmlzQXN5bmNEaXNwb3NhYmxlKSh2YWx1ZSkpIHtcbiAgICAgICAgICAgIHRoaXMuY2FsbGJhY2tzLnB1c2goKCkgPT4gdmFsdWVbc3ltYm9sc19qc18xLkRpc3Bvc2FibGVTeW1ib2xzLmFzeW5jRGlzcG9zZV0oKSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoKDAsIHV0aWxzX2pzXzEuaXNTeW5jRGlzcG9zYWJsZSkodmFsdWUpKSB7XG4gICAgICAgICAgICB0aGlzLmNhbGxiYWNrcy5wdXNoKCgpID0+IHZhbHVlW3N5bWJvbHNfanNfMS5EaXNwb3NhYmxlU3ltYm9scy5kaXNwb3NlXSgpKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdmFsdWU7XG4gICAgfVxuICAgIGFkb3B0KHZhbHVlLCBvbkRpc3Bvc2VBc3luYykge1xuICAgICAgICBpZiAob25EaXNwb3NlQXN5bmMpIHtcbiAgICAgICAgICAgIHRoaXMuY2FsbGJhY2tzLnB1c2goKCkgPT4gb25EaXNwb3NlQXN5bmModmFsdWUpKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdmFsdWU7XG4gICAgfVxuICAgIGRlZmVyKG9uRGlzcG9zZUFzeW5jKSB7XG4gICAgICAgIGlmIChvbkRpc3Bvc2VBc3luYykge1xuICAgICAgICAgICAgdGhpcy5jYWxsYmFja3MucHVzaChvbkRpc3Bvc2VBc3luYyk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgbW92ZSgpIHtcbiAgICAgICAgY29uc3Qgc3RhY2sgPSBuZXcgUG9ueWZpbGxBc3luY0Rpc3Bvc2FibGVTdGFjaygpO1xuICAgICAgICBzdGFjay5jYWxsYmFja3MgPSB0aGlzLmNhbGxiYWNrcztcbiAgICAgICAgdGhpcy5jYWxsYmFja3MgPSBbXTtcbiAgICAgICAgcmV0dXJuIHN0YWNrO1xuICAgIH1cbiAgICBkaXNwb3NlQXN5bmMoKSB7XG4gICAgICAgIHJldHVybiB0aGlzW3N5bWJvbHNfanNfMS5EaXNwb3NhYmxlU3ltYm9scy5hc3luY0Rpc3Bvc2VdKCk7XG4gICAgfVxuICAgIF9lcnJvcjtcbiAgICBfaXRlcmF0ZUNhbGxiYWNrcygpIHtcbiAgICAgICAgY29uc3QgY2IgPSB0aGlzLmNhbGxiYWNrcy5wb3AoKTtcbiAgICAgICAgaWYgKGNiKSB7XG4gICAgICAgICAgICByZXR1cm4gKDAsIHByb21pc2VfaGVscGVyc18xLmhhbmRsZU1heWJlUHJvbWlzZSkoY2IsICgpID0+IHRoaXMuX2l0ZXJhdGVDYWxsYmFja3MoKSwgZXJyb3IgPT4ge1xuICAgICAgICAgICAgICAgIHRoaXMuX2Vycm9yID0gdGhpcy5fZXJyb3IgPyBuZXcgU3VwcHJlc3NlZEVycm9yKGVycm9yLCB0aGlzLl9lcnJvcikgOiBlcnJvcjtcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5faXRlcmF0ZUNhbGxiYWNrcygpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgW3N5bWJvbHNfanNfMS5EaXNwb3NhYmxlU3ltYm9scy5hc3luY0Rpc3Bvc2VdKCkge1xuICAgICAgICBjb25zdCByZXMkID0gdGhpcy5faXRlcmF0ZUNhbGxiYWNrcygpO1xuICAgICAgICBpZiAocmVzJD8udGhlbikge1xuICAgICAgICAgICAgcmV0dXJuIHJlcyQudGhlbigoKSA9PiB7XG4gICAgICAgICAgICAgICAgaWYgKHRoaXMuX2Vycm9yKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGVycm9yID0gdGhpcy5fZXJyb3I7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuX2Vycm9yID0gdW5kZWZpbmVkO1xuICAgICAgICAgICAgICAgICAgICB0aHJvdyBlcnJvcjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodGhpcy5fZXJyb3IpIHtcbiAgICAgICAgICAgIGNvbnN0IGVycm9yID0gdGhpcy5fZXJyb3I7XG4gICAgICAgICAgICB0aGlzLl9lcnJvciA9IHVuZGVmaW5lZDtcbiAgICAgICAgICAgIHRocm93IGVycm9yO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxuICAgIFtTeW1ib2wudG9TdHJpbmdUYWddID0gJ0FzeW5jRGlzcG9zYWJsZVN0YWNrJztcbn1cbmV4cG9ydHMuUG9ueWZpbGxBc3luY0Rpc3Bvc2FibGVTdGFjayA9IFBvbnlmaWxsQXN5bmNEaXNwb3NhYmxlU3RhY2s7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@whatwg-node/disposablestack/cjs/AsyncDisposableStack.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@whatwg-node/disposablestack/cjs/DisposableStack.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@whatwg-node/disposablestack/cjs/DisposableStack.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PonyfillDisposableStack = void 0;\nconst SupressedError_js_1 = __webpack_require__(/*! ./SupressedError.js */ \"(rsc)/./node_modules/@whatwg-node/disposablestack/cjs/SupressedError.js\");\nconst symbols_js_1 = __webpack_require__(/*! ./symbols.js */ \"(rsc)/./node_modules/@whatwg-node/disposablestack/cjs/symbols.js\");\nconst utils_js_1 = __webpack_require__(/*! ./utils.js */ \"(rsc)/./node_modules/@whatwg-node/disposablestack/cjs/utils.js\");\nconst SuppressedError = globalThis.SuppressedError || SupressedError_js_1.PonyfillSuppressedError;\nclass PonyfillDisposableStack {\n    callbacks = [];\n    get disposed() {\n        return this.callbacks.length === 0;\n    }\n    use(value) {\n        if ((0, utils_js_1.isSyncDisposable)(value)) {\n            this.callbacks.push(() => value[symbols_js_1.DisposableSymbols.dispose]());\n        }\n        return value;\n    }\n    adopt(value, onDispose) {\n        if (onDispose) {\n            this.callbacks.push(() => onDispose(value));\n        }\n        return value;\n    }\n    defer(onDispose) {\n        if (onDispose) {\n            this.callbacks.push(onDispose);\n        }\n    }\n    move() {\n        const stack = new PonyfillDisposableStack();\n        stack.callbacks = this.callbacks;\n        this.callbacks = [];\n        return stack;\n    }\n    dispose() {\n        return this[symbols_js_1.DisposableSymbols.dispose]();\n    }\n    _error;\n    _iterateCallbacks() {\n        const cb = this.callbacks.pop();\n        if (cb) {\n            try {\n                cb();\n            }\n            catch (error) {\n                this._error = this._error ? new SuppressedError(error, this._error) : error;\n            }\n            return this._iterateCallbacks();\n        }\n    }\n    [symbols_js_1.DisposableSymbols.dispose]() {\n        this._iterateCallbacks();\n        if (this._error) {\n            const error = this._error;\n            this._error = undefined;\n            throw error;\n        }\n    }\n    [Symbol.toStringTag] = 'DisposableStack';\n}\nexports.PonyfillDisposableStack = PonyfillDisposableStack;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL2Rpc3Bvc2FibGVzdGFjay9janMvRGlzcG9zYWJsZVN0YWNrLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELCtCQUErQjtBQUMvQiw0QkFBNEIsbUJBQU8sQ0FBQyxvR0FBcUI7QUFDekQscUJBQXFCLG1CQUFPLENBQUMsc0ZBQWM7QUFDM0MsbUJBQW1CLG1CQUFPLENBQUMsa0ZBQVk7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrQkFBK0IiLCJzb3VyY2VzIjpbIi9ob21lL2NldGVjL05vZGVQcm9qZWN0cy9hZ3VpX3Rlc3Qvbm9kZV9tb2R1bGVzL0B3aGF0d2ctbm9kZS9kaXNwb3NhYmxlc3RhY2svY2pzL0Rpc3Bvc2FibGVTdGFjay5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuUG9ueWZpbGxEaXNwb3NhYmxlU3RhY2sgPSB2b2lkIDA7XG5jb25zdCBTdXByZXNzZWRFcnJvcl9qc18xID0gcmVxdWlyZShcIi4vU3VwcmVzc2VkRXJyb3IuanNcIik7XG5jb25zdCBzeW1ib2xzX2pzXzEgPSByZXF1aXJlKFwiLi9zeW1ib2xzLmpzXCIpO1xuY29uc3QgdXRpbHNfanNfMSA9IHJlcXVpcmUoXCIuL3V0aWxzLmpzXCIpO1xuY29uc3QgU3VwcHJlc3NlZEVycm9yID0gZ2xvYmFsVGhpcy5TdXBwcmVzc2VkRXJyb3IgfHwgU3VwcmVzc2VkRXJyb3JfanNfMS5Qb255ZmlsbFN1cHByZXNzZWRFcnJvcjtcbmNsYXNzIFBvbnlmaWxsRGlzcG9zYWJsZVN0YWNrIHtcbiAgICBjYWxsYmFja3MgPSBbXTtcbiAgICBnZXQgZGlzcG9zZWQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmNhbGxiYWNrcy5sZW5ndGggPT09IDA7XG4gICAgfVxuICAgIHVzZSh2YWx1ZSkge1xuICAgICAgICBpZiAoKDAsIHV0aWxzX2pzXzEuaXNTeW5jRGlzcG9zYWJsZSkodmFsdWUpKSB7XG4gICAgICAgICAgICB0aGlzLmNhbGxiYWNrcy5wdXNoKCgpID0+IHZhbHVlW3N5bWJvbHNfanNfMS5EaXNwb3NhYmxlU3ltYm9scy5kaXNwb3NlXSgpKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdmFsdWU7XG4gICAgfVxuICAgIGFkb3B0KHZhbHVlLCBvbkRpc3Bvc2UpIHtcbiAgICAgICAgaWYgKG9uRGlzcG9zZSkge1xuICAgICAgICAgICAgdGhpcy5jYWxsYmFja3MucHVzaCgoKSA9PiBvbkRpc3Bvc2UodmFsdWUpKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdmFsdWU7XG4gICAgfVxuICAgIGRlZmVyKG9uRGlzcG9zZSkge1xuICAgICAgICBpZiAob25EaXNwb3NlKSB7XG4gICAgICAgICAgICB0aGlzLmNhbGxiYWNrcy5wdXNoKG9uRGlzcG9zZSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgbW92ZSgpIHtcbiAgICAgICAgY29uc3Qgc3RhY2sgPSBuZXcgUG9ueWZpbGxEaXNwb3NhYmxlU3RhY2soKTtcbiAgICAgICAgc3RhY2suY2FsbGJhY2tzID0gdGhpcy5jYWxsYmFja3M7XG4gICAgICAgIHRoaXMuY2FsbGJhY2tzID0gW107XG4gICAgICAgIHJldHVybiBzdGFjaztcbiAgICB9XG4gICAgZGlzcG9zZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXNbc3ltYm9sc19qc18xLkRpc3Bvc2FibGVTeW1ib2xzLmRpc3Bvc2VdKCk7XG4gICAgfVxuICAgIF9lcnJvcjtcbiAgICBfaXRlcmF0ZUNhbGxiYWNrcygpIHtcbiAgICAgICAgY29uc3QgY2IgPSB0aGlzLmNhbGxiYWNrcy5wb3AoKTtcbiAgICAgICAgaWYgKGNiKSB7XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIGNiKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgICAgICB0aGlzLl9lcnJvciA9IHRoaXMuX2Vycm9yID8gbmV3IFN1cHByZXNzZWRFcnJvcihlcnJvciwgdGhpcy5fZXJyb3IpIDogZXJyb3I7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5faXRlcmF0ZUNhbGxiYWNrcygpO1xuICAgICAgICB9XG4gICAgfVxuICAgIFtzeW1ib2xzX2pzXzEuRGlzcG9zYWJsZVN5bWJvbHMuZGlzcG9zZV0oKSB7XG4gICAgICAgIHRoaXMuX2l0ZXJhdGVDYWxsYmFja3MoKTtcbiAgICAgICAgaWYgKHRoaXMuX2Vycm9yKSB7XG4gICAgICAgICAgICBjb25zdCBlcnJvciA9IHRoaXMuX2Vycm9yO1xuICAgICAgICAgICAgdGhpcy5fZXJyb3IgPSB1bmRlZmluZWQ7XG4gICAgICAgICAgICB0aHJvdyBlcnJvcjtcbiAgICAgICAgfVxuICAgIH1cbiAgICBbU3ltYm9sLnRvU3RyaW5nVGFnXSA9ICdEaXNwb3NhYmxlU3RhY2snO1xufVxuZXhwb3J0cy5Qb255ZmlsbERpc3Bvc2FibGVTdGFjayA9IFBvbnlmaWxsRGlzcG9zYWJsZVN0YWNrO1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@whatwg-node/disposablestack/cjs/DisposableStack.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@whatwg-node/disposablestack/cjs/SupressedError.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@whatwg-node/disposablestack/cjs/SupressedError.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PonyfillSuppressedError = void 0;\nclass PonyfillSuppressedError extends Error {\n    error;\n    suppressed;\n    // eslint-disable-next-line n/handle-callback-err\n    constructor(error, suppressed, message) {\n        super(message);\n        this.error = error;\n        this.suppressed = suppressed;\n        this.name = 'SuppressedError';\n        Error.captureStackTrace(this, this.constructor);\n    }\n}\nexports.PonyfillSuppressedError = PonyfillSuppressedError;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL2Rpc3Bvc2FibGVzdGFjay9janMvU3VwcmVzc2VkRXJyb3IuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsK0JBQStCO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtCQUErQiIsInNvdXJjZXMiOlsiL2hvbWUvY2V0ZWMvTm9kZVByb2plY3RzL2FndWlfdGVzdC9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL2Rpc3Bvc2FibGVzdGFjay9janMvU3VwcmVzc2VkRXJyb3IuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlBvbnlmaWxsU3VwcHJlc3NlZEVycm9yID0gdm9pZCAwO1xuY2xhc3MgUG9ueWZpbGxTdXBwcmVzc2VkRXJyb3IgZXh0ZW5kcyBFcnJvciB7XG4gICAgZXJyb3I7XG4gICAgc3VwcHJlc3NlZDtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbi9oYW5kbGUtY2FsbGJhY2stZXJyXG4gICAgY29uc3RydWN0b3IoZXJyb3IsIHN1cHByZXNzZWQsIG1lc3NhZ2UpIHtcbiAgICAgICAgc3VwZXIobWVzc2FnZSk7XG4gICAgICAgIHRoaXMuZXJyb3IgPSBlcnJvcjtcbiAgICAgICAgdGhpcy5zdXBwcmVzc2VkID0gc3VwcHJlc3NlZDtcbiAgICAgICAgdGhpcy5uYW1lID0gJ1N1cHByZXNzZWRFcnJvcic7XG4gICAgICAgIEVycm9yLmNhcHR1cmVTdGFja1RyYWNlKHRoaXMsIHRoaXMuY29uc3RydWN0b3IpO1xuICAgIH1cbn1cbmV4cG9ydHMuUG9ueWZpbGxTdXBwcmVzc2VkRXJyb3IgPSBQb255ZmlsbFN1cHByZXNzZWRFcnJvcjtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@whatwg-node/disposablestack/cjs/SupressedError.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@whatwg-node/disposablestack/cjs/index.js":
/*!****************************************************************!*\
  !*** ./node_modules/@whatwg-node/disposablestack/cjs/index.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SuppressedError = exports.AsyncDisposableStack = exports.DisposableStack = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(rsc)/./node_modules/tslib/tslib.es6.mjs\");\nconst AsyncDisposableStack_js_1 = __webpack_require__(/*! ./AsyncDisposableStack.js */ \"(rsc)/./node_modules/@whatwg-node/disposablestack/cjs/AsyncDisposableStack.js\");\nconst DisposableStack_js_1 = __webpack_require__(/*! ./DisposableStack.js */ \"(rsc)/./node_modules/@whatwg-node/disposablestack/cjs/DisposableStack.js\");\nconst SupressedError_js_1 = __webpack_require__(/*! ./SupressedError.js */ \"(rsc)/./node_modules/@whatwg-node/disposablestack/cjs/SupressedError.js\");\nexports.DisposableStack = globalThis.DisposableStack || DisposableStack_js_1.PonyfillDisposableStack;\nexports.AsyncDisposableStack = globalThis.AsyncDisposableStack || AsyncDisposableStack_js_1.PonyfillAsyncDisposableStack;\nexports.SuppressedError = globalThis.SuppressedError || SupressedError_js_1.PonyfillSuppressedError;\ntslib_1.__exportStar(__webpack_require__(/*! ./symbols.js */ \"(rsc)/./node_modules/@whatwg-node/disposablestack/cjs/symbols.js\"), exports);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL2Rpc3Bvc2FibGVzdGFjay9janMvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsdUJBQXVCLEdBQUcsNEJBQTRCLEdBQUcsdUJBQXVCO0FBQ2hGLGdCQUFnQixtQkFBTyxDQUFDLHVEQUFPO0FBQy9CLGtDQUFrQyxtQkFBTyxDQUFDLGdIQUEyQjtBQUNyRSw2QkFBNkIsbUJBQU8sQ0FBQyxzR0FBc0I7QUFDM0QsNEJBQTRCLG1CQUFPLENBQUMsb0dBQXFCO0FBQ3pELHVCQUF1QjtBQUN2Qiw0QkFBNEI7QUFDNUIsdUJBQXVCO0FBQ3ZCLHFCQUFxQixtQkFBTyxDQUFDLHNGQUFjIiwic291cmNlcyI6WyIvaG9tZS9jZXRlYy9Ob2RlUHJvamVjdHMvYWd1aV90ZXN0L25vZGVfbW9kdWxlcy9Ad2hhdHdnLW5vZGUvZGlzcG9zYWJsZXN0YWNrL2Nqcy9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuU3VwcHJlc3NlZEVycm9yID0gZXhwb3J0cy5Bc3luY0Rpc3Bvc2FibGVTdGFjayA9IGV4cG9ydHMuRGlzcG9zYWJsZVN0YWNrID0gdm9pZCAwO1xuY29uc3QgdHNsaWJfMSA9IHJlcXVpcmUoXCJ0c2xpYlwiKTtcbmNvbnN0IEFzeW5jRGlzcG9zYWJsZVN0YWNrX2pzXzEgPSByZXF1aXJlKFwiLi9Bc3luY0Rpc3Bvc2FibGVTdGFjay5qc1wiKTtcbmNvbnN0IERpc3Bvc2FibGVTdGFja19qc18xID0gcmVxdWlyZShcIi4vRGlzcG9zYWJsZVN0YWNrLmpzXCIpO1xuY29uc3QgU3VwcmVzc2VkRXJyb3JfanNfMSA9IHJlcXVpcmUoXCIuL1N1cHJlc3NlZEVycm9yLmpzXCIpO1xuZXhwb3J0cy5EaXNwb3NhYmxlU3RhY2sgPSBnbG9iYWxUaGlzLkRpc3Bvc2FibGVTdGFjayB8fCBEaXNwb3NhYmxlU3RhY2tfanNfMS5Qb255ZmlsbERpc3Bvc2FibGVTdGFjaztcbmV4cG9ydHMuQXN5bmNEaXNwb3NhYmxlU3RhY2sgPSBnbG9iYWxUaGlzLkFzeW5jRGlzcG9zYWJsZVN0YWNrIHx8IEFzeW5jRGlzcG9zYWJsZVN0YWNrX2pzXzEuUG9ueWZpbGxBc3luY0Rpc3Bvc2FibGVTdGFjaztcbmV4cG9ydHMuU3VwcHJlc3NlZEVycm9yID0gZ2xvYmFsVGhpcy5TdXBwcmVzc2VkRXJyb3IgfHwgU3VwcmVzc2VkRXJyb3JfanNfMS5Qb255ZmlsbFN1cHByZXNzZWRFcnJvcjtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3N5bWJvbHMuanNcIiksIGV4cG9ydHMpO1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@whatwg-node/disposablestack/cjs/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@whatwg-node/disposablestack/cjs/symbols.js":
/*!******************************************************************!*\
  !*** ./node_modules/@whatwg-node/disposablestack/cjs/symbols.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.DisposableSymbols = void 0;\nexports.patchSymbols = patchSymbols;\nexports.DisposableSymbols = {\n    get dispose() {\n        return Symbol.dispose || Symbol.for('dispose');\n    },\n    get asyncDispose() {\n        return Symbol.asyncDispose || Symbol.for('asyncDispose');\n    },\n};\nfunction patchSymbols() {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore - we ponyfill these symbols\n    Symbol.dispose ||= Symbol.for('dispose');\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore - we ponyfill these symbols\n    Symbol.asyncDispose ||= Symbol.for('asyncDispose');\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL2Rpc3Bvc2FibGVzdGFjay9janMvc3ltYm9scy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCx5QkFBeUI7QUFDekIsb0JBQW9CO0FBQ3BCLHlCQUF5QjtBQUN6QjtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvaG9tZS9jZXRlYy9Ob2RlUHJvamVjdHMvYWd1aV90ZXN0L25vZGVfbW9kdWxlcy9Ad2hhdHdnLW5vZGUvZGlzcG9zYWJsZXN0YWNrL2Nqcy9zeW1ib2xzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5EaXNwb3NhYmxlU3ltYm9scyA9IHZvaWQgMDtcbmV4cG9ydHMucGF0Y2hTeW1ib2xzID0gcGF0Y2hTeW1ib2xzO1xuZXhwb3J0cy5EaXNwb3NhYmxlU3ltYm9scyA9IHtcbiAgICBnZXQgZGlzcG9zZSgpIHtcbiAgICAgICAgcmV0dXJuIFN5bWJvbC5kaXNwb3NlIHx8IFN5bWJvbC5mb3IoJ2Rpc3Bvc2UnKTtcbiAgICB9LFxuICAgIGdldCBhc3luY0Rpc3Bvc2UoKSB7XG4gICAgICAgIHJldHVybiBTeW1ib2wuYXN5bmNEaXNwb3NlIHx8IFN5bWJvbC5mb3IoJ2FzeW5jRGlzcG9zZScpO1xuICAgIH0sXG59O1xuZnVuY3Rpb24gcGF0Y2hTeW1ib2xzKCkge1xuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvYmFuLXRzLWNvbW1lbnRcbiAgICAvLyBAdHMtaWdub3JlIC0gd2UgcG9ueWZpbGwgdGhlc2Ugc3ltYm9sc1xuICAgIFN5bWJvbC5kaXNwb3NlIHx8PSBTeW1ib2wuZm9yKCdkaXNwb3NlJyk7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9iYW4tdHMtY29tbWVudFxuICAgIC8vIEB0cy1pZ25vcmUgLSB3ZSBwb255ZmlsbCB0aGVzZSBzeW1ib2xzXG4gICAgU3ltYm9sLmFzeW5jRGlzcG9zZSB8fD0gU3ltYm9sLmZvcignYXN5bmNEaXNwb3NlJyk7XG59XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@whatwg-node/disposablestack/cjs/symbols.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@whatwg-node/disposablestack/cjs/utils.js":
/*!****************************************************************!*\
  !*** ./node_modules/@whatwg-node/disposablestack/cjs/utils.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isSyncDisposable = isSyncDisposable;\nexports.isAsyncDisposable = isAsyncDisposable;\nconst symbols_js_1 = __webpack_require__(/*! ./symbols.js */ \"(rsc)/./node_modules/@whatwg-node/disposablestack/cjs/symbols.js\");\nfunction isSyncDisposable(obj) {\n    return obj?.[symbols_js_1.DisposableSymbols.dispose] != null;\n}\nfunction isAsyncDisposable(obj) {\n    return obj?.[symbols_js_1.DisposableSymbols.asyncDispose] != null;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL2Rpc3Bvc2FibGVzdGFjay9janMvdXRpbHMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsd0JBQXdCO0FBQ3hCLHlCQUF5QjtBQUN6QixxQkFBcUIsbUJBQU8sQ0FBQyxzRkFBYztBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIi9ob21lL2NldGVjL05vZGVQcm9qZWN0cy9hZ3VpX3Rlc3Qvbm9kZV9tb2R1bGVzL0B3aGF0d2ctbm9kZS9kaXNwb3NhYmxlc3RhY2svY2pzL3V0aWxzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5pc1N5bmNEaXNwb3NhYmxlID0gaXNTeW5jRGlzcG9zYWJsZTtcbmV4cG9ydHMuaXNBc3luY0Rpc3Bvc2FibGUgPSBpc0FzeW5jRGlzcG9zYWJsZTtcbmNvbnN0IHN5bWJvbHNfanNfMSA9IHJlcXVpcmUoXCIuL3N5bWJvbHMuanNcIik7XG5mdW5jdGlvbiBpc1N5bmNEaXNwb3NhYmxlKG9iaikge1xuICAgIHJldHVybiBvYmo/LltzeW1ib2xzX2pzXzEuRGlzcG9zYWJsZVN5bWJvbHMuZGlzcG9zZV0gIT0gbnVsbDtcbn1cbmZ1bmN0aW9uIGlzQXN5bmNEaXNwb3NhYmxlKG9iaikge1xuICAgIHJldHVybiBvYmo/LltzeW1ib2xzX2pzXzEuRGlzcG9zYWJsZVN5bWJvbHMuYXN5bmNEaXNwb3NlXSAhPSBudWxsO1xufVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@whatwg-node/disposablestack/cjs/utils.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@whatwg-node/events/cjs/index.js":
/*!*******************************************************!*\
  !*** ./node_modules/@whatwg-node/events/cjs/index.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.CustomEvent = void 0;\nexports.CustomEvent = globalThis.CustomEvent ||\n    class PonyfillCustomEvent extends Event {\n        detail = null;\n        constructor(type, eventInitDict) {\n            super(type, eventInitDict);\n            if (eventInitDict?.detail != null) {\n                this.detail = eventInitDict.detail;\n            }\n        }\n        initCustomEvent(type, bubbles, cancelable, detail) {\n            this.initEvent(type, bubbles, cancelable);\n            if (detail != null) {\n                this.detail = detail;\n            }\n        }\n    };\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL2V2ZW50cy9janMvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsbUJBQW1CO0FBQ25CLG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIi9ob21lL2NldGVjL05vZGVQcm9qZWN0cy9hZ3VpX3Rlc3Qvbm9kZV9tb2R1bGVzL0B3aGF0d2ctbm9kZS9ldmVudHMvY2pzL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5DdXN0b21FdmVudCA9IHZvaWQgMDtcbmV4cG9ydHMuQ3VzdG9tRXZlbnQgPSBnbG9iYWxUaGlzLkN1c3RvbUV2ZW50IHx8XG4gICAgY2xhc3MgUG9ueWZpbGxDdXN0b21FdmVudCBleHRlbmRzIEV2ZW50IHtcbiAgICAgICAgZGV0YWlsID0gbnVsbDtcbiAgICAgICAgY29uc3RydWN0b3IodHlwZSwgZXZlbnRJbml0RGljdCkge1xuICAgICAgICAgICAgc3VwZXIodHlwZSwgZXZlbnRJbml0RGljdCk7XG4gICAgICAgICAgICBpZiAoZXZlbnRJbml0RGljdD8uZGV0YWlsICE9IG51bGwpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmRldGFpbCA9IGV2ZW50SW5pdERpY3QuZGV0YWlsO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGluaXRDdXN0b21FdmVudCh0eXBlLCBidWJibGVzLCBjYW5jZWxhYmxlLCBkZXRhaWwpIHtcbiAgICAgICAgICAgIHRoaXMuaW5pdEV2ZW50KHR5cGUsIGJ1YmJsZXMsIGNhbmNlbGFibGUpO1xuICAgICAgICAgICAgaWYgKGRldGFpbCAhPSBudWxsKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5kZXRhaWwgPSBkZXRhaWw7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9O1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@whatwg-node/events/cjs/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@whatwg-node/fetch/dist/create-node-ponyfill.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@whatwg-node/fetch/dist/create-node-ponyfill.js ***!
  \**********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const shouldSkipPonyfill = __webpack_require__(/*! ./shouldSkipPonyfill */ \"(rsc)/./node_modules/@whatwg-node/fetch/dist/shouldSkipPonyfill.js\");\nlet newNodeFetch;\n\nmodule.exports = function createNodePonyfill(opts = {}) {\n  const ponyfills = {};\n  \n  ponyfills.URLPattern = globalThis.URLPattern;\n\n  // We call this previously to patch `Bun`\n  if (!ponyfills.URLPattern) {\n    const urlPatternModule = __webpack_require__(/*! urlpattern-polyfill */ \"(rsc)/./node_modules/urlpattern-polyfill/index.cjs\");\n    ponyfills.URLPattern = urlPatternModule.URLPattern;\n  }\n\n  if (opts.skipPonyfill || shouldSkipPonyfill()) {\n    return {\n      fetch: globalThis.fetch,\n      Headers: globalThis.Headers,\n      Request: globalThis.Request,\n      Response: globalThis.Response,\n      FormData: globalThis.FormData,\n      ReadableStream: globalThis.ReadableStream,\n      WritableStream: globalThis.WritableStream,\n      TransformStream: globalThis.TransformStream,\n      CompressionStream: globalThis.CompressionStream,\n      DecompressionStream: globalThis.DecompressionStream,\n      TextDecoderStream: globalThis.TextDecoderStream,\n      TextEncoderStream: globalThis.TextEncoderStream,\n      Blob: globalThis.Blob,\n      File: globalThis.File,\n      crypto: globalThis.crypto,\n      btoa: globalThis.btoa,\n      TextEncoder: globalThis.TextEncoder,\n      TextDecoder: globalThis.TextDecoder,\n      URLPattern: ponyfills.URLPattern,\n      URL: globalThis.URL,\n      URLSearchParams: globalThis.URLSearchParams\n    };\n  }\n\n  newNodeFetch ||= __webpack_require__(/*! @whatwg-node/node-fetch */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/index.js\");\n\n  ponyfills.fetch = newNodeFetch.fetch;\n  ponyfills.Request = newNodeFetch.Request;\n  ponyfills.Response = newNodeFetch.Response;\n  ponyfills.Headers = newNodeFetch.Headers;\n  ponyfills.FormData = newNodeFetch.FormData;\n  ponyfills.ReadableStream = newNodeFetch.ReadableStream;\n\n  ponyfills.URL = newNodeFetch.URL;\n  ponyfills.URLSearchParams = newNodeFetch.URLSearchParams;\n\n  ponyfills.WritableStream = newNodeFetch.WritableStream;\n  ponyfills.TransformStream = newNodeFetch.TransformStream;\n  ponyfills.CompressionStream = newNodeFetch.CompressionStream;\n  ponyfills.DecompressionStream = newNodeFetch.DecompressionStream;\n  ponyfills.TextDecoderStream = newNodeFetch.TextDecoderStream;\n  ponyfills.TextEncoderStream = newNodeFetch.TextEncoderStream;\n\n  ponyfills.Blob = newNodeFetch.Blob;\n  ponyfills.File = newNodeFetch.File;\n  ponyfills.crypto = globalThis.crypto;\n  ponyfills.btoa = newNodeFetch.btoa;\n  ponyfills.TextEncoder = newNodeFetch.TextEncoder;\n  ponyfills.TextDecoder = newNodeFetch.TextDecoder;\n\n  if (opts.formDataLimits) {\n    ponyfills.Body = class Body extends newNodeFetch.Body {\n      constructor(body, userOpts) {\n        super(body, {\n          formDataLimits: opts.formDataLimits,\n          ...userOpts,\n        });\n      }\n    }\n    ponyfills.Request = class Request extends newNodeFetch.Request {\n      constructor(input, userOpts) {\n        super(input, {\n          formDataLimits: opts.formDataLimits,\n          ...userOpts,\n        });\n      }\n    }\n    ponyfills.Response = class Response extends newNodeFetch.Response {\n      constructor(body, userOpts) {\n        super(body, {\n          formDataLimits: opts.formDataLimits,\n          ...userOpts,\n        });\n      }\n    }\n  }\n\n  if (!ponyfills.crypto) {\n    const cryptoModule = __webpack_require__(/*! crypto */ \"crypto\");\n    ponyfills.crypto = cryptoModule.webcrypto;\n  }\n\n  return ponyfills;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL2ZldGNoL2Rpc3QvY3JlYXRlLW5vZGUtcG9ueWZpbGwuanMiLCJtYXBwaW5ncyI6IkFBQUEsMkJBQTJCLG1CQUFPLENBQUMsZ0dBQXNCO0FBQ3pEOztBQUVBLHNEQUFzRDtBQUN0RDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLDZCQUE2QixtQkFBTyxDQUFDLCtFQUFxQjtBQUMxRDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLG1CQUFtQixtQkFBTyxDQUFDLDBGQUF5Qjs7QUFFcEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBOztBQUVBO0FBQ0EseUJBQXlCLG1CQUFPLENBQUMsc0JBQVE7QUFDekM7QUFDQTs7QUFFQTtBQUNBIiwic291cmNlcyI6WyIvaG9tZS9jZXRlYy9Ob2RlUHJvamVjdHMvYWd1aV90ZXN0L25vZGVfbW9kdWxlcy9Ad2hhdHdnLW5vZGUvZmV0Y2gvZGlzdC9jcmVhdGUtbm9kZS1wb255ZmlsbC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBzaG91bGRTa2lwUG9ueWZpbGwgPSByZXF1aXJlKCcuL3Nob3VsZFNraXBQb255ZmlsbCcpO1xubGV0IG5ld05vZGVGZXRjaDtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBjcmVhdGVOb2RlUG9ueWZpbGwob3B0cyA9IHt9KSB7XG4gIGNvbnN0IHBvbnlmaWxscyA9IHt9O1xuICBcbiAgcG9ueWZpbGxzLlVSTFBhdHRlcm4gPSBnbG9iYWxUaGlzLlVSTFBhdHRlcm47XG5cbiAgLy8gV2UgY2FsbCB0aGlzIHByZXZpb3VzbHkgdG8gcGF0Y2ggYEJ1bmBcbiAgaWYgKCFwb255ZmlsbHMuVVJMUGF0dGVybikge1xuICAgIGNvbnN0IHVybFBhdHRlcm5Nb2R1bGUgPSByZXF1aXJlKCd1cmxwYXR0ZXJuLXBvbHlmaWxsJyk7XG4gICAgcG9ueWZpbGxzLlVSTFBhdHRlcm4gPSB1cmxQYXR0ZXJuTW9kdWxlLlVSTFBhdHRlcm47XG4gIH1cblxuICBpZiAob3B0cy5za2lwUG9ueWZpbGwgfHwgc2hvdWxkU2tpcFBvbnlmaWxsKCkpIHtcbiAgICByZXR1cm4ge1xuICAgICAgZmV0Y2g6IGdsb2JhbFRoaXMuZmV0Y2gsXG4gICAgICBIZWFkZXJzOiBnbG9iYWxUaGlzLkhlYWRlcnMsXG4gICAgICBSZXF1ZXN0OiBnbG9iYWxUaGlzLlJlcXVlc3QsXG4gICAgICBSZXNwb25zZTogZ2xvYmFsVGhpcy5SZXNwb25zZSxcbiAgICAgIEZvcm1EYXRhOiBnbG9iYWxUaGlzLkZvcm1EYXRhLFxuICAgICAgUmVhZGFibGVTdHJlYW06IGdsb2JhbFRoaXMuUmVhZGFibGVTdHJlYW0sXG4gICAgICBXcml0YWJsZVN0cmVhbTogZ2xvYmFsVGhpcy5Xcml0YWJsZVN0cmVhbSxcbiAgICAgIFRyYW5zZm9ybVN0cmVhbTogZ2xvYmFsVGhpcy5UcmFuc2Zvcm1TdHJlYW0sXG4gICAgICBDb21wcmVzc2lvblN0cmVhbTogZ2xvYmFsVGhpcy5Db21wcmVzc2lvblN0cmVhbSxcbiAgICAgIERlY29tcHJlc3Npb25TdHJlYW06IGdsb2JhbFRoaXMuRGVjb21wcmVzc2lvblN0cmVhbSxcbiAgICAgIFRleHREZWNvZGVyU3RyZWFtOiBnbG9iYWxUaGlzLlRleHREZWNvZGVyU3RyZWFtLFxuICAgICAgVGV4dEVuY29kZXJTdHJlYW06IGdsb2JhbFRoaXMuVGV4dEVuY29kZXJTdHJlYW0sXG4gICAgICBCbG9iOiBnbG9iYWxUaGlzLkJsb2IsXG4gICAgICBGaWxlOiBnbG9iYWxUaGlzLkZpbGUsXG4gICAgICBjcnlwdG86IGdsb2JhbFRoaXMuY3J5cHRvLFxuICAgICAgYnRvYTogZ2xvYmFsVGhpcy5idG9hLFxuICAgICAgVGV4dEVuY29kZXI6IGdsb2JhbFRoaXMuVGV4dEVuY29kZXIsXG4gICAgICBUZXh0RGVjb2RlcjogZ2xvYmFsVGhpcy5UZXh0RGVjb2RlcixcbiAgICAgIFVSTFBhdHRlcm46IHBvbnlmaWxscy5VUkxQYXR0ZXJuLFxuICAgICAgVVJMOiBnbG9iYWxUaGlzLlVSTCxcbiAgICAgIFVSTFNlYXJjaFBhcmFtczogZ2xvYmFsVGhpcy5VUkxTZWFyY2hQYXJhbXNcbiAgICB9O1xuICB9XG5cbiAgbmV3Tm9kZUZldGNoIHx8PSByZXF1aXJlKCdAd2hhdHdnLW5vZGUvbm9kZS1mZXRjaCcpO1xuXG4gIHBvbnlmaWxscy5mZXRjaCA9IG5ld05vZGVGZXRjaC5mZXRjaDtcbiAgcG9ueWZpbGxzLlJlcXVlc3QgPSBuZXdOb2RlRmV0Y2guUmVxdWVzdDtcbiAgcG9ueWZpbGxzLlJlc3BvbnNlID0gbmV3Tm9kZUZldGNoLlJlc3BvbnNlO1xuICBwb255ZmlsbHMuSGVhZGVycyA9IG5ld05vZGVGZXRjaC5IZWFkZXJzO1xuICBwb255ZmlsbHMuRm9ybURhdGEgPSBuZXdOb2RlRmV0Y2guRm9ybURhdGE7XG4gIHBvbnlmaWxscy5SZWFkYWJsZVN0cmVhbSA9IG5ld05vZGVGZXRjaC5SZWFkYWJsZVN0cmVhbTtcblxuICBwb255ZmlsbHMuVVJMID0gbmV3Tm9kZUZldGNoLlVSTDtcbiAgcG9ueWZpbGxzLlVSTFNlYXJjaFBhcmFtcyA9IG5ld05vZGVGZXRjaC5VUkxTZWFyY2hQYXJhbXM7XG5cbiAgcG9ueWZpbGxzLldyaXRhYmxlU3RyZWFtID0gbmV3Tm9kZUZldGNoLldyaXRhYmxlU3RyZWFtO1xuICBwb255ZmlsbHMuVHJhbnNmb3JtU3RyZWFtID0gbmV3Tm9kZUZldGNoLlRyYW5zZm9ybVN0cmVhbTtcbiAgcG9ueWZpbGxzLkNvbXByZXNzaW9uU3RyZWFtID0gbmV3Tm9kZUZldGNoLkNvbXByZXNzaW9uU3RyZWFtO1xuICBwb255ZmlsbHMuRGVjb21wcmVzc2lvblN0cmVhbSA9IG5ld05vZGVGZXRjaC5EZWNvbXByZXNzaW9uU3RyZWFtO1xuICBwb255ZmlsbHMuVGV4dERlY29kZXJTdHJlYW0gPSBuZXdOb2RlRmV0Y2guVGV4dERlY29kZXJTdHJlYW07XG4gIHBvbnlmaWxscy5UZXh0RW5jb2RlclN0cmVhbSA9IG5ld05vZGVGZXRjaC5UZXh0RW5jb2RlclN0cmVhbTtcblxuICBwb255ZmlsbHMuQmxvYiA9IG5ld05vZGVGZXRjaC5CbG9iO1xuICBwb255ZmlsbHMuRmlsZSA9IG5ld05vZGVGZXRjaC5GaWxlO1xuICBwb255ZmlsbHMuY3J5cHRvID0gZ2xvYmFsVGhpcy5jcnlwdG87XG4gIHBvbnlmaWxscy5idG9hID0gbmV3Tm9kZUZldGNoLmJ0b2E7XG4gIHBvbnlmaWxscy5UZXh0RW5jb2RlciA9IG5ld05vZGVGZXRjaC5UZXh0RW5jb2RlcjtcbiAgcG9ueWZpbGxzLlRleHREZWNvZGVyID0gbmV3Tm9kZUZldGNoLlRleHREZWNvZGVyO1xuXG4gIGlmIChvcHRzLmZvcm1EYXRhTGltaXRzKSB7XG4gICAgcG9ueWZpbGxzLkJvZHkgPSBjbGFzcyBCb2R5IGV4dGVuZHMgbmV3Tm9kZUZldGNoLkJvZHkge1xuICAgICAgY29uc3RydWN0b3IoYm9keSwgdXNlck9wdHMpIHtcbiAgICAgICAgc3VwZXIoYm9keSwge1xuICAgICAgICAgIGZvcm1EYXRhTGltaXRzOiBvcHRzLmZvcm1EYXRhTGltaXRzLFxuICAgICAgICAgIC4uLnVzZXJPcHRzLFxuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9XG4gICAgcG9ueWZpbGxzLlJlcXVlc3QgPSBjbGFzcyBSZXF1ZXN0IGV4dGVuZHMgbmV3Tm9kZUZldGNoLlJlcXVlc3Qge1xuICAgICAgY29uc3RydWN0b3IoaW5wdXQsIHVzZXJPcHRzKSB7XG4gICAgICAgIHN1cGVyKGlucHV0LCB7XG4gICAgICAgICAgZm9ybURhdGFMaW1pdHM6IG9wdHMuZm9ybURhdGFMaW1pdHMsXG4gICAgICAgICAgLi4udXNlck9wdHMsXG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH1cbiAgICBwb255ZmlsbHMuUmVzcG9uc2UgPSBjbGFzcyBSZXNwb25zZSBleHRlbmRzIG5ld05vZGVGZXRjaC5SZXNwb25zZSB7XG4gICAgICBjb25zdHJ1Y3Rvcihib2R5LCB1c2VyT3B0cykge1xuICAgICAgICBzdXBlcihib2R5LCB7XG4gICAgICAgICAgZm9ybURhdGFMaW1pdHM6IG9wdHMuZm9ybURhdGFMaW1pdHMsXG4gICAgICAgICAgLi4udXNlck9wdHMsXG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIGlmICghcG9ueWZpbGxzLmNyeXB0bykge1xuICAgIGNvbnN0IGNyeXB0b01vZHVsZSA9IHJlcXVpcmUoXCJjcnlwdG9cIik7XG4gICAgcG9ueWZpbGxzLmNyeXB0byA9IGNyeXB0b01vZHVsZS53ZWJjcnlwdG87XG4gIH1cblxuICByZXR1cm4gcG9ueWZpbGxzO1xufVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@whatwg-node/fetch/dist/create-node-ponyfill.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@whatwg-node/fetch/dist/node-ponyfill.js":
/*!***************************************************************!*\
  !*** ./node_modules/@whatwg-node/fetch/dist/node-ponyfill.js ***!
  \***************************************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("\nconst createNodePonyfill = __webpack_require__(/*! ./create-node-ponyfill */ \"(rsc)/./node_modules/@whatwg-node/fetch/dist/create-node-ponyfill.js\");\nconst shouldSkipPonyfill = __webpack_require__(/*! ./shouldSkipPonyfill */ \"(rsc)/./node_modules/@whatwg-node/fetch/dist/shouldSkipPonyfill.js\");\nconst ponyfills = createNodePonyfill();\n\nif (!shouldSkipPonyfill()) {\n  try {\n    const nodelibcurlName = 'node-libcurl'\n    globalThis.libcurl = globalThis.libcurl || __webpack_require__(\"(rsc)/./node_modules/@whatwg-node/fetch/dist sync recursive\")(nodelibcurlName);\n  } catch (e) { }\n}\n\nmodule.exports.fetch = ponyfills.fetch;\nmodule.exports.Headers = ponyfills.Headers;\nmodule.exports.Request = ponyfills.Request;\nmodule.exports.Response = ponyfills.Response;\nmodule.exports.FormData = ponyfills.FormData;\nmodule.exports.ReadableStream = ponyfills.ReadableStream;\nmodule.exports.WritableStream = ponyfills.WritableStream;\nmodule.exports.TransformStream = ponyfills.TransformStream;\nmodule.exports.CompressionStream = ponyfills.CompressionStream;\nmodule.exports.DecompressionStream = ponyfills.DecompressionStream;\nmodule.exports.TextDecoderStream = ponyfills.TextDecoderStream;\nmodule.exports.TextEncoderStream = ponyfills.TextEncoderStream;\nmodule.exports.Blob = ponyfills.Blob;\nmodule.exports.File = ponyfills.File;\nmodule.exports.crypto = ponyfills.crypto;\nmodule.exports.btoa = ponyfills.btoa;\nmodule.exports.TextEncoder = ponyfills.TextEncoder;\nmodule.exports.TextDecoder = ponyfills.TextDecoder;\nmodule.exports.URLPattern = ponyfills.URLPattern;\nmodule.exports.URL = ponyfills.URL;\nmodule.exports.URLSearchParams = ponyfills.URLSearchParams;\n\nexports.createFetch = createNodePonyfill;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL2ZldGNoL2Rpc3Qvbm9kZS1wb255ZmlsbC5qcyIsIm1hcHBpbmdzIjoiO0FBQ0EsMkJBQTJCLG1CQUFPLENBQUMsb0dBQXdCO0FBQzNELDJCQUEyQixtQkFBTyxDQUFDLGdHQUFzQjtBQUN6RDs7QUFFQTtBQUNBO0FBQ0E7QUFDQSwrQ0FBK0MsbUZBQVEsZUFBZSxDQUFDO0FBQ3ZFLElBQUk7QUFDSjs7QUFFQSxvQkFBb0I7QUFDcEIsc0JBQXNCO0FBQ3RCLHNCQUFzQjtBQUN0Qix1QkFBdUI7QUFDdkIsdUJBQXVCO0FBQ3ZCLDZCQUE2QjtBQUM3Qiw2QkFBNkI7QUFDN0IsOEJBQThCO0FBQzlCLGdDQUFnQztBQUNoQyxrQ0FBa0M7QUFDbEMsZ0NBQWdDO0FBQ2hDLGdDQUFnQztBQUNoQyxtQkFBbUI7QUFDbkIsbUJBQW1CO0FBQ25CLHFCQUFxQjtBQUNyQixtQkFBbUI7QUFDbkIsMEJBQTBCO0FBQzFCLDBCQUEwQjtBQUMxQix5QkFBeUI7QUFDekIsa0JBQWtCO0FBQ2xCLDhCQUE4Qjs7QUFFOUIsbUJBQW1CIiwic291cmNlcyI6WyIvaG9tZS9jZXRlYy9Ob2RlUHJvamVjdHMvYWd1aV90ZXN0L25vZGVfbW9kdWxlcy9Ad2hhdHdnLW5vZGUvZmV0Y2gvZGlzdC9ub2RlLXBvbnlmaWxsLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlxuY29uc3QgY3JlYXRlTm9kZVBvbnlmaWxsID0gcmVxdWlyZSgnLi9jcmVhdGUtbm9kZS1wb255ZmlsbCcpO1xuY29uc3Qgc2hvdWxkU2tpcFBvbnlmaWxsID0gcmVxdWlyZSgnLi9zaG91bGRTa2lwUG9ueWZpbGwnKTtcbmNvbnN0IHBvbnlmaWxscyA9IGNyZWF0ZU5vZGVQb255ZmlsbCgpO1xuXG5pZiAoIXNob3VsZFNraXBQb255ZmlsbCgpKSB7XG4gIHRyeSB7XG4gICAgY29uc3Qgbm9kZWxpYmN1cmxOYW1lID0gJ25vZGUtbGliY3VybCdcbiAgICBnbG9iYWxUaGlzLmxpYmN1cmwgPSBnbG9iYWxUaGlzLmxpYmN1cmwgfHwgcmVxdWlyZShub2RlbGliY3VybE5hbWUpO1xuICB9IGNhdGNoIChlKSB7IH1cbn1cblxubW9kdWxlLmV4cG9ydHMuZmV0Y2ggPSBwb255ZmlsbHMuZmV0Y2g7XG5tb2R1bGUuZXhwb3J0cy5IZWFkZXJzID0gcG9ueWZpbGxzLkhlYWRlcnM7XG5tb2R1bGUuZXhwb3J0cy5SZXF1ZXN0ID0gcG9ueWZpbGxzLlJlcXVlc3Q7XG5tb2R1bGUuZXhwb3J0cy5SZXNwb25zZSA9IHBvbnlmaWxscy5SZXNwb25zZTtcbm1vZHVsZS5leHBvcnRzLkZvcm1EYXRhID0gcG9ueWZpbGxzLkZvcm1EYXRhO1xubW9kdWxlLmV4cG9ydHMuUmVhZGFibGVTdHJlYW0gPSBwb255ZmlsbHMuUmVhZGFibGVTdHJlYW07XG5tb2R1bGUuZXhwb3J0cy5Xcml0YWJsZVN0cmVhbSA9IHBvbnlmaWxscy5Xcml0YWJsZVN0cmVhbTtcbm1vZHVsZS5leHBvcnRzLlRyYW5zZm9ybVN0cmVhbSA9IHBvbnlmaWxscy5UcmFuc2Zvcm1TdHJlYW07XG5tb2R1bGUuZXhwb3J0cy5Db21wcmVzc2lvblN0cmVhbSA9IHBvbnlmaWxscy5Db21wcmVzc2lvblN0cmVhbTtcbm1vZHVsZS5leHBvcnRzLkRlY29tcHJlc3Npb25TdHJlYW0gPSBwb255ZmlsbHMuRGVjb21wcmVzc2lvblN0cmVhbTtcbm1vZHVsZS5leHBvcnRzLlRleHREZWNvZGVyU3RyZWFtID0gcG9ueWZpbGxzLlRleHREZWNvZGVyU3RyZWFtO1xubW9kdWxlLmV4cG9ydHMuVGV4dEVuY29kZXJTdHJlYW0gPSBwb255ZmlsbHMuVGV4dEVuY29kZXJTdHJlYW07XG5tb2R1bGUuZXhwb3J0cy5CbG9iID0gcG9ueWZpbGxzLkJsb2I7XG5tb2R1bGUuZXhwb3J0cy5GaWxlID0gcG9ueWZpbGxzLkZpbGU7XG5tb2R1bGUuZXhwb3J0cy5jcnlwdG8gPSBwb255ZmlsbHMuY3J5cHRvO1xubW9kdWxlLmV4cG9ydHMuYnRvYSA9IHBvbnlmaWxscy5idG9hO1xubW9kdWxlLmV4cG9ydHMuVGV4dEVuY29kZXIgPSBwb255ZmlsbHMuVGV4dEVuY29kZXI7XG5tb2R1bGUuZXhwb3J0cy5UZXh0RGVjb2RlciA9IHBvbnlmaWxscy5UZXh0RGVjb2Rlcjtcbm1vZHVsZS5leHBvcnRzLlVSTFBhdHRlcm4gPSBwb255ZmlsbHMuVVJMUGF0dGVybjtcbm1vZHVsZS5leHBvcnRzLlVSTCA9IHBvbnlmaWxscy5VUkw7XG5tb2R1bGUuZXhwb3J0cy5VUkxTZWFyY2hQYXJhbXMgPSBwb255ZmlsbHMuVVJMU2VhcmNoUGFyYW1zO1xuXG5leHBvcnRzLmNyZWF0ZUZldGNoID0gY3JlYXRlTm9kZVBvbnlmaWxsO1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@whatwg-node/fetch/dist/node-ponyfill.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@whatwg-node/fetch/dist/shouldSkipPonyfill.js":
/*!********************************************************************!*\
  !*** ./node_modules/@whatwg-node/fetch/dist/shouldSkipPonyfill.js ***!
  \********************************************************************/
/***/ ((module) => {

eval("\nfunction isNextJs() {\n  return Object.keys(globalThis).some(key => key.startsWith('__NEXT'))\n}\n\nmodule.exports = function shouldSkipPonyfill() {\n  if (globalThis.Deno) {\n    return true\n  }\n  if (globalThis.Bun) {\n    return true\n  }\n  if (isNextJs()) {\n    return true\n  }\n  return false\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL2ZldGNoL2Rpc3Qvc2hvdWxkU2tpcFBvbnlmaWxsLmpzIiwibWFwcGluZ3MiOiI7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvaG9tZS9jZXRlYy9Ob2RlUHJvamVjdHMvYWd1aV90ZXN0L25vZGVfbW9kdWxlcy9Ad2hhdHdnLW5vZGUvZmV0Y2gvZGlzdC9zaG91bGRTa2lwUG9ueWZpbGwuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXG5mdW5jdGlvbiBpc05leHRKcygpIHtcbiAgcmV0dXJuIE9iamVjdC5rZXlzKGdsb2JhbFRoaXMpLnNvbWUoa2V5ID0+IGtleS5zdGFydHNXaXRoKCdfX05FWFQnKSlcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBzaG91bGRTa2lwUG9ueWZpbGwoKSB7XG4gIGlmIChnbG9iYWxUaGlzLkRlbm8pIHtcbiAgICByZXR1cm4gdHJ1ZVxuICB9XG4gIGlmIChnbG9iYWxUaGlzLkJ1bikge1xuICAgIHJldHVybiB0cnVlXG4gIH1cbiAgaWYgKGlzTmV4dEpzKCkpIHtcbiAgICByZXR1cm4gdHJ1ZVxuICB9XG4gIHJldHVybiBmYWxzZVxufSJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@whatwg-node/fetch/dist/shouldSkipPonyfill.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/Blob.js":
/*!**********************************************************!*\
  !*** ./node_modules/@whatwg-node/node-fetch/cjs/Blob.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PonyfillBlob = void 0;\nexports.hasBufferMethod = hasBufferMethod;\nexports.hasArrayBufferMethod = hasArrayBufferMethod;\nexports.hasBytesMethod = hasBytesMethod;\nexports.hasTextMethod = hasTextMethod;\nexports.hasSizeProperty = hasSizeProperty;\nexports.hasStreamMethod = hasStreamMethod;\nexports.hasBlobSignature = hasBlobSignature;\nexports.isArrayBuffer = isArrayBuffer;\n/* eslint-disable @typescript-eslint/no-unsafe-declaration-merging */\n/* eslint-disable @typescript-eslint/ban-ts-comment */\nconst node_buffer_1 = __webpack_require__(/*! node:buffer */ \"node:buffer\");\nconst ReadableStream_js_1 = __webpack_require__(/*! ./ReadableStream.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/ReadableStream.js\");\nconst utils_js_1 = __webpack_require__(/*! ./utils.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/utils.js\");\nfunction getBlobPartAsBuffer(blobPart) {\n    if (typeof blobPart === 'string') {\n        return node_buffer_1.Buffer.from(blobPart);\n    }\n    else if (node_buffer_1.Buffer.isBuffer(blobPart)) {\n        return blobPart;\n    }\n    else if ((0, utils_js_1.isArrayBufferView)(blobPart)) {\n        return node_buffer_1.Buffer.from(blobPart.buffer, blobPart.byteOffset, blobPart.byteLength);\n    }\n    else {\n        return node_buffer_1.Buffer.from(blobPart);\n    }\n}\nfunction hasBufferMethod(obj) {\n    return obj != null && obj.buffer != null && typeof obj.buffer === 'function';\n}\nfunction hasArrayBufferMethod(obj) {\n    return obj != null && obj.arrayBuffer != null && typeof obj.arrayBuffer === 'function';\n}\nfunction hasBytesMethod(obj) {\n    return obj != null && obj.bytes != null && typeof obj.bytes === 'function';\n}\nfunction hasTextMethod(obj) {\n    return obj != null && obj.text != null && typeof obj.text === 'function';\n}\nfunction hasSizeProperty(obj) {\n    return obj != null && typeof obj.size === 'number';\n}\nfunction hasStreamMethod(obj) {\n    return obj != null && obj.stream != null && typeof obj.stream === 'function';\n}\nfunction hasBlobSignature(obj) {\n    return obj != null && obj[Symbol.toStringTag] === 'Blob';\n}\nfunction isArrayBuffer(obj) {\n    return obj != null && obj.byteLength != null && obj.slice != null;\n}\n// Will be removed after v14 reaches EOL\n// Needed because v14 doesn't have .stream() implemented\nclass PonyfillBlob {\n    blobParts;\n    type;\n    encoding;\n    _size = null;\n    constructor(blobParts = [], options) {\n        this.blobParts = blobParts;\n        this.type = options?.type || 'application/octet-stream';\n        this.encoding = options?.encoding || 'utf8';\n        this._size = options?.size || null;\n        if (blobParts.length === 1 && hasBlobSignature(blobParts[0])) {\n            return blobParts[0];\n        }\n    }\n    _buffer = null;\n    buffer() {\n        if (this._buffer) {\n            return (0, utils_js_1.fakePromise)(this._buffer);\n        }\n        if (this.blobParts.length === 1) {\n            const blobPart = this.blobParts[0];\n            if (hasBufferMethod(blobPart)) {\n                return blobPart.buffer().then(buf => {\n                    this._buffer = buf;\n                    return this._buffer;\n                });\n            }\n            if (hasBytesMethod(blobPart)) {\n                return blobPart.bytes().then(bytes => {\n                    this._buffer = node_buffer_1.Buffer.from(bytes);\n                    return this._buffer;\n                });\n            }\n            if (hasArrayBufferMethod(blobPart)) {\n                return blobPart.arrayBuffer().then(arrayBuf => {\n                    this._buffer = node_buffer_1.Buffer.from(arrayBuf, undefined, blobPart.size);\n                    return this._buffer;\n                });\n            }\n            this._buffer = getBlobPartAsBuffer(blobPart);\n            return (0, utils_js_1.fakePromise)(this._buffer);\n        }\n        const jobs = [];\n        const bufferChunks = this.blobParts.map((blobPart, i) => {\n            if (hasBufferMethod(blobPart)) {\n                jobs.push(blobPart.buffer().then(buf => {\n                    bufferChunks[i] = buf;\n                }));\n                return undefined;\n            }\n            else if (hasArrayBufferMethod(blobPart)) {\n                jobs.push(blobPart.arrayBuffer().then(arrayBuf => {\n                    bufferChunks[i] = node_buffer_1.Buffer.from(arrayBuf, undefined, blobPart.size);\n                }));\n                return undefined;\n            }\n            else if (hasBytesMethod(blobPart)) {\n                jobs.push(blobPart.bytes().then(bytes => {\n                    bufferChunks[i] = node_buffer_1.Buffer.from(bytes);\n                }));\n                return undefined;\n            }\n            else {\n                return getBlobPartAsBuffer(blobPart);\n            }\n        });\n        if (jobs.length > 0) {\n            return Promise.all(jobs).then(() => node_buffer_1.Buffer.concat(bufferChunks, this._size || undefined));\n        }\n        return (0, utils_js_1.fakePromise)(node_buffer_1.Buffer.concat(bufferChunks, this._size || undefined));\n    }\n    arrayBuffer() {\n        if (this._buffer) {\n            // @ts-ignore - Mismatch between Buffer and ArrayBuffer\n            return (0, utils_js_1.fakePromise)(this._buffer);\n        }\n        if (this.blobParts.length === 1) {\n            if (isArrayBuffer(this.blobParts[0])) {\n                return (0, utils_js_1.fakePromise)(this.blobParts[0]);\n            }\n            if (hasArrayBufferMethod(this.blobParts[0])) {\n                return this.blobParts[0].arrayBuffer();\n            }\n        }\n        // @ts-ignore - Mismatch between Buffer and ArrayBuffer\n        return this.buffer();\n    }\n    bytes() {\n        if (this._buffer) {\n            return (0, utils_js_1.fakePromise)(this._buffer);\n        }\n        if (this.blobParts.length === 1) {\n            if (node_buffer_1.Buffer.isBuffer(this.blobParts[0])) {\n                this._buffer = this.blobParts[0];\n                return (0, utils_js_1.fakePromise)(this._buffer);\n            }\n            if (this.blobParts[0] instanceof Uint8Array) {\n                this._buffer = node_buffer_1.Buffer.from(this.blobParts[0]);\n                return (0, utils_js_1.fakePromise)(this._buffer);\n            }\n            if (hasBytesMethod(this.blobParts[0])) {\n                return this.blobParts[0].bytes();\n            }\n            if (hasBufferMethod(this.blobParts[0])) {\n                return this.blobParts[0].buffer();\n            }\n        }\n        return this.buffer();\n    }\n    _text = null;\n    text() {\n        if (this._text) {\n            return (0, utils_js_1.fakePromise)(this._text);\n        }\n        if (this.blobParts.length === 1) {\n            const blobPart = this.blobParts[0];\n            if (typeof blobPart === 'string') {\n                this._text = blobPart;\n                return (0, utils_js_1.fakePromise)(this._text);\n            }\n            if (hasTextMethod(blobPart)) {\n                return blobPart.text().then(text => {\n                    this._text = text;\n                    return this._text;\n                });\n            }\n            const buf = getBlobPartAsBuffer(blobPart);\n            this._text = buf.toString(this.encoding);\n            return (0, utils_js_1.fakePromise)(this._text);\n        }\n        return this.buffer().then(buf => {\n            this._text = buf.toString(this.encoding);\n            return this._text;\n        });\n    }\n    _json = null;\n    json() {\n        if (this._json) {\n            return (0, utils_js_1.fakePromise)(this._json);\n        }\n        return this.text().then(text => {\n            this._json = JSON.parse(text);\n            return this._json;\n        });\n    }\n    _formData = null;\n    formData() {\n        if (this._formData) {\n            return (0, utils_js_1.fakePromise)(this._formData);\n        }\n        throw new Error('Not implemented');\n    }\n    get size() {\n        if (this._size == null) {\n            this._size = 0;\n            for (const blobPart of this.blobParts) {\n                if (typeof blobPart === 'string') {\n                    this._size += node_buffer_1.Buffer.byteLength(blobPart);\n                }\n                else if (hasSizeProperty(blobPart)) {\n                    this._size += blobPart.size;\n                }\n                else if ((0, utils_js_1.isArrayBufferView)(blobPart)) {\n                    this._size += blobPart.byteLength;\n                }\n            }\n        }\n        return this._size;\n    }\n    stream() {\n        if (this.blobParts.length === 1) {\n            const blobPart = this.blobParts[0];\n            if (hasStreamMethod(blobPart)) {\n                return blobPart.stream();\n            }\n            const buf = getBlobPartAsBuffer(blobPart);\n            return new ReadableStream_js_1.PonyfillReadableStream({\n                start: controller => {\n                    controller.enqueue(buf);\n                    controller.close();\n                },\n            });\n        }\n        if (this._buffer != null) {\n            return new ReadableStream_js_1.PonyfillReadableStream({\n                start: controller => {\n                    controller.enqueue(this._buffer);\n                    controller.close();\n                },\n            });\n        }\n        let blobPartIterator;\n        return new ReadableStream_js_1.PonyfillReadableStream({\n            start: controller => {\n                if (this.blobParts.length === 0) {\n                    controller.close();\n                    return;\n                }\n                blobPartIterator = this.blobParts[Symbol.iterator]();\n            },\n            pull: controller => {\n                const { value: blobPart, done } = blobPartIterator.next();\n                if (done) {\n                    controller.close();\n                    return;\n                }\n                if (blobPart) {\n                    if (hasBufferMethod(blobPart)) {\n                        return blobPart.buffer().then(buf => {\n                            controller.enqueue(buf);\n                        });\n                    }\n                    if (hasBytesMethod(blobPart)) {\n                        return blobPart.bytes().then(bytes => {\n                            const buf = node_buffer_1.Buffer.from(bytes);\n                            controller.enqueue(buf);\n                        });\n                    }\n                    if (hasArrayBufferMethod(blobPart)) {\n                        return blobPart.arrayBuffer().then(arrayBuffer => {\n                            const buf = node_buffer_1.Buffer.from(arrayBuffer, undefined, blobPart.size);\n                            controller.enqueue(buf);\n                        });\n                    }\n                    const buf = getBlobPartAsBuffer(blobPart);\n                    controller.enqueue(buf);\n                }\n            },\n        });\n    }\n    slice() {\n        throw new Error('Not implemented');\n    }\n}\nexports.PonyfillBlob = PonyfillBlob;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/Blob.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/Body.js":
/*!**********************************************************!*\
  !*** ./node_modules/@whatwg-node/node-fetch/cjs/Body.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PonyfillBody = void 0;\n/* eslint-disable @typescript-eslint/ban-ts-comment */\nconst node_buffer_1 = __webpack_require__(/*! node:buffer */ \"node:buffer\");\nconst node_stream_1 = __webpack_require__(/*! node:stream */ \"node:stream\");\nconst busboy_1 = __webpack_require__(/*! @fastify/busboy */ \"(rsc)/./node_modules/@fastify/busboy/lib/main.js\");\nconst promise_helpers_1 = __webpack_require__(/*! @whatwg-node/promise-helpers */ \"(rsc)/./node_modules/@whatwg-node/promise-helpers/cjs/index.js\");\nconst Blob_js_1 = __webpack_require__(/*! ./Blob.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/Blob.js\");\nconst File_js_1 = __webpack_require__(/*! ./File.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/File.js\");\nconst FormData_js_1 = __webpack_require__(/*! ./FormData.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/FormData.js\");\nconst ReadableStream_js_1 = __webpack_require__(/*! ./ReadableStream.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/ReadableStream.js\");\nconst utils_js_1 = __webpack_require__(/*! ./utils.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/utils.js\");\nvar BodyInitType;\n(function (BodyInitType) {\n    BodyInitType[\"ReadableStream\"] = \"ReadableStream\";\n    BodyInitType[\"Blob\"] = \"Blob\";\n    BodyInitType[\"FormData\"] = \"FormData\";\n    BodyInitType[\"String\"] = \"String\";\n    BodyInitType[\"Readable\"] = \"Readable\";\n    BodyInitType[\"Buffer\"] = \"Buffer\";\n    BodyInitType[\"AsyncIterable\"] = \"AsyncIterable\";\n})(BodyInitType || (BodyInitType = {}));\nclass PonyfillBody {\n    bodyInit;\n    options;\n    bodyUsed = false;\n    contentType = null;\n    contentLength = null;\n    constructor(bodyInit, options = {}) {\n        this.bodyInit = bodyInit;\n        this.options = options;\n        const { bodyFactory, contentType, contentLength, bodyType, buffer } = processBodyInit(bodyInit);\n        this._bodyFactory = bodyFactory;\n        this.contentType = contentType;\n        this.contentLength = contentLength;\n        this.bodyType = bodyType;\n        this._buffer = buffer;\n        this._signal = options.signal;\n    }\n    bodyType;\n    _bodyFactory = () => null;\n    _generatedBody = null;\n    _buffer;\n    _signal;\n    generateBody() {\n        if (this._generatedBody?.readable?.destroyed && this._buffer) {\n            this._generatedBody.readable = node_stream_1.Readable.from(this._buffer);\n        }\n        if (this._generatedBody) {\n            return this._generatedBody;\n        }\n        const body = this._bodyFactory();\n        this._generatedBody = body;\n        return body;\n    }\n    handleContentLengthHeader(forceSet = false) {\n        const contentTypeInHeaders = this.headers.get('content-type');\n        if (!contentTypeInHeaders) {\n            if (this.contentType) {\n                this.headers.set('content-type', this.contentType);\n            }\n        }\n        else {\n            this.contentType = contentTypeInHeaders;\n        }\n        const contentLengthInHeaders = this.headers.get('content-length');\n        if (forceSet && this.bodyInit == null && !contentLengthInHeaders) {\n            this.contentLength = 0;\n            this.headers.set('content-length', '0');\n        }\n        if (!contentLengthInHeaders) {\n            if (this.contentLength) {\n                this.headers.set('content-length', this.contentLength.toString());\n            }\n        }\n        else {\n            this.contentLength = parseInt(contentLengthInHeaders, 10);\n        }\n    }\n    get body() {\n        const _body = this.generateBody();\n        if (_body != null) {\n            const ponyfillReadableStream = _body;\n            const readable = _body.readable;\n            return new Proxy(_body.readable, {\n                get(_, prop) {\n                    if (prop in ponyfillReadableStream) {\n                        const ponyfillReadableStreamProp = ponyfillReadableStream[prop];\n                        if (typeof ponyfillReadableStreamProp === 'function') {\n                            return ponyfillReadableStreamProp.bind(ponyfillReadableStream);\n                        }\n                        return ponyfillReadableStreamProp;\n                    }\n                    if (prop in readable) {\n                        const readableProp = readable[prop];\n                        if (typeof readableProp === 'function') {\n                            return readableProp.bind(readable);\n                        }\n                        return readableProp;\n                    }\n                },\n            });\n        }\n        return null;\n    }\n    _chunks = null;\n    _doCollectChunksFromReadableJob() {\n        if (this.bodyType === BodyInitType.AsyncIterable) {\n            if (Array.fromAsync) {\n                return (0, promise_helpers_1.handleMaybePromise)(() => Array.fromAsync(this.bodyInit), chunks => {\n                    this._chunks = chunks;\n                    return this._chunks;\n                });\n            }\n            const iterator = this.bodyInit[Symbol.asyncIterator]();\n            const chunks = [];\n            const collectValue = () => (0, promise_helpers_1.handleMaybePromise)(() => iterator.next(), ({ value, done }) => {\n                if (value) {\n                    chunks.push(value);\n                }\n                if (!done) {\n                    return collectValue();\n                }\n                this._chunks = chunks;\n                return this._chunks;\n            });\n            return collectValue();\n        }\n        const _body = this.generateBody();\n        if (!_body) {\n            this._chunks = [];\n            return (0, utils_js_1.fakePromise)(this._chunks);\n        }\n        if (_body.readable.destroyed) {\n            return (0, utils_js_1.fakePromise)((this._chunks = []));\n        }\n        const chunks = [];\n        return new Promise((resolve, reject) => {\n            _body.readable.on('data', chunk => {\n                chunks.push(chunk);\n            });\n            _body.readable.once('error', reject);\n            _body.readable.once('end', () => {\n                resolve((this._chunks = chunks));\n            });\n        });\n    }\n    _collectChunksFromReadable() {\n        if (this._chunks) {\n            return (0, utils_js_1.fakePromise)(this._chunks);\n        }\n        this._chunks ||= this._doCollectChunksFromReadableJob();\n        return this._chunks;\n    }\n    _blob = null;\n    blob() {\n        if (this._blob) {\n            return (0, utils_js_1.fakePromise)(this._blob);\n        }\n        if (this.bodyType === BodyInitType.String) {\n            this._text = this.bodyInit;\n            this._blob = new Blob_js_1.PonyfillBlob([this._text], {\n                type: this.contentType || 'text/plain;charset=UTF-8',\n                size: this.contentLength,\n            });\n        }\n        if (this.bodyType === BodyInitType.Blob) {\n            this._blob = this.bodyInit;\n            return (0, utils_js_1.fakePromise)(this._blob);\n        }\n        if (this._buffer) {\n            this._blob = new Blob_js_1.PonyfillBlob([this._buffer], {\n                type: this.contentType || '',\n                size: this.contentLength,\n            });\n            return (0, utils_js_1.fakePromise)(this._blob);\n        }\n        return (0, utils_js_1.fakePromise)((0, promise_helpers_1.handleMaybePromise)(() => this._collectChunksFromReadable(), chunks => {\n            this._blob = new Blob_js_1.PonyfillBlob(chunks, {\n                type: this.contentType || '',\n                size: this.contentLength,\n            });\n            return this._blob;\n        }));\n    }\n    _formData = null;\n    formData(opts) {\n        if (this._formData) {\n            return (0, utils_js_1.fakePromise)(this._formData);\n        }\n        if (this.bodyType === BodyInitType.FormData) {\n            this._formData = this.bodyInit;\n            return (0, utils_js_1.fakePromise)(this._formData);\n        }\n        this._formData = new FormData_js_1.PonyfillFormData();\n        const _body = this.generateBody();\n        if (_body == null) {\n            return (0, utils_js_1.fakePromise)(this._formData);\n        }\n        const formDataLimits = {\n            ...this.options.formDataLimits,\n            ...opts?.formDataLimits,\n        };\n        return new Promise((resolve, reject) => {\n            const stream = this.body?.readable;\n            if (!stream) {\n                return reject(new Error('No stream available'));\n            }\n            // form data file that is currently being processed, it's\n            // important to keep track of it in case the stream ends early\n            let currFile = null;\n            const bb = new busboy_1.Busboy({\n                headers: {\n                    'content-length': typeof this.contentLength === 'number'\n                        ? this.contentLength.toString()\n                        : this.contentLength || '',\n                    'content-type': this.contentType || '',\n                },\n                limits: formDataLimits,\n                defCharset: 'utf-8',\n            });\n            if (this._signal) {\n                (0, node_stream_1.addAbortSignal)(this._signal, bb);\n            }\n            let completed = false;\n            const complete = (err) => {\n                if (completed)\n                    return;\n                completed = true;\n                stream.unpipe(bb);\n                bb.destroy();\n                if (currFile) {\n                    currFile.destroy();\n                    currFile = null;\n                }\n                if (err) {\n                    reject(err);\n                }\n                else {\n                    // no error occured, this is a successful end/complete/finish\n                    resolve(this._formData);\n                }\n            };\n            // we dont need to listen to the stream close event because bb will close or error when necessary\n            // stream.on('close', complete);\n            // stream can be aborted, for example\n            stream.on('error', complete);\n            bb.on('field', (name, value, fieldnameTruncated, valueTruncated) => {\n                if (fieldnameTruncated) {\n                    return complete(new Error(`Field name size exceeded: ${formDataLimits?.fieldNameSize} bytes`));\n                }\n                if (valueTruncated) {\n                    return complete(new Error(`Field value size exceeded: ${formDataLimits?.fieldSize} bytes`));\n                }\n                this._formData.set(name, value);\n            });\n            bb.on('file', (name, fileStream, filename, _transferEncoding, mimeType) => {\n                currFile = fileStream;\n                const chunks = [];\n                fileStream.on('data', chunk => {\n                    chunks.push(chunk);\n                });\n                fileStream.on('error', complete);\n                fileStream.on('limit', () => {\n                    complete(new Error(`File size limit exceeded: ${formDataLimits?.fileSize} bytes`));\n                });\n                fileStream.on('close', () => {\n                    if (fileStream.truncated) {\n                        complete(new Error(`File size limit exceeded: ${formDataLimits?.fileSize} bytes`));\n                    }\n                    currFile = null;\n                    const file = new File_js_1.PonyfillFile(chunks, filename, { type: mimeType });\n                    this._formData.set(name, file);\n                });\n            });\n            bb.on('fieldsLimit', () => {\n                complete(new Error(`Fields limit exceeded: ${formDataLimits?.fields}`));\n            });\n            bb.on('filesLimit', () => {\n                complete(new Error(`Files limit exceeded: ${formDataLimits?.files}`));\n            });\n            bb.on('partsLimit', () => {\n                complete(new Error(`Parts limit exceeded: ${formDataLimits?.parts}`));\n            });\n            bb.on('end', complete);\n            bb.on('finish', complete);\n            bb.on('close', complete);\n            bb.on('error', complete);\n            stream.pipe(bb);\n        });\n    }\n    buffer() {\n        if (this._buffer) {\n            return (0, utils_js_1.fakePromise)(this._buffer);\n        }\n        if (this._text) {\n            this._buffer = node_buffer_1.Buffer.from(this._text, 'utf-8');\n            return (0, utils_js_1.fakePromise)(this._buffer);\n        }\n        if (this.bodyType === BodyInitType.String) {\n            return this.text().then(text => {\n                this._text = text;\n                this._buffer = node_buffer_1.Buffer.from(text, 'utf-8');\n                return this._buffer;\n            });\n        }\n        if (this.bodyType === BodyInitType.Blob) {\n            if ((0, Blob_js_1.hasBufferMethod)(this.bodyInit)) {\n                return this.bodyInit.buffer().then(buf => {\n                    this._buffer = buf;\n                    return this._buffer;\n                });\n            }\n            if ((0, Blob_js_1.hasBytesMethod)(this.bodyInit)) {\n                return this.bodyInit.bytes().then(bytes => {\n                    this._buffer = node_buffer_1.Buffer.from(bytes);\n                    return this._buffer;\n                });\n            }\n            if ((0, Blob_js_1.hasArrayBufferMethod)(this.bodyInit)) {\n                return this.bodyInit.arrayBuffer().then(buf => {\n                    this._buffer = node_buffer_1.Buffer.from(buf, undefined, buf.byteLength);\n                    return this._buffer;\n                });\n            }\n        }\n        return (0, utils_js_1.fakePromise)((0, promise_helpers_1.handleMaybePromise)(() => this._collectChunksFromReadable(), chunks => {\n            if (chunks.length === 1) {\n                this._buffer = chunks[0];\n                return this._buffer;\n            }\n            this._buffer = node_buffer_1.Buffer.concat(chunks);\n            return this._buffer;\n        }));\n    }\n    bytes() {\n        return this.buffer();\n    }\n    arrayBuffer() {\n        // @ts-ignore - Mismatch between Buffer and ArrayBuffer\n        return this.buffer();\n    }\n    _json = null;\n    json() {\n        if (this._json) {\n            return (0, utils_js_1.fakePromise)(this._json);\n        }\n        return this.text().then(text => {\n            try {\n                this._json = JSON.parse(text);\n            }\n            catch (e) {\n                if (e instanceof SyntaxError) {\n                    e.message += `, \"${text}\" is not valid JSON`;\n                }\n                throw e;\n            }\n            return this._json;\n        });\n    }\n    _text = null;\n    text() {\n        if (this._text) {\n            return (0, utils_js_1.fakePromise)(this._text);\n        }\n        if (this.bodyType === BodyInitType.String) {\n            this._text = this.bodyInit;\n            return (0, utils_js_1.fakePromise)(this._text);\n        }\n        return this.buffer().then(buffer => {\n            this._text = buffer.toString('utf-8');\n            return this._text;\n        });\n    }\n}\nexports.PonyfillBody = PonyfillBody;\nfunction processBodyInit(bodyInit) {\n    if (bodyInit == null) {\n        return {\n            bodyFactory: () => null,\n            contentType: null,\n            contentLength: null,\n        };\n    }\n    if (typeof bodyInit === 'string') {\n        const contentLength = node_buffer_1.Buffer.byteLength(bodyInit);\n        return {\n            bodyType: BodyInitType.String,\n            contentType: 'text/plain;charset=UTF-8',\n            contentLength,\n            bodyFactory() {\n                const readable = node_stream_1.Readable.from(node_buffer_1.Buffer.from(bodyInit, 'utf-8'));\n                return new ReadableStream_js_1.PonyfillReadableStream(readable);\n            },\n        };\n    }\n    if (node_buffer_1.Buffer.isBuffer(bodyInit)) {\n        const buffer = bodyInit;\n        return {\n            bodyType: BodyInitType.Buffer,\n            contentType: null,\n            contentLength: bodyInit.length,\n            buffer: bodyInit,\n            bodyFactory() {\n                const readable = node_stream_1.Readable.from(buffer);\n                const body = new ReadableStream_js_1.PonyfillReadableStream(readable);\n                return body;\n            },\n        };\n    }\n    if ((0, utils_js_1.isArrayBufferView)(bodyInit)) {\n        const buffer = node_buffer_1.Buffer.from(bodyInit.buffer, bodyInit.byteOffset, bodyInit.byteLength);\n        return {\n            bodyType: BodyInitType.Buffer,\n            contentLength: bodyInit.byteLength,\n            contentType: null,\n            buffer,\n            bodyFactory() {\n                const readable = node_stream_1.Readable.from(buffer);\n                const body = new ReadableStream_js_1.PonyfillReadableStream(readable);\n                return body;\n            },\n        };\n    }\n    if (bodyInit instanceof ReadableStream_js_1.PonyfillReadableStream && bodyInit.readable != null) {\n        const readableStream = bodyInit;\n        return {\n            bodyType: BodyInitType.ReadableStream,\n            bodyFactory: () => readableStream,\n            contentType: null,\n            contentLength: null,\n        };\n    }\n    if (isBlob(bodyInit)) {\n        const blob = bodyInit;\n        return {\n            bodyType: BodyInitType.Blob,\n            contentType: bodyInit.type,\n            contentLength: bodyInit.size,\n            bodyFactory() {\n                return blob.stream();\n            },\n        };\n    }\n    if (bodyInit instanceof ArrayBuffer) {\n        const contentLength = bodyInit.byteLength;\n        const buffer = node_buffer_1.Buffer.from(bodyInit, undefined, bodyInit.byteLength);\n        return {\n            bodyType: BodyInitType.Buffer,\n            contentType: null,\n            contentLength,\n            buffer,\n            bodyFactory() {\n                const readable = node_stream_1.Readable.from(buffer);\n                const body = new ReadableStream_js_1.PonyfillReadableStream(readable);\n                return body;\n            },\n        };\n    }\n    if (bodyInit instanceof node_stream_1.Readable) {\n        return {\n            bodyType: BodyInitType.Readable,\n            contentType: null,\n            contentLength: null,\n            bodyFactory() {\n                const body = new ReadableStream_js_1.PonyfillReadableStream(bodyInit);\n                return body;\n            },\n        };\n    }\n    if (isURLSearchParams(bodyInit)) {\n        const contentType = 'application/x-www-form-urlencoded;charset=UTF-8';\n        return {\n            bodyType: BodyInitType.String,\n            contentType,\n            contentLength: null,\n            bodyFactory() {\n                const body = new ReadableStream_js_1.PonyfillReadableStream(node_stream_1.Readable.from(bodyInit.toString()));\n                return body;\n            },\n        };\n    }\n    if (isFormData(bodyInit)) {\n        const boundary = Math.random().toString(36).substr(2);\n        const contentType = `multipart/form-data; boundary=${boundary}`;\n        return {\n            bodyType: BodyInitType.FormData,\n            contentType,\n            contentLength: null,\n            bodyFactory() {\n                return (0, FormData_js_1.getStreamFromFormData)(bodyInit, boundary);\n            },\n        };\n    }\n    if (isReadableStream(bodyInit)) {\n        return {\n            contentType: null,\n            contentLength: null,\n            bodyFactory() {\n                return new ReadableStream_js_1.PonyfillReadableStream(bodyInit);\n            },\n        };\n    }\n    if (bodyInit[Symbol.iterator] || bodyInit[Symbol.asyncIterator]) {\n        return {\n            contentType: null,\n            contentLength: null,\n            bodyType: BodyInitType.AsyncIterable,\n            bodyFactory() {\n                const readable = node_stream_1.Readable.from(bodyInit);\n                return new ReadableStream_js_1.PonyfillReadableStream(readable);\n            },\n        };\n    }\n    throw new Error('Unknown body type');\n}\nfunction isFormData(value) {\n    return value?.forEach != null;\n}\nfunction isBlob(value) {\n    return value?.stream != null && typeof value.stream === 'function';\n}\nfunction isURLSearchParams(value) {\n    return value?.sort != null;\n}\nfunction isReadableStream(value) {\n    return value?.getReader != null;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/Body.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/CompressionStream.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@whatwg-node/node-fetch/cjs/CompressionStream.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PonyfillCompressionStream = void 0;\nconst node_zlib_1 = __webpack_require__(/*! node:zlib */ \"node:zlib\");\nconst TransformStream_js_1 = __webpack_require__(/*! ./TransformStream.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/TransformStream.js\");\nclass PonyfillCompressionStream extends TransformStream_js_1.PonyfillTransformStream {\n    static supportedFormats = globalThis.process?.version?.startsWith('v2')\n        ? ['gzip', 'deflate', 'br']\n        : ['gzip', 'deflate', 'deflate-raw', 'br'];\n    constructor(compressionFormat) {\n        switch (compressionFormat) {\n            case 'x-gzip':\n            case 'gzip':\n                super((0, node_zlib_1.createGzip)());\n                break;\n            case 'x-deflate':\n            case 'deflate':\n                super((0, node_zlib_1.createDeflate)());\n                break;\n            case 'deflate-raw':\n                super((0, node_zlib_1.createDeflateRaw)());\n                break;\n            case 'br':\n                super((0, node_zlib_1.createBrotliCompress)());\n                break;\n            default:\n                throw new Error(`Unsupported compression format: ${compressionFormat}`);\n        }\n    }\n}\nexports.PonyfillCompressionStream = PonyfillCompressionStream;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL25vZGUtZmV0Y2gvY2pzL0NvbXByZXNzaW9uU3RyZWFtLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGlDQUFpQztBQUNqQyxvQkFBb0IsbUJBQU8sQ0FBQyw0QkFBVztBQUN2Qyw2QkFBNkIsbUJBQU8sQ0FBQyxpR0FBc0I7QUFDM0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUVBQW1FLGtCQUFrQjtBQUNyRjtBQUNBO0FBQ0E7QUFDQSxpQ0FBaUMiLCJzb3VyY2VzIjpbIi9ob21lL2NldGVjL05vZGVQcm9qZWN0cy9hZ3VpX3Rlc3Qvbm9kZV9tb2R1bGVzL0B3aGF0d2ctbm9kZS9ub2RlLWZldGNoL2Nqcy9Db21wcmVzc2lvblN0cmVhbS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuUG9ueWZpbGxDb21wcmVzc2lvblN0cmVhbSA9IHZvaWQgMDtcbmNvbnN0IG5vZGVfemxpYl8xID0gcmVxdWlyZShcIm5vZGU6emxpYlwiKTtcbmNvbnN0IFRyYW5zZm9ybVN0cmVhbV9qc18xID0gcmVxdWlyZShcIi4vVHJhbnNmb3JtU3RyZWFtLmpzXCIpO1xuY2xhc3MgUG9ueWZpbGxDb21wcmVzc2lvblN0cmVhbSBleHRlbmRzIFRyYW5zZm9ybVN0cmVhbV9qc18xLlBvbnlmaWxsVHJhbnNmb3JtU3RyZWFtIHtcbiAgICBzdGF0aWMgc3VwcG9ydGVkRm9ybWF0cyA9IGdsb2JhbFRoaXMucHJvY2Vzcz8udmVyc2lvbj8uc3RhcnRzV2l0aCgndjInKVxuICAgICAgICA/IFsnZ3ppcCcsICdkZWZsYXRlJywgJ2JyJ11cbiAgICAgICAgOiBbJ2d6aXAnLCAnZGVmbGF0ZScsICdkZWZsYXRlLXJhdycsICdiciddO1xuICAgIGNvbnN0cnVjdG9yKGNvbXByZXNzaW9uRm9ybWF0KSB7XG4gICAgICAgIHN3aXRjaCAoY29tcHJlc3Npb25Gb3JtYXQpIHtcbiAgICAgICAgICAgIGNhc2UgJ3gtZ3ppcCc6XG4gICAgICAgICAgICBjYXNlICdnemlwJzpcbiAgICAgICAgICAgICAgICBzdXBlcigoMCwgbm9kZV96bGliXzEuY3JlYXRlR3ppcCkoKSk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlICd4LWRlZmxhdGUnOlxuICAgICAgICAgICAgY2FzZSAnZGVmbGF0ZSc6XG4gICAgICAgICAgICAgICAgc3VwZXIoKDAsIG5vZGVfemxpYl8xLmNyZWF0ZURlZmxhdGUpKCkpO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSAnZGVmbGF0ZS1yYXcnOlxuICAgICAgICAgICAgICAgIHN1cGVyKCgwLCBub2RlX3psaWJfMS5jcmVhdGVEZWZsYXRlUmF3KSgpKTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgJ2JyJzpcbiAgICAgICAgICAgICAgICBzdXBlcigoMCwgbm9kZV96bGliXzEuY3JlYXRlQnJvdGxpQ29tcHJlc3MpKCkpO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYFVuc3VwcG9ydGVkIGNvbXByZXNzaW9uIGZvcm1hdDogJHtjb21wcmVzc2lvbkZvcm1hdH1gKTtcbiAgICAgICAgfVxuICAgIH1cbn1cbmV4cG9ydHMuUG9ueWZpbGxDb21wcmVzc2lvblN0cmVhbSA9IFBvbnlmaWxsQ29tcHJlc3Npb25TdHJlYW07XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/CompressionStream.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/DecompressionStream.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@whatwg-node/node-fetch/cjs/DecompressionStream.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PonyfillDecompressionStream = void 0;\nconst node_zlib_1 = __webpack_require__(/*! node:zlib */ \"node:zlib\");\nconst TransformStream_js_1 = __webpack_require__(/*! ./TransformStream.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/TransformStream.js\");\nclass PonyfillDecompressionStream extends TransformStream_js_1.PonyfillTransformStream {\n    static supportedFormats = globalThis.process?.version?.startsWith('v2')\n        ? ['gzip', 'deflate', 'br']\n        : ['gzip', 'deflate', 'deflate-raw', 'br'];\n    constructor(compressionFormat) {\n        switch (compressionFormat) {\n            case 'x-gzip':\n            case 'gzip':\n                super((0, node_zlib_1.createGunzip)());\n                break;\n            case 'x-deflate':\n            case 'deflate':\n                super((0, node_zlib_1.createInflate)());\n                break;\n            case 'deflate-raw':\n                super((0, node_zlib_1.createInflateRaw)());\n                break;\n            case 'br':\n                super((0, node_zlib_1.createBrotliDecompress)());\n                break;\n            default:\n                throw new TypeError(`Unsupported compression format: '${compressionFormat}'`);\n        }\n    }\n}\nexports.PonyfillDecompressionStream = PonyfillDecompressionStream;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL25vZGUtZmV0Y2gvY2pzL0RlY29tcHJlc3Npb25TdHJlYW0uanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsbUNBQW1DO0FBQ25DLG9CQUFvQixtQkFBTyxDQUFDLDRCQUFXO0FBQ3ZDLDZCQUE2QixtQkFBTyxDQUFDLGlHQUFzQjtBQUMzRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3RUFBd0Usa0JBQWtCO0FBQzFGO0FBQ0E7QUFDQTtBQUNBLG1DQUFtQyIsInNvdXJjZXMiOlsiL2hvbWUvY2V0ZWMvTm9kZVByb2plY3RzL2FndWlfdGVzdC9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL25vZGUtZmV0Y2gvY2pzL0RlY29tcHJlc3Npb25TdHJlYW0uanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlBvbnlmaWxsRGVjb21wcmVzc2lvblN0cmVhbSA9IHZvaWQgMDtcbmNvbnN0IG5vZGVfemxpYl8xID0gcmVxdWlyZShcIm5vZGU6emxpYlwiKTtcbmNvbnN0IFRyYW5zZm9ybVN0cmVhbV9qc18xID0gcmVxdWlyZShcIi4vVHJhbnNmb3JtU3RyZWFtLmpzXCIpO1xuY2xhc3MgUG9ueWZpbGxEZWNvbXByZXNzaW9uU3RyZWFtIGV4dGVuZHMgVHJhbnNmb3JtU3RyZWFtX2pzXzEuUG9ueWZpbGxUcmFuc2Zvcm1TdHJlYW0ge1xuICAgIHN0YXRpYyBzdXBwb3J0ZWRGb3JtYXRzID0gZ2xvYmFsVGhpcy5wcm9jZXNzPy52ZXJzaW9uPy5zdGFydHNXaXRoKCd2MicpXG4gICAgICAgID8gWydnemlwJywgJ2RlZmxhdGUnLCAnYnInXVxuICAgICAgICA6IFsnZ3ppcCcsICdkZWZsYXRlJywgJ2RlZmxhdGUtcmF3JywgJ2JyJ107XG4gICAgY29uc3RydWN0b3IoY29tcHJlc3Npb25Gb3JtYXQpIHtcbiAgICAgICAgc3dpdGNoIChjb21wcmVzc2lvbkZvcm1hdCkge1xuICAgICAgICAgICAgY2FzZSAneC1nemlwJzpcbiAgICAgICAgICAgIGNhc2UgJ2d6aXAnOlxuICAgICAgICAgICAgICAgIHN1cGVyKCgwLCBub2RlX3psaWJfMS5jcmVhdGVHdW56aXApKCkpO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSAneC1kZWZsYXRlJzpcbiAgICAgICAgICAgIGNhc2UgJ2RlZmxhdGUnOlxuICAgICAgICAgICAgICAgIHN1cGVyKCgwLCBub2RlX3psaWJfMS5jcmVhdGVJbmZsYXRlKSgpKTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgJ2RlZmxhdGUtcmF3JzpcbiAgICAgICAgICAgICAgICBzdXBlcigoMCwgbm9kZV96bGliXzEuY3JlYXRlSW5mbGF0ZVJhdykoKSk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlICdicic6XG4gICAgICAgICAgICAgICAgc3VwZXIoKDAsIG5vZGVfemxpYl8xLmNyZWF0ZUJyb3RsaURlY29tcHJlc3MpKCkpO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKGBVbnN1cHBvcnRlZCBjb21wcmVzc2lvbiBmb3JtYXQ6ICcke2NvbXByZXNzaW9uRm9ybWF0fSdgKTtcbiAgICAgICAgfVxuICAgIH1cbn1cbmV4cG9ydHMuUG9ueWZpbGxEZWNvbXByZXNzaW9uU3RyZWFtID0gUG9ueWZpbGxEZWNvbXByZXNzaW9uU3RyZWFtO1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/DecompressionStream.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/File.js":
/*!**********************************************************!*\
  !*** ./node_modules/@whatwg-node/node-fetch/cjs/File.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PonyfillFile = void 0;\nconst Blob_js_1 = __webpack_require__(/*! ./Blob.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/Blob.js\");\nclass PonyfillFile extends Blob_js_1.PonyfillBlob {\n    name;\n    lastModified;\n    constructor(fileBits, name, options) {\n        super(fileBits, options);\n        this.name = name;\n        this.lastModified = options?.lastModified || Date.now();\n    }\n    webkitRelativePath = '';\n}\nexports.PonyfillFile = PonyfillFile;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL25vZGUtZmV0Y2gvY2pzL0ZpbGUuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsb0JBQW9CO0FBQ3BCLGtCQUFrQixtQkFBTyxDQUFDLDJFQUFXO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CIiwic291cmNlcyI6WyIvaG9tZS9jZXRlYy9Ob2RlUHJvamVjdHMvYWd1aV90ZXN0L25vZGVfbW9kdWxlcy9Ad2hhdHdnLW5vZGUvbm9kZS1mZXRjaC9janMvRmlsZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuUG9ueWZpbGxGaWxlID0gdm9pZCAwO1xuY29uc3QgQmxvYl9qc18xID0gcmVxdWlyZShcIi4vQmxvYi5qc1wiKTtcbmNsYXNzIFBvbnlmaWxsRmlsZSBleHRlbmRzIEJsb2JfanNfMS5Qb255ZmlsbEJsb2Ige1xuICAgIG5hbWU7XG4gICAgbGFzdE1vZGlmaWVkO1xuICAgIGNvbnN0cnVjdG9yKGZpbGVCaXRzLCBuYW1lLCBvcHRpb25zKSB7XG4gICAgICAgIHN1cGVyKGZpbGVCaXRzLCBvcHRpb25zKTtcbiAgICAgICAgdGhpcy5uYW1lID0gbmFtZTtcbiAgICAgICAgdGhpcy5sYXN0TW9kaWZpZWQgPSBvcHRpb25zPy5sYXN0TW9kaWZpZWQgfHwgRGF0ZS5ub3coKTtcbiAgICB9XG4gICAgd2Via2l0UmVsYXRpdmVQYXRoID0gJyc7XG59XG5leHBvcnRzLlBvbnlmaWxsRmlsZSA9IFBvbnlmaWxsRmlsZTtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/File.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/FormData.js":
/*!**************************************************************!*\
  !*** ./node_modules/@whatwg-node/node-fetch/cjs/FormData.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PonyfillFormData = void 0;\nexports.getStreamFromFormData = getStreamFromFormData;\nconst node_buffer_1 = __webpack_require__(/*! node:buffer */ \"node:buffer\");\nconst IteratorObject_js_1 = __webpack_require__(/*! ./IteratorObject.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/IteratorObject.js\");\nconst ReadableStream_js_1 = __webpack_require__(/*! ./ReadableStream.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/ReadableStream.js\");\nclass PonyfillFormData {\n    map = new Map();\n    append(name, value, fileName) {\n        let values = this.map.get(name);\n        if (!values) {\n            values = [];\n            this.map.set(name, values);\n        }\n        const entry = isBlob(value)\n            ? getNormalizedFile(name, value, fileName)\n            : value;\n        values.push(entry);\n    }\n    delete(name) {\n        this.map.delete(name);\n    }\n    get(name) {\n        const values = this.map.get(name);\n        return values ? values[0] : null;\n    }\n    getAll(name) {\n        return this.map.get(name) || [];\n    }\n    has(name) {\n        return this.map.has(name);\n    }\n    set(name, value, fileName) {\n        const entry = isBlob(value)\n            ? getNormalizedFile(name, value, fileName)\n            : value;\n        this.map.set(name, [entry]);\n    }\n    [Symbol.iterator]() {\n        return this._entries();\n    }\n    *_entries() {\n        for (const [key, values] of this.map) {\n            for (const value of values) {\n                yield [key, value];\n            }\n        }\n    }\n    entries() {\n        return new IteratorObject_js_1.PonyfillIteratorObject(this._entries(), 'FormDataIterator');\n    }\n    _keys() {\n        return this.map.keys();\n    }\n    keys() {\n        return new IteratorObject_js_1.PonyfillIteratorObject(this._keys(), 'FormDataIterator');\n    }\n    *_values() {\n        for (const values of this.map.values()) {\n            for (const value of values) {\n                yield value;\n            }\n        }\n    }\n    values() {\n        return new IteratorObject_js_1.PonyfillIteratorObject(this._values(), 'FormDataIterator');\n    }\n    forEach(callback) {\n        for (const [key, value] of this) {\n            callback(value, key, this);\n        }\n    }\n}\nexports.PonyfillFormData = PonyfillFormData;\nfunction getStreamFromFormData(formData, boundary = '---') {\n    let entriesIterator;\n    let sentInitialHeader = false;\n    let currentAsyncIterator;\n    let hasBefore = false;\n    function handleNextEntry(controller) {\n        const { done, value } = entriesIterator.next();\n        if (done) {\n            controller.enqueue(node_buffer_1.Buffer.from(`\\r\\n--${boundary}--\\r\\n`));\n            return controller.close();\n        }\n        if (hasBefore) {\n            controller.enqueue(node_buffer_1.Buffer.from(`\\r\\n--${boundary}\\r\\n`));\n        }\n        if (value) {\n            const [key, blobOrString] = value;\n            if (typeof blobOrString === 'string') {\n                controller.enqueue(node_buffer_1.Buffer.from(`Content-Disposition: form-data; name=\"${key}\"\\r\\n\\r\\n`));\n                controller.enqueue(node_buffer_1.Buffer.from(blobOrString));\n            }\n            else {\n                let filenamePart = '';\n                if (blobOrString.name) {\n                    filenamePart = `; filename=\"${blobOrString.name}\"`;\n                }\n                controller.enqueue(node_buffer_1.Buffer.from(`Content-Disposition: form-data; name=\"${key}\"${filenamePart}\\r\\n`));\n                controller.enqueue(node_buffer_1.Buffer.from(`Content-Type: ${blobOrString.type || 'application/octet-stream'}\\r\\n\\r\\n`));\n                const entryStream = blobOrString.stream();\n                // @ts-expect-error - ReadableStream is async iterable\n                currentAsyncIterator = entryStream[Symbol.asyncIterator]();\n            }\n            hasBefore = true;\n        }\n    }\n    return new ReadableStream_js_1.PonyfillReadableStream({\n        start: () => {\n            entriesIterator = formData.entries();\n        },\n        pull: controller => {\n            if (!sentInitialHeader) {\n                sentInitialHeader = true;\n                return controller.enqueue(node_buffer_1.Buffer.from(`--${boundary}\\r\\n`));\n            }\n            if (currentAsyncIterator) {\n                return currentAsyncIterator.next().then(({ done, value }) => {\n                    if (done) {\n                        currentAsyncIterator = undefined;\n                    }\n                    if (value) {\n                        return controller.enqueue(value);\n                    }\n                    else {\n                        return handleNextEntry(controller);\n                    }\n                });\n            }\n            return handleNextEntry(controller);\n        },\n        cancel: err => {\n            entriesIterator?.return?.(err);\n            currentAsyncIterator?.return?.(err);\n        },\n    });\n}\nfunction getNormalizedFile(name, blob, fileName) {\n    Object.defineProperty(blob, 'name', {\n        configurable: true,\n        enumerable: true,\n        value: fileName || blob.name || name,\n    });\n    return blob;\n}\nfunction isBlob(value) {\n    return value?.arrayBuffer != null;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/FormData.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/Headers.js":
/*!*************************************************************!*\
  !*** ./node_modules/@whatwg-node/node-fetch/cjs/Headers.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PonyfillHeaders = void 0;\nexports.isHeadersLike = isHeadersLike;\nconst node_util_1 = __webpack_require__(/*! node:util */ \"node:util\");\nconst IteratorObject_js_1 = __webpack_require__(/*! ./IteratorObject.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/IteratorObject.js\");\nfunction isHeadersLike(headers) {\n    return headers?.get && headers?.forEach;\n}\nclass PonyfillHeaders {\n    headersInit;\n    _map;\n    objectNormalizedKeysOfHeadersInit = [];\n    objectOriginalKeysOfHeadersInit = [];\n    _setCookies;\n    constructor(headersInit) {\n        this.headersInit = headersInit;\n    }\n    // perf: we don't need to build `this.map` for Requests, as we can access the headers directly\n    _get(key) {\n        const normalized = key.toLowerCase();\n        if (normalized === 'set-cookie' && this._setCookies?.length) {\n            return this._setCookies.join(', ');\n        }\n        // If the map is built, reuse it\n        if (this._map) {\n            return this._map.get(normalized) || null;\n        }\n        // If the map is not built, try to get the value from the this.headersInit\n        if (this.headersInit == null) {\n            return null;\n        }\n        if (Array.isArray(this.headersInit)) {\n            const found = this.headersInit.filter(([headerKey]) => headerKey.toLowerCase() === normalized);\n            if (found.length === 0) {\n                return null;\n            }\n            if (found.length === 1) {\n                return found[0][1];\n            }\n            return found.map(([, value]) => value).join(', ');\n        }\n        else if (isHeadersLike(this.headersInit)) {\n            return this.headersInit.get(normalized);\n        }\n        else {\n            const initValue = this.headersInit[key] || this.headersInit[normalized];\n            if (initValue != null) {\n                return initValue;\n            }\n            if (!this.objectNormalizedKeysOfHeadersInit.length) {\n                Object.keys(this.headersInit).forEach(k => {\n                    this.objectOriginalKeysOfHeadersInit.push(k);\n                    this.objectNormalizedKeysOfHeadersInit.push(k.toLowerCase());\n                });\n            }\n            const index = this.objectNormalizedKeysOfHeadersInit.indexOf(normalized);\n            if (index === -1) {\n                return null;\n            }\n            const originalKey = this.objectOriginalKeysOfHeadersInit[index];\n            return this.headersInit[originalKey];\n        }\n    }\n    // perf: Build the map of headers lazily, only when we need to access all headers or write to it.\n    // I could do a getter here, but I'm too lazy to type `getter`.\n    getMap() {\n        if (!this._map) {\n            this._setCookies ||= [];\n            if (this.headersInit != null) {\n                if (Array.isArray(this.headersInit)) {\n                    this._map = new Map();\n                    for (const [key, value] of this.headersInit) {\n                        const normalizedKey = key.toLowerCase();\n                        if (normalizedKey === 'set-cookie') {\n                            if (Array.isArray(value)) {\n                                this._setCookies.push(...value);\n                            }\n                            else if (value != null) {\n                                this._setCookies.push(value);\n                            }\n                            continue;\n                        }\n                        this._map.set(normalizedKey, value);\n                    }\n                }\n                else if (isHeadersLike(this.headersInit)) {\n                    this._map = new Map();\n                    this.headersInit.forEach((value, key) => {\n                        if (key === 'set-cookie') {\n                            this._setCookies ||= [];\n                            if (Array.isArray(value)) {\n                                this._setCookies.push(...value);\n                            }\n                            else if (value != null) {\n                                this._setCookies.push(value);\n                            }\n                            return;\n                        }\n                        this._map.set(key, value);\n                    });\n                }\n                else {\n                    this._map = new Map();\n                    for (const initKey in this.headersInit) {\n                        const initValue = this.headersInit[initKey];\n                        if (initValue != null) {\n                            const normalizedKey = initKey.toLowerCase();\n                            if (normalizedKey === 'set-cookie') {\n                                this._setCookies ||= [];\n                                if (Array.isArray(initValue)) {\n                                    this._setCookies.push(...initValue);\n                                    continue;\n                                }\n                                this._setCookies.push(initValue);\n                                continue;\n                            }\n                            this._map.set(normalizedKey, initValue);\n                        }\n                    }\n                }\n            }\n            else {\n                this._map = new Map();\n            }\n        }\n        return this._map;\n    }\n    append(name, value) {\n        const key = name.toLowerCase();\n        if (key === 'set-cookie') {\n            this._setCookies ||= [];\n            this._setCookies.push(value);\n            return;\n        }\n        const existingValue = this.getMap().get(key);\n        const finalValue = existingValue ? `${existingValue}, ${value}` : value;\n        this.getMap().set(key, finalValue);\n    }\n    get(name) {\n        const value = this._get(name);\n        if (value == null) {\n            return null;\n        }\n        return value.toString();\n    }\n    has(name) {\n        const key = name.toLowerCase();\n        if (key === 'set-cookie') {\n            return !!this._setCookies?.length;\n        }\n        return !!this._get(name); // we might need to check if header exists and not just check if it's not nullable\n    }\n    set(name, value) {\n        const key = name.toLowerCase();\n        if (key === 'set-cookie') {\n            this._setCookies = [value];\n            return;\n        }\n        if (!this._map && this.headersInit != null) {\n            if (Array.isArray(this.headersInit)) {\n                const found = this.headersInit.find(([headerKey]) => headerKey.toLowerCase() === key);\n                if (found) {\n                    found[1] = value;\n                }\n                else {\n                    this.headersInit.push([key, value]);\n                }\n                return;\n            }\n            else if (isHeadersLike(this.headersInit)) {\n                this.headersInit.set(key, value);\n                return;\n            }\n            else {\n                this.headersInit[key] = value;\n                return;\n            }\n        }\n        this.getMap().set(key, value);\n    }\n    delete(name) {\n        const key = name.toLowerCase();\n        if (key === 'set-cookie') {\n            this._setCookies = [];\n            return;\n        }\n        this.getMap().delete(key);\n    }\n    forEach(callback) {\n        this._setCookies?.forEach(setCookie => {\n            callback(setCookie, 'set-cookie', this);\n        });\n        if (!this._map) {\n            if (this.headersInit) {\n                if (Array.isArray(this.headersInit)) {\n                    this.headersInit.forEach(([key, value]) => {\n                        callback(value, key, this);\n                    });\n                    return;\n                }\n                if (isHeadersLike(this.headersInit)) {\n                    this.headersInit.forEach(callback);\n                    return;\n                }\n                Object.entries(this.headersInit).forEach(([key, value]) => {\n                    if (value != null) {\n                        callback(value, key, this);\n                    }\n                });\n            }\n            return;\n        }\n        this.getMap().forEach((value, key) => {\n            callback(value, key, this);\n        });\n    }\n    *_keys() {\n        if (this._setCookies?.length) {\n            yield 'set-cookie';\n        }\n        if (!this._map) {\n            if (this.headersInit) {\n                if (Array.isArray(this.headersInit)) {\n                    yield* this.headersInit.map(([key]) => key)[Symbol.iterator]();\n                    return;\n                }\n                if (isHeadersLike(this.headersInit)) {\n                    yield* this.headersInit.keys();\n                    return;\n                }\n                yield* Object.keys(this.headersInit)[Symbol.iterator]();\n                return;\n            }\n        }\n        yield* this.getMap().keys();\n    }\n    keys() {\n        return new IteratorObject_js_1.PonyfillIteratorObject(this._keys(), 'HeadersIterator');\n    }\n    *_values() {\n        if (this._setCookies?.length) {\n            yield* this._setCookies;\n        }\n        if (!this._map) {\n            if (this.headersInit) {\n                if (Array.isArray(this.headersInit)) {\n                    yield* this.headersInit.map(([, value]) => value)[Symbol.iterator]();\n                    return;\n                }\n                if (isHeadersLike(this.headersInit)) {\n                    yield* this.headersInit.values();\n                    return;\n                }\n                yield* Object.values(this.headersInit)[Symbol.iterator]();\n                return;\n            }\n        }\n        yield* this.getMap().values();\n    }\n    values() {\n        return new IteratorObject_js_1.PonyfillIteratorObject(this._values(), 'HeadersIterator');\n    }\n    *_entries() {\n        if (this._setCookies?.length) {\n            yield* this._setCookies.map(cookie => ['set-cookie', cookie]);\n        }\n        if (!this._map) {\n            if (this.headersInit) {\n                if (Array.isArray(this.headersInit)) {\n                    yield* this.headersInit;\n                    return;\n                }\n                if (isHeadersLike(this.headersInit)) {\n                    yield* this.headersInit.entries();\n                    return;\n                }\n                yield* Object.entries(this.headersInit);\n                return;\n            }\n        }\n        yield* this.getMap().entries();\n    }\n    entries() {\n        return new IteratorObject_js_1.PonyfillIteratorObject(this._entries(), 'HeadersIterator');\n    }\n    getSetCookie() {\n        if (!this._setCookies) {\n            this.getMap();\n        }\n        return this._setCookies;\n    }\n    [Symbol.iterator]() {\n        return this.entries();\n    }\n    [Symbol.for('nodejs.util.inspect.custom')]() {\n        const record = {};\n        this.forEach((value, key) => {\n            if (key === 'set-cookie') {\n                record['set-cookie'] = this._setCookies || [];\n            }\n            else {\n                record[key] = value?.includes(',') ? value.split(',').map(el => el.trim()) : value;\n            }\n        });\n        return `Headers ${(0, node_util_1.inspect)(record)}`;\n    }\n}\nexports.PonyfillHeaders = PonyfillHeaders;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/Headers.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/IteratorObject.js":
/*!********************************************************************!*\
  !*** ./node_modules/@whatwg-node/node-fetch/cjs/IteratorObject.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PonyfillIteratorObject = void 0;\nconst node_util_1 = __webpack_require__(/*! node:util */ \"node:util\");\nconst disposablestack_1 = __webpack_require__(/*! @whatwg-node/disposablestack */ \"(rsc)/./node_modules/@whatwg-node/disposablestack/cjs/index.js\");\nconst utils_js_1 = __webpack_require__(/*! ./utils.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/utils.js\");\nclass PonyfillIteratorObject {\n    iterableIterator;\n    [Symbol.toStringTag] = 'IteratorObject';\n    constructor(iterableIterator, className) {\n        this.iterableIterator = iterableIterator;\n        this[Symbol.toStringTag] = className;\n    }\n    *map(callbackfn) {\n        let index = 0;\n        for (const value of this.iterableIterator) {\n            yield callbackfn(value, index++);\n        }\n        return undefined;\n    }\n    *filter(callbackfn) {\n        let index = 0;\n        for (const value of this.iterableIterator) {\n            if (callbackfn(value, index++)) {\n                yield value;\n            }\n        }\n        return undefined;\n    }\n    reduce(callbackfn, initialValue) {\n        let index = 0;\n        let accumulator = initialValue;\n        for (const value of this.iterableIterator) {\n            accumulator = callbackfn(accumulator, value, index++);\n        }\n        return accumulator;\n    }\n    forEach(callbackfn) {\n        let index = 0;\n        for (const value of this.iterableIterator) {\n            callbackfn(value, index++);\n        }\n    }\n    *take(limit) {\n        let index = 0;\n        for (const value of this.iterableIterator) {\n            if (index >= limit) {\n                break;\n            }\n            yield value;\n            index++;\n        }\n        return undefined;\n    }\n    *drop(count) {\n        let index = 0;\n        for (const value of this.iterableIterator) {\n            if (index >= count) {\n                yield value;\n            }\n            index++;\n        }\n        return undefined;\n    }\n    *flatMap(callback) {\n        let index = 0;\n        for (const value of this.iterableIterator) {\n            const iteratorOrIterable = callback(value, index++);\n            if ((0, utils_js_1.isIterable)(iteratorOrIterable)) {\n                for (const innerValue of iteratorOrIterable) {\n                    yield innerValue;\n                }\n            }\n            else {\n                for (const innerValue of {\n                    [Symbol.iterator]: () => iteratorOrIterable,\n                }) {\n                    yield innerValue;\n                }\n            }\n        }\n        return undefined;\n    }\n    some(predicate) {\n        let index = 0;\n        for (const value of this.iterableIterator) {\n            if (predicate(value, index++)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    every(predicate) {\n        let index = 0;\n        for (const value of this.iterableIterator) {\n            if (!predicate(value, index++)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    find(predicate) {\n        let index = 0;\n        for (const value of this.iterableIterator) {\n            if (predicate(value, index++)) {\n                return value;\n            }\n        }\n        return undefined;\n    }\n    toArray() {\n        return Array.from(this.iterableIterator);\n    }\n    [disposablestack_1.DisposableSymbols.dispose]() {\n        this.iterableIterator.return?.();\n    }\n    next(...[value]) {\n        return this.iterableIterator.next(value);\n    }\n    [Symbol.iterator]() {\n        return this;\n    }\n    [Symbol.for('nodejs.util.inspect.custom')]() {\n        const record = {};\n        this.forEach((value, key) => {\n            const inspectedValue = (0, node_util_1.inspect)(value);\n            record[key] = inspectedValue.includes(',')\n                ? inspectedValue.split(',').map(el => el.trim())\n                : inspectedValue;\n        });\n        return `${this[Symbol.toStringTag]} ${(0, node_util_1.inspect)(record)}`;\n    }\n}\nexports.PonyfillIteratorObject = PonyfillIteratorObject;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL25vZGUtZmV0Y2gvY2pzL0l0ZXJhdG9yT2JqZWN0LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDhCQUE4QjtBQUM5QixvQkFBb0IsbUJBQU8sQ0FBQyw0QkFBVztBQUN2QywwQkFBMEIsbUJBQU8sQ0FBQyxvR0FBOEI7QUFDaEUsbUJBQW1CLG1CQUFPLENBQUMsNkVBQVk7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Qsa0JBQWtCLDBCQUEwQixFQUFFLGlDQUFpQztBQUMvRTtBQUNBO0FBQ0EsOEJBQThCIiwic291cmNlcyI6WyIvaG9tZS9jZXRlYy9Ob2RlUHJvamVjdHMvYWd1aV90ZXN0L25vZGVfbW9kdWxlcy9Ad2hhdHdnLW5vZGUvbm9kZS1mZXRjaC9janMvSXRlcmF0b3JPYmplY3QuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlBvbnlmaWxsSXRlcmF0b3JPYmplY3QgPSB2b2lkIDA7XG5jb25zdCBub2RlX3V0aWxfMSA9IHJlcXVpcmUoXCJub2RlOnV0aWxcIik7XG5jb25zdCBkaXNwb3NhYmxlc3RhY2tfMSA9IHJlcXVpcmUoXCJAd2hhdHdnLW5vZGUvZGlzcG9zYWJsZXN0YWNrXCIpO1xuY29uc3QgdXRpbHNfanNfMSA9IHJlcXVpcmUoXCIuL3V0aWxzLmpzXCIpO1xuY2xhc3MgUG9ueWZpbGxJdGVyYXRvck9iamVjdCB7XG4gICAgaXRlcmFibGVJdGVyYXRvcjtcbiAgICBbU3ltYm9sLnRvU3RyaW5nVGFnXSA9ICdJdGVyYXRvck9iamVjdCc7XG4gICAgY29uc3RydWN0b3IoaXRlcmFibGVJdGVyYXRvciwgY2xhc3NOYW1lKSB7XG4gICAgICAgIHRoaXMuaXRlcmFibGVJdGVyYXRvciA9IGl0ZXJhYmxlSXRlcmF0b3I7XG4gICAgICAgIHRoaXNbU3ltYm9sLnRvU3RyaW5nVGFnXSA9IGNsYXNzTmFtZTtcbiAgICB9XG4gICAgKm1hcChjYWxsYmFja2ZuKSB7XG4gICAgICAgIGxldCBpbmRleCA9IDA7XG4gICAgICAgIGZvciAoY29uc3QgdmFsdWUgb2YgdGhpcy5pdGVyYWJsZUl0ZXJhdG9yKSB7XG4gICAgICAgICAgICB5aWVsZCBjYWxsYmFja2ZuKHZhbHVlLCBpbmRleCsrKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgIH1cbiAgICAqZmlsdGVyKGNhbGxiYWNrZm4pIHtcbiAgICAgICAgbGV0IGluZGV4ID0gMDtcbiAgICAgICAgZm9yIChjb25zdCB2YWx1ZSBvZiB0aGlzLml0ZXJhYmxlSXRlcmF0b3IpIHtcbiAgICAgICAgICAgIGlmIChjYWxsYmFja2ZuKHZhbHVlLCBpbmRleCsrKSkge1xuICAgICAgICAgICAgICAgIHlpZWxkIHZhbHVlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxuICAgIHJlZHVjZShjYWxsYmFja2ZuLCBpbml0aWFsVmFsdWUpIHtcbiAgICAgICAgbGV0IGluZGV4ID0gMDtcbiAgICAgICAgbGV0IGFjY3VtdWxhdG9yID0gaW5pdGlhbFZhbHVlO1xuICAgICAgICBmb3IgKGNvbnN0IHZhbHVlIG9mIHRoaXMuaXRlcmFibGVJdGVyYXRvcikge1xuICAgICAgICAgICAgYWNjdW11bGF0b3IgPSBjYWxsYmFja2ZuKGFjY3VtdWxhdG9yLCB2YWx1ZSwgaW5kZXgrKyk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGFjY3VtdWxhdG9yO1xuICAgIH1cbiAgICBmb3JFYWNoKGNhbGxiYWNrZm4pIHtcbiAgICAgICAgbGV0IGluZGV4ID0gMDtcbiAgICAgICAgZm9yIChjb25zdCB2YWx1ZSBvZiB0aGlzLml0ZXJhYmxlSXRlcmF0b3IpIHtcbiAgICAgICAgICAgIGNhbGxiYWNrZm4odmFsdWUsIGluZGV4KyspO1xuICAgICAgICB9XG4gICAgfVxuICAgICp0YWtlKGxpbWl0KSB7XG4gICAgICAgIGxldCBpbmRleCA9IDA7XG4gICAgICAgIGZvciAoY29uc3QgdmFsdWUgb2YgdGhpcy5pdGVyYWJsZUl0ZXJhdG9yKSB7XG4gICAgICAgICAgICBpZiAoaW5kZXggPj0gbGltaXQpIHtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHlpZWxkIHZhbHVlO1xuICAgICAgICAgICAgaW5kZXgrKztcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgIH1cbiAgICAqZHJvcChjb3VudCkge1xuICAgICAgICBsZXQgaW5kZXggPSAwO1xuICAgICAgICBmb3IgKGNvbnN0IHZhbHVlIG9mIHRoaXMuaXRlcmFibGVJdGVyYXRvcikge1xuICAgICAgICAgICAgaWYgKGluZGV4ID49IGNvdW50KSB7XG4gICAgICAgICAgICAgICAgeWllbGQgdmFsdWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpbmRleCsrO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxuICAgICpmbGF0TWFwKGNhbGxiYWNrKSB7XG4gICAgICAgIGxldCBpbmRleCA9IDA7XG4gICAgICAgIGZvciAoY29uc3QgdmFsdWUgb2YgdGhpcy5pdGVyYWJsZUl0ZXJhdG9yKSB7XG4gICAgICAgICAgICBjb25zdCBpdGVyYXRvck9ySXRlcmFibGUgPSBjYWxsYmFjayh2YWx1ZSwgaW5kZXgrKyk7XG4gICAgICAgICAgICBpZiAoKDAsIHV0aWxzX2pzXzEuaXNJdGVyYWJsZSkoaXRlcmF0b3JPckl0ZXJhYmxlKSkge1xuICAgICAgICAgICAgICAgIGZvciAoY29uc3QgaW5uZXJWYWx1ZSBvZiBpdGVyYXRvck9ySXRlcmFibGUpIHtcbiAgICAgICAgICAgICAgICAgICAgeWllbGQgaW5uZXJWYWx1ZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IGlubmVyVmFsdWUgb2Yge1xuICAgICAgICAgICAgICAgICAgICBbU3ltYm9sLml0ZXJhdG9yXTogKCkgPT4gaXRlcmF0b3JPckl0ZXJhYmxlLFxuICAgICAgICAgICAgICAgIH0pIHtcbiAgICAgICAgICAgICAgICAgICAgeWllbGQgaW5uZXJWYWx1ZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9XG4gICAgc29tZShwcmVkaWNhdGUpIHtcbiAgICAgICAgbGV0IGluZGV4ID0gMDtcbiAgICAgICAgZm9yIChjb25zdCB2YWx1ZSBvZiB0aGlzLml0ZXJhYmxlSXRlcmF0b3IpIHtcbiAgICAgICAgICAgIGlmIChwcmVkaWNhdGUodmFsdWUsIGluZGV4KyspKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICBldmVyeShwcmVkaWNhdGUpIHtcbiAgICAgICAgbGV0IGluZGV4ID0gMDtcbiAgICAgICAgZm9yIChjb25zdCB2YWx1ZSBvZiB0aGlzLml0ZXJhYmxlSXRlcmF0b3IpIHtcbiAgICAgICAgICAgIGlmICghcHJlZGljYXRlKHZhbHVlLCBpbmRleCsrKSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gICAgZmluZChwcmVkaWNhdGUpIHtcbiAgICAgICAgbGV0IGluZGV4ID0gMDtcbiAgICAgICAgZm9yIChjb25zdCB2YWx1ZSBvZiB0aGlzLml0ZXJhYmxlSXRlcmF0b3IpIHtcbiAgICAgICAgICAgIGlmIChwcmVkaWNhdGUodmFsdWUsIGluZGV4KyspKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHZhbHVlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxuICAgIHRvQXJyYXkoKSB7XG4gICAgICAgIHJldHVybiBBcnJheS5mcm9tKHRoaXMuaXRlcmFibGVJdGVyYXRvcik7XG4gICAgfVxuICAgIFtkaXNwb3NhYmxlc3RhY2tfMS5EaXNwb3NhYmxlU3ltYm9scy5kaXNwb3NlXSgpIHtcbiAgICAgICAgdGhpcy5pdGVyYWJsZUl0ZXJhdG9yLnJldHVybj8uKCk7XG4gICAgfVxuICAgIG5leHQoLi4uW3ZhbHVlXSkge1xuICAgICAgICByZXR1cm4gdGhpcy5pdGVyYWJsZUl0ZXJhdG9yLm5leHQodmFsdWUpO1xuICAgIH1cbiAgICBbU3ltYm9sLml0ZXJhdG9yXSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuICAgIFtTeW1ib2wuZm9yKCdub2RlanMudXRpbC5pbnNwZWN0LmN1c3RvbScpXSgpIHtcbiAgICAgICAgY29uc3QgcmVjb3JkID0ge307XG4gICAgICAgIHRoaXMuZm9yRWFjaCgodmFsdWUsIGtleSkgPT4ge1xuICAgICAgICAgICAgY29uc3QgaW5zcGVjdGVkVmFsdWUgPSAoMCwgbm9kZV91dGlsXzEuaW5zcGVjdCkodmFsdWUpO1xuICAgICAgICAgICAgcmVjb3JkW2tleV0gPSBpbnNwZWN0ZWRWYWx1ZS5pbmNsdWRlcygnLCcpXG4gICAgICAgICAgICAgICAgPyBpbnNwZWN0ZWRWYWx1ZS5zcGxpdCgnLCcpLm1hcChlbCA9PiBlbC50cmltKCkpXG4gICAgICAgICAgICAgICAgOiBpbnNwZWN0ZWRWYWx1ZTtcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiBgJHt0aGlzW1N5bWJvbC50b1N0cmluZ1RhZ119ICR7KDAsIG5vZGVfdXRpbF8xLmluc3BlY3QpKHJlY29yZCl9YDtcbiAgICB9XG59XG5leHBvcnRzLlBvbnlmaWxsSXRlcmF0b3JPYmplY3QgPSBQb255ZmlsbEl0ZXJhdG9yT2JqZWN0O1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/IteratorObject.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/ReadableStream.js":
/*!********************************************************************!*\
  !*** ./node_modules/@whatwg-node/node-fetch/cjs/ReadableStream.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PonyfillReadableStream = void 0;\nconst node_buffer_1 = __webpack_require__(/*! node:buffer */ \"node:buffer\");\nconst node_events_1 = __webpack_require__(/*! node:events */ \"node:events\");\nconst node_stream_1 = __webpack_require__(/*! node:stream */ \"node:stream\");\nconst promises_1 = __webpack_require__(/*! node:stream/promises */ \"node:stream/promises\");\nconst promise_helpers_1 = __webpack_require__(/*! @whatwg-node/promise-helpers */ \"(rsc)/./node_modules/@whatwg-node/promise-helpers/cjs/index.js\");\nconst utils_js_1 = __webpack_require__(/*! ./utils.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/utils.js\");\nfunction createController(desiredSize, readable) {\n    let chunks = [];\n    let _closed = false;\n    let flushed = false;\n    return {\n        desiredSize,\n        enqueue(chunk) {\n            const buf = typeof chunk === 'string' ? node_buffer_1.Buffer.from(chunk) : chunk;\n            if (!flushed) {\n                chunks.push(buf);\n            }\n            else {\n                readable.push(buf);\n            }\n        },\n        close() {\n            if (chunks.length > 0) {\n                this._flush();\n            }\n            readable.push(null);\n            _closed = true;\n        },\n        error(error) {\n            if (chunks.length > 0) {\n                this._flush();\n            }\n            readable.destroy(error);\n        },\n        get _closed() {\n            return _closed;\n        },\n        _flush() {\n            flushed = true;\n            if (chunks.length > 0) {\n                const concatenated = chunks.length > 1 ? node_buffer_1.Buffer.concat(chunks) : chunks[0];\n                readable.push(concatenated);\n                chunks = [];\n            }\n        },\n    };\n}\nfunction isNodeReadable(obj) {\n    return obj?.read != null;\n}\nfunction isReadableStream(obj) {\n    return obj?.getReader != null;\n}\nclass PonyfillReadableStream {\n    readable;\n    constructor(underlyingSource) {\n        if (underlyingSource instanceof PonyfillReadableStream && underlyingSource.readable != null) {\n            this.readable = underlyingSource.readable;\n        }\n        else if (isNodeReadable(underlyingSource)) {\n            this.readable = underlyingSource;\n        }\n        else if (isReadableStream(underlyingSource)) {\n            this.readable = node_stream_1.Readable.fromWeb(underlyingSource);\n        }\n        else {\n            let started = false;\n            let ongoing = false;\n            const handleStart = (desiredSize) => {\n                if (!started) {\n                    const controller = createController(desiredSize, this.readable);\n                    started = true;\n                    return (0, promise_helpers_1.handleMaybePromise)(() => underlyingSource?.start?.(controller), () => {\n                        controller._flush();\n                        if (controller._closed) {\n                            return false;\n                        }\n                        return true;\n                    });\n                }\n                return true;\n            };\n            const readImpl = (desiredSize) => {\n                return (0, promise_helpers_1.handleMaybePromise)(() => handleStart(desiredSize), shouldContinue => {\n                    if (!shouldContinue) {\n                        return;\n                    }\n                    const controller = createController(desiredSize, this.readable);\n                    return (0, promise_helpers_1.handleMaybePromise)(() => underlyingSource?.pull?.(controller), () => {\n                        controller._flush();\n                        ongoing = false;\n                    });\n                });\n            };\n            this.readable = new node_stream_1.Readable({\n                read(desiredSize) {\n                    if (ongoing) {\n                        return;\n                    }\n                    ongoing = true;\n                    return readImpl(desiredSize);\n                },\n                destroy(err, callback) {\n                    if (underlyingSource?.cancel) {\n                        try {\n                            const res$ = underlyingSource.cancel(err);\n                            if (res$?.then) {\n                                return res$.then(() => {\n                                    callback(null);\n                                }, err => {\n                                    callback(err);\n                                });\n                            }\n                        }\n                        catch (err) {\n                            callback(err);\n                            return;\n                        }\n                    }\n                    callback(null);\n                },\n            });\n        }\n    }\n    cancel(reason) {\n        this.readable.destroy(reason);\n        // @ts-expect-error - we know it is void\n        return (0, node_events_1.once)(this.readable, 'close');\n    }\n    locked = false;\n    getReader(_options) {\n        const iterator = this.readable[Symbol.asyncIterator]();\n        this.locked = true;\n        const thisReadable = this.readable;\n        return {\n            read() {\n                return iterator.next();\n            },\n            releaseLock: () => {\n                if (iterator.return) {\n                    const retResult$ = iterator.return();\n                    if (retResult$.then) {\n                        retResult$.then(() => {\n                            this.locked = false;\n                        });\n                        return;\n                    }\n                }\n                this.locked = false;\n            },\n            cancel: reason => {\n                if (iterator.return) {\n                    const retResult$ = iterator.return(reason);\n                    if (retResult$.then) {\n                        return retResult$.then(() => {\n                            this.locked = false;\n                        });\n                    }\n                }\n                this.locked = false;\n                return (0, utils_js_1.fakePromise)();\n            },\n            get closed() {\n                return Promise.race([\n                    (0, node_events_1.once)(thisReadable, 'end'),\n                    (0, node_events_1.once)(thisReadable, 'error').then(err => Promise.reject(err)),\n                ]);\n            },\n        };\n    }\n    [Symbol.asyncIterator]() {\n        const iterator = this.readable[Symbol.asyncIterator]();\n        return {\n            [Symbol.asyncIterator]() {\n                return this;\n            },\n            next: () => iterator.next(),\n            return: () => {\n                if (!this.readable.destroyed) {\n                    this.readable.destroy();\n                }\n                return iterator.return?.() || (0, utils_js_1.fakePromise)({ done: true, value: undefined });\n            },\n            throw: (err) => {\n                if (!this.readable.destroyed) {\n                    this.readable.destroy(err);\n                }\n                return iterator.throw?.(err) || (0, utils_js_1.fakePromise)({ done: true, value: undefined });\n            },\n        };\n    }\n    tee() {\n        throw new Error('Not implemented');\n    }\n    async pipeToWriter(writer) {\n        try {\n            for await (const chunk of this) {\n                await writer.write(chunk);\n            }\n            await writer.close();\n        }\n        catch (err) {\n            await writer.abort(err);\n        }\n    }\n    pipeTo(destination) {\n        if (isPonyfillWritableStream(destination)) {\n            return (0, promises_1.pipeline)(this.readable, destination.writable, {\n                end: true,\n            });\n        }\n        else {\n            const writer = destination.getWriter();\n            return this.pipeToWriter(writer);\n        }\n    }\n    pipeThrough({ writable, readable, }) {\n        this.pipeTo(writable).catch(err => {\n            this.readable.destroy(err);\n        });\n        if (isPonyfillReadableStream(readable)) {\n            readable.readable.once('error', err => this.readable.destroy(err));\n            readable.readable.once('finish', () => this.readable.push(null));\n            readable.readable.once('close', () => this.readable.push(null));\n        }\n        return readable;\n    }\n    static [Symbol.hasInstance](instance) {\n        return isReadableStream(instance);\n    }\n    static from(iterable) {\n        return new PonyfillReadableStream(node_stream_1.Readable.from(iterable));\n    }\n    [Symbol.toStringTag] = 'ReadableStream';\n}\nexports.PonyfillReadableStream = PonyfillReadableStream;\nfunction isPonyfillReadableStream(obj) {\n    return obj?.readable != null;\n}\nfunction isPonyfillWritableStream(obj) {\n    return obj?.writable != null;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/ReadableStream.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/Request.js":
/*!*************************************************************!*\
  !*** ./node_modules/@whatwg-node/node-fetch/cjs/Request.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PonyfillRequest = void 0;\nconst node_http_1 = __webpack_require__(/*! node:http */ \"node:http\");\nconst node_https_1 = __webpack_require__(/*! node:https */ \"node:https\");\nconst Body_js_1 = __webpack_require__(/*! ./Body.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/Body.js\");\nconst Headers_js_1 = __webpack_require__(/*! ./Headers.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/Headers.js\");\nconst URL_js_1 = __webpack_require__(/*! ./URL.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/URL.js\");\nfunction isRequest(input) {\n    return input[Symbol.toStringTag] === 'Request';\n}\nfunction isURL(obj) {\n    return obj?.href != null;\n}\nclass PonyfillRequest extends Body_js_1.PonyfillBody {\n    constructor(input, options) {\n        let _url;\n        let _parsedUrl;\n        let bodyInit = null;\n        let requestInit;\n        if (typeof input === 'string') {\n            _url = input;\n        }\n        else if (isURL(input)) {\n            _parsedUrl = input;\n        }\n        else if (isRequest(input)) {\n            if (input._parsedUrl) {\n                _parsedUrl = input._parsedUrl;\n            }\n            else if (input._url) {\n                _url = input._url;\n            }\n            else {\n                _url = input.url;\n            }\n            bodyInit = input.body;\n            requestInit = input;\n        }\n        if (options != null) {\n            bodyInit = options.body || null;\n            requestInit = options;\n        }\n        super(bodyInit, requestInit);\n        this._url = _url;\n        this._parsedUrl = _parsedUrl;\n        this.cache = requestInit?.cache || 'default';\n        this.credentials = requestInit?.credentials || 'same-origin';\n        this.headers =\n            requestInit?.headers && (0, Headers_js_1.isHeadersLike)(requestInit.headers)\n                ? requestInit.headers\n                : new Headers_js_1.PonyfillHeaders(requestInit?.headers);\n        this.integrity = requestInit?.integrity || '';\n        this.keepalive = requestInit?.keepalive != null ? requestInit?.keepalive : false;\n        this.method = requestInit?.method?.toUpperCase() || 'GET';\n        this.mode = requestInit?.mode || 'cors';\n        this.redirect = requestInit?.redirect || 'follow';\n        this.referrer = requestInit?.referrer || 'about:client';\n        this.referrerPolicy = requestInit?.referrerPolicy || 'no-referrer';\n        this.headersSerializer = requestInit?.headersSerializer;\n        this.duplex = requestInit?.duplex || 'half';\n        this.destination = 'document';\n        this.priority = 'auto';\n        if (this.method !== 'GET' && this.method !== 'HEAD') {\n            this.handleContentLengthHeader(true);\n        }\n        if (requestInit?.agent != null) {\n            const protocol = _parsedUrl?.protocol || _url || this.url;\n            if (requestInit.agent === false) {\n                this.agent = false;\n            }\n            else if (protocol.startsWith('http:') && requestInit.agent instanceof node_http_1.Agent) {\n                this.agent = requestInit.agent;\n            }\n            else if (protocol.startsWith('https:') && requestInit.agent instanceof node_https_1.Agent) {\n                this.agent = requestInit.agent;\n            }\n        }\n    }\n    headersSerializer;\n    cache;\n    credentials;\n    destination;\n    headers;\n    integrity;\n    keepalive;\n    method;\n    mode;\n    priority;\n    redirect;\n    referrer;\n    referrerPolicy;\n    _url;\n    get signal() {\n        this._signal ||= new AbortController().signal;\n        return this._signal;\n    }\n    get url() {\n        if (this._url == null) {\n            if (this._parsedUrl) {\n                this._url = this._parsedUrl.toString();\n            }\n            else {\n                throw new TypeError('Invalid URL');\n            }\n        }\n        return this._url;\n    }\n    _parsedUrl;\n    get parsedUrl() {\n        if (this._parsedUrl == null) {\n            if (this._url != null) {\n                this._parsedUrl = new URL_js_1.PonyfillURL(this._url, 'http://localhost');\n            }\n            else {\n                throw new TypeError('Invalid URL');\n            }\n        }\n        return this._parsedUrl;\n    }\n    duplex;\n    agent;\n    clone() {\n        return this;\n    }\n    [Symbol.toStringTag] = 'Request';\n}\nexports.PonyfillRequest = PonyfillRequest;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL25vZGUtZmV0Y2gvY2pzL1JlcXVlc3QuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsdUJBQXVCO0FBQ3ZCLG9CQUFvQixtQkFBTyxDQUFDLDRCQUFXO0FBQ3ZDLHFCQUFxQixtQkFBTyxDQUFDLDhCQUFZO0FBQ3pDLGtCQUFrQixtQkFBTyxDQUFDLDJFQUFXO0FBQ3JDLHFCQUFxQixtQkFBTyxDQUFDLGlGQUFjO0FBQzNDLGlCQUFpQixtQkFBTyxDQUFDLHlFQUFVO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIiLCJzb3VyY2VzIjpbIi9ob21lL2NldGVjL05vZGVQcm9qZWN0cy9hZ3VpX3Rlc3Qvbm9kZV9tb2R1bGVzL0B3aGF0d2ctbm9kZS9ub2RlLWZldGNoL2Nqcy9SZXF1ZXN0LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5Qb255ZmlsbFJlcXVlc3QgPSB2b2lkIDA7XG5jb25zdCBub2RlX2h0dHBfMSA9IHJlcXVpcmUoXCJub2RlOmh0dHBcIik7XG5jb25zdCBub2RlX2h0dHBzXzEgPSByZXF1aXJlKFwibm9kZTpodHRwc1wiKTtcbmNvbnN0IEJvZHlfanNfMSA9IHJlcXVpcmUoXCIuL0JvZHkuanNcIik7XG5jb25zdCBIZWFkZXJzX2pzXzEgPSByZXF1aXJlKFwiLi9IZWFkZXJzLmpzXCIpO1xuY29uc3QgVVJMX2pzXzEgPSByZXF1aXJlKFwiLi9VUkwuanNcIik7XG5mdW5jdGlvbiBpc1JlcXVlc3QoaW5wdXQpIHtcbiAgICByZXR1cm4gaW5wdXRbU3ltYm9sLnRvU3RyaW5nVGFnXSA9PT0gJ1JlcXVlc3QnO1xufVxuZnVuY3Rpb24gaXNVUkwob2JqKSB7XG4gICAgcmV0dXJuIG9iaj8uaHJlZiAhPSBudWxsO1xufVxuY2xhc3MgUG9ueWZpbGxSZXF1ZXN0IGV4dGVuZHMgQm9keV9qc18xLlBvbnlmaWxsQm9keSB7XG4gICAgY29uc3RydWN0b3IoaW5wdXQsIG9wdGlvbnMpIHtcbiAgICAgICAgbGV0IF91cmw7XG4gICAgICAgIGxldCBfcGFyc2VkVXJsO1xuICAgICAgICBsZXQgYm9keUluaXQgPSBudWxsO1xuICAgICAgICBsZXQgcmVxdWVzdEluaXQ7XG4gICAgICAgIGlmICh0eXBlb2YgaW5wdXQgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICBfdXJsID0gaW5wdXQ7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoaXNVUkwoaW5wdXQpKSB7XG4gICAgICAgICAgICBfcGFyc2VkVXJsID0gaW5wdXQ7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoaXNSZXF1ZXN0KGlucHV0KSkge1xuICAgICAgICAgICAgaWYgKGlucHV0Ll9wYXJzZWRVcmwpIHtcbiAgICAgICAgICAgICAgICBfcGFyc2VkVXJsID0gaW5wdXQuX3BhcnNlZFVybDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYgKGlucHV0Ll91cmwpIHtcbiAgICAgICAgICAgICAgICBfdXJsID0gaW5wdXQuX3VybDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIF91cmwgPSBpbnB1dC51cmw7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBib2R5SW5pdCA9IGlucHV0LmJvZHk7XG4gICAgICAgICAgICByZXF1ZXN0SW5pdCA9IGlucHV0O1xuICAgICAgICB9XG4gICAgICAgIGlmIChvcHRpb25zICE9IG51bGwpIHtcbiAgICAgICAgICAgIGJvZHlJbml0ID0gb3B0aW9ucy5ib2R5IHx8IG51bGw7XG4gICAgICAgICAgICByZXF1ZXN0SW5pdCA9IG9wdGlvbnM7XG4gICAgICAgIH1cbiAgICAgICAgc3VwZXIoYm9keUluaXQsIHJlcXVlc3RJbml0KTtcbiAgICAgICAgdGhpcy5fdXJsID0gX3VybDtcbiAgICAgICAgdGhpcy5fcGFyc2VkVXJsID0gX3BhcnNlZFVybDtcbiAgICAgICAgdGhpcy5jYWNoZSA9IHJlcXVlc3RJbml0Py5jYWNoZSB8fCAnZGVmYXVsdCc7XG4gICAgICAgIHRoaXMuY3JlZGVudGlhbHMgPSByZXF1ZXN0SW5pdD8uY3JlZGVudGlhbHMgfHwgJ3NhbWUtb3JpZ2luJztcbiAgICAgICAgdGhpcy5oZWFkZXJzID1cbiAgICAgICAgICAgIHJlcXVlc3RJbml0Py5oZWFkZXJzICYmICgwLCBIZWFkZXJzX2pzXzEuaXNIZWFkZXJzTGlrZSkocmVxdWVzdEluaXQuaGVhZGVycylcbiAgICAgICAgICAgICAgICA/IHJlcXVlc3RJbml0LmhlYWRlcnNcbiAgICAgICAgICAgICAgICA6IG5ldyBIZWFkZXJzX2pzXzEuUG9ueWZpbGxIZWFkZXJzKHJlcXVlc3RJbml0Py5oZWFkZXJzKTtcbiAgICAgICAgdGhpcy5pbnRlZ3JpdHkgPSByZXF1ZXN0SW5pdD8uaW50ZWdyaXR5IHx8ICcnO1xuICAgICAgICB0aGlzLmtlZXBhbGl2ZSA9IHJlcXVlc3RJbml0Py5rZWVwYWxpdmUgIT0gbnVsbCA/IHJlcXVlc3RJbml0Py5rZWVwYWxpdmUgOiBmYWxzZTtcbiAgICAgICAgdGhpcy5tZXRob2QgPSByZXF1ZXN0SW5pdD8ubWV0aG9kPy50b1VwcGVyQ2FzZSgpIHx8ICdHRVQnO1xuICAgICAgICB0aGlzLm1vZGUgPSByZXF1ZXN0SW5pdD8ubW9kZSB8fCAnY29ycyc7XG4gICAgICAgIHRoaXMucmVkaXJlY3QgPSByZXF1ZXN0SW5pdD8ucmVkaXJlY3QgfHwgJ2ZvbGxvdyc7XG4gICAgICAgIHRoaXMucmVmZXJyZXIgPSByZXF1ZXN0SW5pdD8ucmVmZXJyZXIgfHwgJ2Fib3V0OmNsaWVudCc7XG4gICAgICAgIHRoaXMucmVmZXJyZXJQb2xpY3kgPSByZXF1ZXN0SW5pdD8ucmVmZXJyZXJQb2xpY3kgfHwgJ25vLXJlZmVycmVyJztcbiAgICAgICAgdGhpcy5oZWFkZXJzU2VyaWFsaXplciA9IHJlcXVlc3RJbml0Py5oZWFkZXJzU2VyaWFsaXplcjtcbiAgICAgICAgdGhpcy5kdXBsZXggPSByZXF1ZXN0SW5pdD8uZHVwbGV4IHx8ICdoYWxmJztcbiAgICAgICAgdGhpcy5kZXN0aW5hdGlvbiA9ICdkb2N1bWVudCc7XG4gICAgICAgIHRoaXMucHJpb3JpdHkgPSAnYXV0byc7XG4gICAgICAgIGlmICh0aGlzLm1ldGhvZCAhPT0gJ0dFVCcgJiYgdGhpcy5tZXRob2QgIT09ICdIRUFEJykge1xuICAgICAgICAgICAgdGhpcy5oYW5kbGVDb250ZW50TGVuZ3RoSGVhZGVyKHRydWUpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChyZXF1ZXN0SW5pdD8uYWdlbnQgIT0gbnVsbCkge1xuICAgICAgICAgICAgY29uc3QgcHJvdG9jb2wgPSBfcGFyc2VkVXJsPy5wcm90b2NvbCB8fCBfdXJsIHx8IHRoaXMudXJsO1xuICAgICAgICAgICAgaWYgKHJlcXVlc3RJbml0LmFnZW50ID09PSBmYWxzZSkge1xuICAgICAgICAgICAgICAgIHRoaXMuYWdlbnQgPSBmYWxzZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYgKHByb3RvY29sLnN0YXJ0c1dpdGgoJ2h0dHA6JykgJiYgcmVxdWVzdEluaXQuYWdlbnQgaW5zdGFuY2VvZiBub2RlX2h0dHBfMS5BZ2VudCkge1xuICAgICAgICAgICAgICAgIHRoaXMuYWdlbnQgPSByZXF1ZXN0SW5pdC5hZ2VudDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYgKHByb3RvY29sLnN0YXJ0c1dpdGgoJ2h0dHBzOicpICYmIHJlcXVlc3RJbml0LmFnZW50IGluc3RhbmNlb2Ygbm9kZV9odHRwc18xLkFnZW50KSB7XG4gICAgICAgICAgICAgICAgdGhpcy5hZ2VudCA9IHJlcXVlc3RJbml0LmFnZW50O1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIGhlYWRlcnNTZXJpYWxpemVyO1xuICAgIGNhY2hlO1xuICAgIGNyZWRlbnRpYWxzO1xuICAgIGRlc3RpbmF0aW9uO1xuICAgIGhlYWRlcnM7XG4gICAgaW50ZWdyaXR5O1xuICAgIGtlZXBhbGl2ZTtcbiAgICBtZXRob2Q7XG4gICAgbW9kZTtcbiAgICBwcmlvcml0eTtcbiAgICByZWRpcmVjdDtcbiAgICByZWZlcnJlcjtcbiAgICByZWZlcnJlclBvbGljeTtcbiAgICBfdXJsO1xuICAgIGdldCBzaWduYWwoKSB7XG4gICAgICAgIHRoaXMuX3NpZ25hbCB8fD0gbmV3IEFib3J0Q29udHJvbGxlcigpLnNpZ25hbDtcbiAgICAgICAgcmV0dXJuIHRoaXMuX3NpZ25hbDtcbiAgICB9XG4gICAgZ2V0IHVybCgpIHtcbiAgICAgICAgaWYgKHRoaXMuX3VybCA9PSBudWxsKSB7XG4gICAgICAgICAgICBpZiAodGhpcy5fcGFyc2VkVXJsKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5fdXJsID0gdGhpcy5fcGFyc2VkVXJsLnRvU3RyaW5nKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdJbnZhbGlkIFVSTCcpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzLl91cmw7XG4gICAgfVxuICAgIF9wYXJzZWRVcmw7XG4gICAgZ2V0IHBhcnNlZFVybCgpIHtcbiAgICAgICAgaWYgKHRoaXMuX3BhcnNlZFVybCA9PSBudWxsKSB7XG4gICAgICAgICAgICBpZiAodGhpcy5fdXJsICE9IG51bGwpIHtcbiAgICAgICAgICAgICAgICB0aGlzLl9wYXJzZWRVcmwgPSBuZXcgVVJMX2pzXzEuUG9ueWZpbGxVUkwodGhpcy5fdXJsLCAnaHR0cDovL2xvY2FsaG9zdCcpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignSW52YWxpZCBVUkwnKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGhpcy5fcGFyc2VkVXJsO1xuICAgIH1cbiAgICBkdXBsZXg7XG4gICAgYWdlbnQ7XG4gICAgY2xvbmUoKSB7XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cbiAgICBbU3ltYm9sLnRvU3RyaW5nVGFnXSA9ICdSZXF1ZXN0Jztcbn1cbmV4cG9ydHMuUG9ueWZpbGxSZXF1ZXN0ID0gUG9ueWZpbGxSZXF1ZXN0O1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/Request.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/Response.js":
/*!**************************************************************!*\
  !*** ./node_modules/@whatwg-node/node-fetch/cjs/Response.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PonyfillResponse = void 0;\nconst node_http_1 = __webpack_require__(/*! node:http */ \"node:http\");\nconst Body_js_1 = __webpack_require__(/*! ./Body.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/Body.js\");\nconst Headers_js_1 = __webpack_require__(/*! ./Headers.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/Headers.js\");\nconst JSON_CONTENT_TYPE = 'application/json; charset=utf-8';\nclass PonyfillResponse extends Body_js_1.PonyfillBody {\n    headers;\n    constructor(body, init) {\n        super(body || null, init);\n        this.headers =\n            init?.headers && (0, Headers_js_1.isHeadersLike)(init.headers)\n                ? init.headers\n                : new Headers_js_1.PonyfillHeaders(init?.headers);\n        this.status = init?.status || 200;\n        this.statusText = init?.statusText || node_http_1.STATUS_CODES[this.status] || 'OK';\n        this.url = init?.url || '';\n        this.redirected = init?.redirected || false;\n        this.type = init?.type || 'default';\n        this.handleContentLengthHeader();\n    }\n    get ok() {\n        return this.status >= 200 && this.status < 300;\n    }\n    status;\n    statusText;\n    url;\n    redirected;\n    type;\n    clone() {\n        return this;\n    }\n    static error() {\n        return new PonyfillResponse(null, {\n            status: 500,\n            statusText: 'Internal Server Error',\n        });\n    }\n    static redirect(url, status = 302) {\n        if (status < 300 || status > 399) {\n            throw new RangeError('Invalid status code');\n        }\n        return new PonyfillResponse(null, {\n            headers: {\n                location: url,\n            },\n            status,\n        });\n    }\n    static json(data, init) {\n        const bodyInit = JSON.stringify(data);\n        if (!init) {\n            init = {\n                headers: {\n                    'content-type': JSON_CONTENT_TYPE,\n                    'content-length': Buffer.byteLength(bodyInit).toString(),\n                },\n            };\n        }\n        else if (!init.headers) {\n            init.headers = {\n                'content-type': JSON_CONTENT_TYPE,\n                'content-length': Buffer.byteLength(bodyInit).toString(),\n            };\n        }\n        else if ((0, Headers_js_1.isHeadersLike)(init.headers)) {\n            if (!init.headers.has('content-type')) {\n                init.headers.set('content-type', JSON_CONTENT_TYPE);\n            }\n            if (!init.headers.has('content-length')) {\n                init.headers.set('content-length', Buffer.byteLength(bodyInit).toString());\n            }\n        }\n        else if (Array.isArray(init.headers)) {\n            let contentTypeExists = false;\n            let contentLengthExists = false;\n            for (const [key] of init.headers) {\n                if (contentLengthExists && contentTypeExists) {\n                    break;\n                }\n                if (!contentTypeExists && key.toLowerCase() === 'content-type') {\n                    contentTypeExists = true;\n                }\n                else if (!contentLengthExists && key.toLowerCase() === 'content-length') {\n                    contentLengthExists = true;\n                }\n            }\n            if (!contentTypeExists) {\n                init.headers.push(['content-type', JSON_CONTENT_TYPE]);\n            }\n            if (!contentLengthExists) {\n                init.headers.push(['content-length', Buffer.byteLength(bodyInit).toString()]);\n            }\n        }\n        else if (typeof init.headers === 'object') {\n            if (init.headers?.['content-type'] == null) {\n                init.headers['content-type'] = JSON_CONTENT_TYPE;\n            }\n            if (init.headers?.['content-length'] == null) {\n                init.headers['content-length'] = Buffer.byteLength(bodyInit).toString();\n            }\n        }\n        return new PonyfillResponse(bodyInit, init);\n    }\n    [Symbol.toStringTag] = 'Response';\n}\nexports.PonyfillResponse = PonyfillResponse;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL25vZGUtZmV0Y2gvY2pzL1Jlc3BvbnNlLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHdCQUF3QjtBQUN4QixvQkFBb0IsbUJBQU8sQ0FBQyw0QkFBVztBQUN2QyxrQkFBa0IsbUJBQU8sQ0FBQywyRUFBVztBQUNyQyxxQkFBcUIsbUJBQU8sQ0FBQyxpRkFBYztBQUMzQyw2Q0FBNkM7QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QiIsInNvdXJjZXMiOlsiL2hvbWUvY2V0ZWMvTm9kZVByb2plY3RzL2FndWlfdGVzdC9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL25vZGUtZmV0Y2gvY2pzL1Jlc3BvbnNlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5Qb255ZmlsbFJlc3BvbnNlID0gdm9pZCAwO1xuY29uc3Qgbm9kZV9odHRwXzEgPSByZXF1aXJlKFwibm9kZTpodHRwXCIpO1xuY29uc3QgQm9keV9qc18xID0gcmVxdWlyZShcIi4vQm9keS5qc1wiKTtcbmNvbnN0IEhlYWRlcnNfanNfMSA9IHJlcXVpcmUoXCIuL0hlYWRlcnMuanNcIik7XG5jb25zdCBKU09OX0NPTlRFTlRfVFlQRSA9ICdhcHBsaWNhdGlvbi9qc29uOyBjaGFyc2V0PXV0Zi04JztcbmNsYXNzIFBvbnlmaWxsUmVzcG9uc2UgZXh0ZW5kcyBCb2R5X2pzXzEuUG9ueWZpbGxCb2R5IHtcbiAgICBoZWFkZXJzO1xuICAgIGNvbnN0cnVjdG9yKGJvZHksIGluaXQpIHtcbiAgICAgICAgc3VwZXIoYm9keSB8fCBudWxsLCBpbml0KTtcbiAgICAgICAgdGhpcy5oZWFkZXJzID1cbiAgICAgICAgICAgIGluaXQ/LmhlYWRlcnMgJiYgKDAsIEhlYWRlcnNfanNfMS5pc0hlYWRlcnNMaWtlKShpbml0LmhlYWRlcnMpXG4gICAgICAgICAgICAgICAgPyBpbml0LmhlYWRlcnNcbiAgICAgICAgICAgICAgICA6IG5ldyBIZWFkZXJzX2pzXzEuUG9ueWZpbGxIZWFkZXJzKGluaXQ/LmhlYWRlcnMpO1xuICAgICAgICB0aGlzLnN0YXR1cyA9IGluaXQ/LnN0YXR1cyB8fCAyMDA7XG4gICAgICAgIHRoaXMuc3RhdHVzVGV4dCA9IGluaXQ/LnN0YXR1c1RleHQgfHwgbm9kZV9odHRwXzEuU1RBVFVTX0NPREVTW3RoaXMuc3RhdHVzXSB8fCAnT0snO1xuICAgICAgICB0aGlzLnVybCA9IGluaXQ/LnVybCB8fCAnJztcbiAgICAgICAgdGhpcy5yZWRpcmVjdGVkID0gaW5pdD8ucmVkaXJlY3RlZCB8fCBmYWxzZTtcbiAgICAgICAgdGhpcy50eXBlID0gaW5pdD8udHlwZSB8fCAnZGVmYXVsdCc7XG4gICAgICAgIHRoaXMuaGFuZGxlQ29udGVudExlbmd0aEhlYWRlcigpO1xuICAgIH1cbiAgICBnZXQgb2soKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnN0YXR1cyA+PSAyMDAgJiYgdGhpcy5zdGF0dXMgPCAzMDA7XG4gICAgfVxuICAgIHN0YXR1cztcbiAgICBzdGF0dXNUZXh0O1xuICAgIHVybDtcbiAgICByZWRpcmVjdGVkO1xuICAgIHR5cGU7XG4gICAgY2xvbmUoKSB7XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cbiAgICBzdGF0aWMgZXJyb3IoKSB7XG4gICAgICAgIHJldHVybiBuZXcgUG9ueWZpbGxSZXNwb25zZShudWxsLCB7XG4gICAgICAgICAgICBzdGF0dXM6IDUwMCxcbiAgICAgICAgICAgIHN0YXR1c1RleHQ6ICdJbnRlcm5hbCBTZXJ2ZXIgRXJyb3InLFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgc3RhdGljIHJlZGlyZWN0KHVybCwgc3RhdHVzID0gMzAyKSB7XG4gICAgICAgIGlmIChzdGF0dXMgPCAzMDAgfHwgc3RhdHVzID4gMzk5KSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgUmFuZ2VFcnJvcignSW52YWxpZCBzdGF0dXMgY29kZScpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBuZXcgUG9ueWZpbGxSZXNwb25zZShudWxsLCB7XG4gICAgICAgICAgICBoZWFkZXJzOiB7XG4gICAgICAgICAgICAgICAgbG9jYXRpb246IHVybCxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBzdGF0dXMsXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBzdGF0aWMganNvbihkYXRhLCBpbml0KSB7XG4gICAgICAgIGNvbnN0IGJvZHlJbml0ID0gSlNPTi5zdHJpbmdpZnkoZGF0YSk7XG4gICAgICAgIGlmICghaW5pdCkge1xuICAgICAgICAgICAgaW5pdCA9IHtcbiAgICAgICAgICAgICAgICBoZWFkZXJzOiB7XG4gICAgICAgICAgICAgICAgICAgICdjb250ZW50LXR5cGUnOiBKU09OX0NPTlRFTlRfVFlQRSxcbiAgICAgICAgICAgICAgICAgICAgJ2NvbnRlbnQtbGVuZ3RoJzogQnVmZmVyLmJ5dGVMZW5ndGgoYm9keUluaXQpLnRvU3RyaW5nKCksXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoIWluaXQuaGVhZGVycykge1xuICAgICAgICAgICAgaW5pdC5oZWFkZXJzID0ge1xuICAgICAgICAgICAgICAgICdjb250ZW50LXR5cGUnOiBKU09OX0NPTlRFTlRfVFlQRSxcbiAgICAgICAgICAgICAgICAnY29udGVudC1sZW5ndGgnOiBCdWZmZXIuYnl0ZUxlbmd0aChib2R5SW5pdCkudG9TdHJpbmcoKSxcbiAgICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoKDAsIEhlYWRlcnNfanNfMS5pc0hlYWRlcnNMaWtlKShpbml0LmhlYWRlcnMpKSB7XG4gICAgICAgICAgICBpZiAoIWluaXQuaGVhZGVycy5oYXMoJ2NvbnRlbnQtdHlwZScpKSB7XG4gICAgICAgICAgICAgICAgaW5pdC5oZWFkZXJzLnNldCgnY29udGVudC10eXBlJywgSlNPTl9DT05URU5UX1RZUEUpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKCFpbml0LmhlYWRlcnMuaGFzKCdjb250ZW50LWxlbmd0aCcpKSB7XG4gICAgICAgICAgICAgICAgaW5pdC5oZWFkZXJzLnNldCgnY29udGVudC1sZW5ndGgnLCBCdWZmZXIuYnl0ZUxlbmd0aChib2R5SW5pdCkudG9TdHJpbmcoKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoQXJyYXkuaXNBcnJheShpbml0LmhlYWRlcnMpKSB7XG4gICAgICAgICAgICBsZXQgY29udGVudFR5cGVFeGlzdHMgPSBmYWxzZTtcbiAgICAgICAgICAgIGxldCBjb250ZW50TGVuZ3RoRXhpc3RzID0gZmFsc2U7XG4gICAgICAgICAgICBmb3IgKGNvbnN0IFtrZXldIG9mIGluaXQuaGVhZGVycykge1xuICAgICAgICAgICAgICAgIGlmIChjb250ZW50TGVuZ3RoRXhpc3RzICYmIGNvbnRlbnRUeXBlRXhpc3RzKSB7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAoIWNvbnRlbnRUeXBlRXhpc3RzICYmIGtleS50b0xvd2VyQ2FzZSgpID09PSAnY29udGVudC10eXBlJykge1xuICAgICAgICAgICAgICAgICAgICBjb250ZW50VHlwZUV4aXN0cyA9IHRydWU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2UgaWYgKCFjb250ZW50TGVuZ3RoRXhpc3RzICYmIGtleS50b0xvd2VyQ2FzZSgpID09PSAnY29udGVudC1sZW5ndGgnKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnRlbnRMZW5ndGhFeGlzdHMgPSB0cnVlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICghY29udGVudFR5cGVFeGlzdHMpIHtcbiAgICAgICAgICAgICAgICBpbml0LmhlYWRlcnMucHVzaChbJ2NvbnRlbnQtdHlwZScsIEpTT05fQ09OVEVOVF9UWVBFXSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoIWNvbnRlbnRMZW5ndGhFeGlzdHMpIHtcbiAgICAgICAgICAgICAgICBpbml0LmhlYWRlcnMucHVzaChbJ2NvbnRlbnQtbGVuZ3RoJywgQnVmZmVyLmJ5dGVMZW5ndGgoYm9keUluaXQpLnRvU3RyaW5nKCldKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmICh0eXBlb2YgaW5pdC5oZWFkZXJzID09PSAnb2JqZWN0Jykge1xuICAgICAgICAgICAgaWYgKGluaXQuaGVhZGVycz8uWydjb250ZW50LXR5cGUnXSA9PSBudWxsKSB7XG4gICAgICAgICAgICAgICAgaW5pdC5oZWFkZXJzWydjb250ZW50LXR5cGUnXSA9IEpTT05fQ09OVEVOVF9UWVBFO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGluaXQuaGVhZGVycz8uWydjb250ZW50LWxlbmd0aCddID09IG51bGwpIHtcbiAgICAgICAgICAgICAgICBpbml0LmhlYWRlcnNbJ2NvbnRlbnQtbGVuZ3RoJ10gPSBCdWZmZXIuYnl0ZUxlbmd0aChib2R5SW5pdCkudG9TdHJpbmcoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbmV3IFBvbnlmaWxsUmVzcG9uc2UoYm9keUluaXQsIGluaXQpO1xuICAgIH1cbiAgICBbU3ltYm9sLnRvU3RyaW5nVGFnXSA9ICdSZXNwb25zZSc7XG59XG5leHBvcnRzLlBvbnlmaWxsUmVzcG9uc2UgPSBQb255ZmlsbFJlc3BvbnNlO1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/Response.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/TextEncoderDecoder.js":
/*!************************************************************************!*\
  !*** ./node_modules/@whatwg-node/node-fetch/cjs/TextEncoderDecoder.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PonyfillTextDecoder = exports.PonyfillTextEncoder = void 0;\nexports.PonyfillBtoa = PonyfillBtoa;\nconst node_buffer_1 = __webpack_require__(/*! node:buffer */ \"node:buffer\");\nconst utils_js_1 = __webpack_require__(/*! ./utils.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/utils.js\");\nclass PonyfillTextEncoder {\n    encoding;\n    constructor(encoding = 'utf-8') {\n        this.encoding = encoding;\n    }\n    encode(input) {\n        return node_buffer_1.Buffer.from(input, this.encoding);\n    }\n    encodeInto(source, destination) {\n        const buffer = this.encode(source);\n        const copied = buffer.copy(destination);\n        return {\n            read: copied,\n            written: copied,\n        };\n    }\n}\nexports.PonyfillTextEncoder = PonyfillTextEncoder;\nclass PonyfillTextDecoder {\n    encoding;\n    fatal = false;\n    ignoreBOM = false;\n    constructor(encoding = 'utf-8', options) {\n        this.encoding = encoding;\n        if (options) {\n            this.fatal = options.fatal || false;\n            this.ignoreBOM = options.ignoreBOM || false;\n        }\n    }\n    decode(input) {\n        if (node_buffer_1.Buffer.isBuffer(input)) {\n            return input.toString(this.encoding);\n        }\n        if ((0, utils_js_1.isArrayBufferView)(input)) {\n            return node_buffer_1.Buffer.from(input.buffer, input.byteOffset, input.byteLength).toString(this.encoding);\n        }\n        return node_buffer_1.Buffer.from(input).toString(this.encoding);\n    }\n}\nexports.PonyfillTextDecoder = PonyfillTextDecoder;\nfunction PonyfillBtoa(input) {\n    return node_buffer_1.Buffer.from(input, 'binary').toString('base64');\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL25vZGUtZmV0Y2gvY2pzL1RleHRFbmNvZGVyRGVjb2Rlci5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCwyQkFBMkIsR0FBRywyQkFBMkI7QUFDekQsb0JBQW9CO0FBQ3BCLHNCQUFzQixtQkFBTyxDQUFDLGdDQUFhO0FBQzNDLG1CQUFtQixtQkFBTyxDQUFDLDZFQUFZO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQkFBMkI7QUFDM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCO0FBQzNCO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiL2hvbWUvY2V0ZWMvTm9kZVByb2plY3RzL2FndWlfdGVzdC9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL25vZGUtZmV0Y2gvY2pzL1RleHRFbmNvZGVyRGVjb2Rlci5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuUG9ueWZpbGxUZXh0RGVjb2RlciA9IGV4cG9ydHMuUG9ueWZpbGxUZXh0RW5jb2RlciA9IHZvaWQgMDtcbmV4cG9ydHMuUG9ueWZpbGxCdG9hID0gUG9ueWZpbGxCdG9hO1xuY29uc3Qgbm9kZV9idWZmZXJfMSA9IHJlcXVpcmUoXCJub2RlOmJ1ZmZlclwiKTtcbmNvbnN0IHV0aWxzX2pzXzEgPSByZXF1aXJlKFwiLi91dGlscy5qc1wiKTtcbmNsYXNzIFBvbnlmaWxsVGV4dEVuY29kZXIge1xuICAgIGVuY29kaW5nO1xuICAgIGNvbnN0cnVjdG9yKGVuY29kaW5nID0gJ3V0Zi04Jykge1xuICAgICAgICB0aGlzLmVuY29kaW5nID0gZW5jb2Rpbmc7XG4gICAgfVxuICAgIGVuY29kZShpbnB1dCkge1xuICAgICAgICByZXR1cm4gbm9kZV9idWZmZXJfMS5CdWZmZXIuZnJvbShpbnB1dCwgdGhpcy5lbmNvZGluZyk7XG4gICAgfVxuICAgIGVuY29kZUludG8oc291cmNlLCBkZXN0aW5hdGlvbikge1xuICAgICAgICBjb25zdCBidWZmZXIgPSB0aGlzLmVuY29kZShzb3VyY2UpO1xuICAgICAgICBjb25zdCBjb3BpZWQgPSBidWZmZXIuY29weShkZXN0aW5hdGlvbik7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICByZWFkOiBjb3BpZWQsXG4gICAgICAgICAgICB3cml0dGVuOiBjb3BpZWQsXG4gICAgICAgIH07XG4gICAgfVxufVxuZXhwb3J0cy5Qb255ZmlsbFRleHRFbmNvZGVyID0gUG9ueWZpbGxUZXh0RW5jb2RlcjtcbmNsYXNzIFBvbnlmaWxsVGV4dERlY29kZXIge1xuICAgIGVuY29kaW5nO1xuICAgIGZhdGFsID0gZmFsc2U7XG4gICAgaWdub3JlQk9NID0gZmFsc2U7XG4gICAgY29uc3RydWN0b3IoZW5jb2RpbmcgPSAndXRmLTgnLCBvcHRpb25zKSB7XG4gICAgICAgIHRoaXMuZW5jb2RpbmcgPSBlbmNvZGluZztcbiAgICAgICAgaWYgKG9wdGlvbnMpIHtcbiAgICAgICAgICAgIHRoaXMuZmF0YWwgPSBvcHRpb25zLmZhdGFsIHx8IGZhbHNlO1xuICAgICAgICAgICAgdGhpcy5pZ25vcmVCT00gPSBvcHRpb25zLmlnbm9yZUJPTSB8fCBmYWxzZTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBkZWNvZGUoaW5wdXQpIHtcbiAgICAgICAgaWYgKG5vZGVfYnVmZmVyXzEuQnVmZmVyLmlzQnVmZmVyKGlucHV0KSkge1xuICAgICAgICAgICAgcmV0dXJuIGlucHV0LnRvU3RyaW5nKHRoaXMuZW5jb2RpbmcpO1xuICAgICAgICB9XG4gICAgICAgIGlmICgoMCwgdXRpbHNfanNfMS5pc0FycmF5QnVmZmVyVmlldykoaW5wdXQpKSB7XG4gICAgICAgICAgICByZXR1cm4gbm9kZV9idWZmZXJfMS5CdWZmZXIuZnJvbShpbnB1dC5idWZmZXIsIGlucHV0LmJ5dGVPZmZzZXQsIGlucHV0LmJ5dGVMZW5ndGgpLnRvU3RyaW5nKHRoaXMuZW5jb2RpbmcpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBub2RlX2J1ZmZlcl8xLkJ1ZmZlci5mcm9tKGlucHV0KS50b1N0cmluZyh0aGlzLmVuY29kaW5nKTtcbiAgICB9XG59XG5leHBvcnRzLlBvbnlmaWxsVGV4dERlY29kZXIgPSBQb255ZmlsbFRleHREZWNvZGVyO1xuZnVuY3Rpb24gUG9ueWZpbGxCdG9hKGlucHV0KSB7XG4gICAgcmV0dXJuIG5vZGVfYnVmZmVyXzEuQnVmZmVyLmZyb20oaW5wdXQsICdiaW5hcnknKS50b1N0cmluZygnYmFzZTY0Jyk7XG59XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/TextEncoderDecoder.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/TextEncoderDecoderStream.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@whatwg-node/node-fetch/cjs/TextEncoderDecoderStream.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PonyfillTextEncoderStream = exports.PonyfillTextDecoderStream = void 0;\nconst TextEncoderDecoder_js_1 = __webpack_require__(/*! ./TextEncoderDecoder.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/TextEncoderDecoder.js\");\nconst TransformStream_js_1 = __webpack_require__(/*! ./TransformStream.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/TransformStream.js\");\nclass PonyfillTextDecoderStream extends TransformStream_js_1.PonyfillTransformStream {\n    textDecoder;\n    constructor(encoding, options) {\n        super({\n            transform: (chunk, controller) => controller.enqueue(this.textDecoder.decode(chunk, { stream: true })),\n        });\n        this.textDecoder = new TextEncoderDecoder_js_1.PonyfillTextDecoder(encoding, options);\n    }\n    get encoding() {\n        return this.textDecoder.encoding;\n    }\n    get fatal() {\n        return this.textDecoder.fatal;\n    }\n    get ignoreBOM() {\n        return this.textDecoder.ignoreBOM;\n    }\n}\nexports.PonyfillTextDecoderStream = PonyfillTextDecoderStream;\nclass PonyfillTextEncoderStream extends TransformStream_js_1.PonyfillTransformStream {\n    textEncoder;\n    constructor(encoding) {\n        super({\n            transform: (chunk, controller) => controller.enqueue(this.textEncoder.encode(chunk)),\n        });\n        this.textEncoder = new TextEncoderDecoder_js_1.PonyfillTextEncoder(encoding);\n    }\n    get encoding() {\n        return this.textEncoder.encoding;\n    }\n    encode(input) {\n        return this.textEncoder.encode(input);\n    }\n}\nexports.PonyfillTextEncoderStream = PonyfillTextEncoderStream;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL25vZGUtZmV0Y2gvY2pzL1RleHRFbmNvZGVyRGVjb2RlclN0cmVhbS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxpQ0FBaUMsR0FBRyxpQ0FBaUM7QUFDckUsZ0NBQWdDLG1CQUFPLENBQUMsdUdBQXlCO0FBQ2pFLDZCQUE2QixtQkFBTyxDQUFDLGlHQUFzQjtBQUMzRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtHQUFrRyxjQUFjO0FBQ2hILFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQ0FBaUM7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQ0FBaUMiLCJzb3VyY2VzIjpbIi9ob21lL2NldGVjL05vZGVQcm9qZWN0cy9hZ3VpX3Rlc3Qvbm9kZV9tb2R1bGVzL0B3aGF0d2ctbm9kZS9ub2RlLWZldGNoL2Nqcy9UZXh0RW5jb2RlckRlY29kZXJTdHJlYW0uanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlBvbnlmaWxsVGV4dEVuY29kZXJTdHJlYW0gPSBleHBvcnRzLlBvbnlmaWxsVGV4dERlY29kZXJTdHJlYW0gPSB2b2lkIDA7XG5jb25zdCBUZXh0RW5jb2RlckRlY29kZXJfanNfMSA9IHJlcXVpcmUoXCIuL1RleHRFbmNvZGVyRGVjb2Rlci5qc1wiKTtcbmNvbnN0IFRyYW5zZm9ybVN0cmVhbV9qc18xID0gcmVxdWlyZShcIi4vVHJhbnNmb3JtU3RyZWFtLmpzXCIpO1xuY2xhc3MgUG9ueWZpbGxUZXh0RGVjb2RlclN0cmVhbSBleHRlbmRzIFRyYW5zZm9ybVN0cmVhbV9qc18xLlBvbnlmaWxsVHJhbnNmb3JtU3RyZWFtIHtcbiAgICB0ZXh0RGVjb2RlcjtcbiAgICBjb25zdHJ1Y3RvcihlbmNvZGluZywgb3B0aW9ucykge1xuICAgICAgICBzdXBlcih7XG4gICAgICAgICAgICB0cmFuc2Zvcm06IChjaHVuaywgY29udHJvbGxlcikgPT4gY29udHJvbGxlci5lbnF1ZXVlKHRoaXMudGV4dERlY29kZXIuZGVjb2RlKGNodW5rLCB7IHN0cmVhbTogdHJ1ZSB9KSksXG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLnRleHREZWNvZGVyID0gbmV3IFRleHRFbmNvZGVyRGVjb2Rlcl9qc18xLlBvbnlmaWxsVGV4dERlY29kZXIoZW5jb2RpbmcsIG9wdGlvbnMpO1xuICAgIH1cbiAgICBnZXQgZW5jb2RpbmcoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnRleHREZWNvZGVyLmVuY29kaW5nO1xuICAgIH1cbiAgICBnZXQgZmF0YWwoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnRleHREZWNvZGVyLmZhdGFsO1xuICAgIH1cbiAgICBnZXQgaWdub3JlQk9NKCkge1xuICAgICAgICByZXR1cm4gdGhpcy50ZXh0RGVjb2Rlci5pZ25vcmVCT007XG4gICAgfVxufVxuZXhwb3J0cy5Qb255ZmlsbFRleHREZWNvZGVyU3RyZWFtID0gUG9ueWZpbGxUZXh0RGVjb2RlclN0cmVhbTtcbmNsYXNzIFBvbnlmaWxsVGV4dEVuY29kZXJTdHJlYW0gZXh0ZW5kcyBUcmFuc2Zvcm1TdHJlYW1fanNfMS5Qb255ZmlsbFRyYW5zZm9ybVN0cmVhbSB7XG4gICAgdGV4dEVuY29kZXI7XG4gICAgY29uc3RydWN0b3IoZW5jb2RpbmcpIHtcbiAgICAgICAgc3VwZXIoe1xuICAgICAgICAgICAgdHJhbnNmb3JtOiAoY2h1bmssIGNvbnRyb2xsZXIpID0+IGNvbnRyb2xsZXIuZW5xdWV1ZSh0aGlzLnRleHRFbmNvZGVyLmVuY29kZShjaHVuaykpLFxuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy50ZXh0RW5jb2RlciA9IG5ldyBUZXh0RW5jb2RlckRlY29kZXJfanNfMS5Qb255ZmlsbFRleHRFbmNvZGVyKGVuY29kaW5nKTtcbiAgICB9XG4gICAgZ2V0IGVuY29kaW5nKCkge1xuICAgICAgICByZXR1cm4gdGhpcy50ZXh0RW5jb2Rlci5lbmNvZGluZztcbiAgICB9XG4gICAgZW5jb2RlKGlucHV0KSB7XG4gICAgICAgIHJldHVybiB0aGlzLnRleHRFbmNvZGVyLmVuY29kZShpbnB1dCk7XG4gICAgfVxufVxuZXhwb3J0cy5Qb255ZmlsbFRleHRFbmNvZGVyU3RyZWFtID0gUG9ueWZpbGxUZXh0RW5jb2RlclN0cmVhbTtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/TextEncoderDecoderStream.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/TransformStream.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@whatwg-node/node-fetch/cjs/TransformStream.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PonyfillTransformStream = void 0;\nconst node_stream_1 = __webpack_require__(/*! node:stream */ \"node:stream\");\nconst ReadableStream_js_1 = __webpack_require__(/*! ./ReadableStream.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/ReadableStream.js\");\nconst utils_js_1 = __webpack_require__(/*! ./utils.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/utils.js\");\nconst WritableStream_js_1 = __webpack_require__(/*! ./WritableStream.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/WritableStream.js\");\nclass PonyfillTransformStream {\n    transform;\n    writable;\n    readable;\n    constructor(transformer) {\n        if (transformer instanceof node_stream_1.Transform) {\n            this.transform = transformer;\n        }\n        else if (transformer) {\n            const controller = {\n                enqueue(chunk) {\n                    transform.push(chunk);\n                },\n                error(reason) {\n                    transform.destroy(reason);\n                },\n                terminate() {\n                    (0, utils_js_1.endStream)(transform);\n                },\n                get desiredSize() {\n                    return transform.writableLength;\n                },\n            };\n            const transform = new node_stream_1.Transform({\n                read() { },\n                write(chunk, _encoding, callback) {\n                    try {\n                        const result = transformer.transform?.(chunk, controller);\n                        if (result instanceof Promise) {\n                            result.then(() => {\n                                callback();\n                            }, err => {\n                                callback(err);\n                            });\n                        }\n                        else {\n                            callback();\n                        }\n                    }\n                    catch (err) {\n                        callback(err);\n                    }\n                },\n                final(callback) {\n                    try {\n                        const result = transformer.flush?.(controller);\n                        if (result instanceof Promise) {\n                            result.then(() => {\n                                callback();\n                            }, err => {\n                                callback(err);\n                            });\n                        }\n                        else {\n                            callback();\n                        }\n                    }\n                    catch (err) {\n                        callback(err);\n                    }\n                },\n            });\n            this.transform = transform;\n        }\n        else {\n            this.transform = new node_stream_1.Transform();\n        }\n        this.writable = new WritableStream_js_1.PonyfillWritableStream(this.transform);\n        this.readable = new ReadableStream_js_1.PonyfillReadableStream(this.transform);\n    }\n}\nexports.PonyfillTransformStream = PonyfillTransformStream;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL25vZGUtZmV0Y2gvY2pzL1RyYW5zZm9ybVN0cmVhbS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCwrQkFBK0I7QUFDL0Isc0JBQXNCLG1CQUFPLENBQUMsZ0NBQWE7QUFDM0MsNEJBQTRCLG1CQUFPLENBQUMsK0ZBQXFCO0FBQ3pELG1CQUFtQixtQkFBTyxDQUFDLDZFQUFZO0FBQ3ZDLDRCQUE0QixtQkFBTyxDQUFDLCtGQUFxQjtBQUN6RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBLDBCQUEwQjtBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkI7QUFDN0I7QUFDQSw2QkFBNkI7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkI7QUFDN0I7QUFDQSw2QkFBNkI7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQixhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0JBQStCIiwic291cmNlcyI6WyIvaG9tZS9jZXRlYy9Ob2RlUHJvamVjdHMvYWd1aV90ZXN0L25vZGVfbW9kdWxlcy9Ad2hhdHdnLW5vZGUvbm9kZS1mZXRjaC9janMvVHJhbnNmb3JtU3RyZWFtLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5Qb255ZmlsbFRyYW5zZm9ybVN0cmVhbSA9IHZvaWQgMDtcbmNvbnN0IG5vZGVfc3RyZWFtXzEgPSByZXF1aXJlKFwibm9kZTpzdHJlYW1cIik7XG5jb25zdCBSZWFkYWJsZVN0cmVhbV9qc18xID0gcmVxdWlyZShcIi4vUmVhZGFibGVTdHJlYW0uanNcIik7XG5jb25zdCB1dGlsc19qc18xID0gcmVxdWlyZShcIi4vdXRpbHMuanNcIik7XG5jb25zdCBXcml0YWJsZVN0cmVhbV9qc18xID0gcmVxdWlyZShcIi4vV3JpdGFibGVTdHJlYW0uanNcIik7XG5jbGFzcyBQb255ZmlsbFRyYW5zZm9ybVN0cmVhbSB7XG4gICAgdHJhbnNmb3JtO1xuICAgIHdyaXRhYmxlO1xuICAgIHJlYWRhYmxlO1xuICAgIGNvbnN0cnVjdG9yKHRyYW5zZm9ybWVyKSB7XG4gICAgICAgIGlmICh0cmFuc2Zvcm1lciBpbnN0YW5jZW9mIG5vZGVfc3RyZWFtXzEuVHJhbnNmb3JtKSB7XG4gICAgICAgICAgICB0aGlzLnRyYW5zZm9ybSA9IHRyYW5zZm9ybWVyO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKHRyYW5zZm9ybWVyKSB7XG4gICAgICAgICAgICBjb25zdCBjb250cm9sbGVyID0ge1xuICAgICAgICAgICAgICAgIGVucXVldWUoY2h1bmspIHtcbiAgICAgICAgICAgICAgICAgICAgdHJhbnNmb3JtLnB1c2goY2h1bmspO1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgZXJyb3IocmVhc29uKSB7XG4gICAgICAgICAgICAgICAgICAgIHRyYW5zZm9ybS5kZXN0cm95KHJlYXNvbik7XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB0ZXJtaW5hdGUoKSB7XG4gICAgICAgICAgICAgICAgICAgICgwLCB1dGlsc19qc18xLmVuZFN0cmVhbSkodHJhbnNmb3JtKTtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGdldCBkZXNpcmVkU2l6ZSgpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRyYW5zZm9ybS53cml0YWJsZUxlbmd0aDtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIGNvbnN0IHRyYW5zZm9ybSA9IG5ldyBub2RlX3N0cmVhbV8xLlRyYW5zZm9ybSh7XG4gICAgICAgICAgICAgICAgcmVhZCgpIHsgfSxcbiAgICAgICAgICAgICAgICB3cml0ZShjaHVuaywgX2VuY29kaW5nLCBjYWxsYmFjaykge1xuICAgICAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgcmVzdWx0ID0gdHJhbnNmb3JtZXIudHJhbnNmb3JtPy4oY2h1bmssIGNvbnRyb2xsZXIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHJlc3VsdCBpbnN0YW5jZW9mIFByb21pc2UpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXN1bHQudGhlbigoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhbGxiYWNrKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwgZXJyID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2soZXJyKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhbGxiYWNrKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgY2F0Y2ggKGVycikge1xuICAgICAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2soZXJyKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgZmluYWwoY2FsbGJhY2spIHtcbiAgICAgICAgICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHJlc3VsdCA9IHRyYW5zZm9ybWVyLmZsdXNoPy4oY29udHJvbGxlcik7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAocmVzdWx0IGluc3RhbmNlb2YgUHJvbWlzZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlc3VsdC50aGVuKCgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2soKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LCBlcnIgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYWxsYmFjayhlcnIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2soKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBjYXRjaCAoZXJyKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjYWxsYmFjayhlcnIpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgdGhpcy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm07XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB0aGlzLnRyYW5zZm9ybSA9IG5ldyBub2RlX3N0cmVhbV8xLlRyYW5zZm9ybSgpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMud3JpdGFibGUgPSBuZXcgV3JpdGFibGVTdHJlYW1fanNfMS5Qb255ZmlsbFdyaXRhYmxlU3RyZWFtKHRoaXMudHJhbnNmb3JtKTtcbiAgICAgICAgdGhpcy5yZWFkYWJsZSA9IG5ldyBSZWFkYWJsZVN0cmVhbV9qc18xLlBvbnlmaWxsUmVhZGFibGVTdHJlYW0odGhpcy50cmFuc2Zvcm0pO1xuICAgIH1cbn1cbmV4cG9ydHMuUG9ueWZpbGxUcmFuc2Zvcm1TdHJlYW0gPSBQb255ZmlsbFRyYW5zZm9ybVN0cmVhbTtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/TransformStream.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/URL.js":
/*!*********************************************************!*\
  !*** ./node_modules/@whatwg-node/node-fetch/cjs/URL.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PonyfillURL = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(rsc)/./node_modules/tslib/tslib.es6.mjs\");\nconst node_buffer_1 = tslib_1.__importDefault(__webpack_require__(/*! node:buffer */ \"node:buffer\"));\nconst node_crypto_1 = __webpack_require__(/*! node:crypto */ \"node:crypto\");\nconst NativeURL = globalThis.URL;\nclass URL extends NativeURL {\n    // This part is only needed to handle `PonyfillBlob` objects\n    static blobRegistry = new Map();\n    static createObjectURL(blob) {\n        const blobUrl = `blob:whatwgnode:${(0, node_crypto_1.randomUUID)()}`;\n        this.blobRegistry.set(blobUrl, blob);\n        return blobUrl;\n    }\n    static revokeObjectURL(url) {\n        if (!this.blobRegistry.has(url)) {\n            NativeURL.revokeObjectURL(url);\n        }\n        else {\n            this.blobRegistry.delete(url);\n        }\n    }\n    static getBlobFromURL(url) {\n        return (this.blobRegistry.get(url) || node_buffer_1.default?.resolveObjectURL?.(url));\n    }\n}\nexports.PonyfillURL = URL;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL25vZGUtZmV0Y2gvY2pzL1VSTC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxtQkFBbUI7QUFDbkIsZ0JBQWdCLG1CQUFPLENBQUMsdURBQU87QUFDL0IsOENBQThDLG1CQUFPLENBQUMsZ0NBQWE7QUFDbkUsc0JBQXNCLG1CQUFPLENBQUMsZ0NBQWE7QUFDM0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJDQUEyQyxnQ0FBZ0M7QUFDM0U7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CIiwic291cmNlcyI6WyIvaG9tZS9jZXRlYy9Ob2RlUHJvamVjdHMvYWd1aV90ZXN0L25vZGVfbW9kdWxlcy9Ad2hhdHdnLW5vZGUvbm9kZS1mZXRjaC9janMvVVJMLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5Qb255ZmlsbFVSTCA9IHZvaWQgMDtcbmNvbnN0IHRzbGliXzEgPSByZXF1aXJlKFwidHNsaWJcIik7XG5jb25zdCBub2RlX2J1ZmZlcl8xID0gdHNsaWJfMS5fX2ltcG9ydERlZmF1bHQocmVxdWlyZShcIm5vZGU6YnVmZmVyXCIpKTtcbmNvbnN0IG5vZGVfY3J5cHRvXzEgPSByZXF1aXJlKFwibm9kZTpjcnlwdG9cIik7XG5jb25zdCBOYXRpdmVVUkwgPSBnbG9iYWxUaGlzLlVSTDtcbmNsYXNzIFVSTCBleHRlbmRzIE5hdGl2ZVVSTCB7XG4gICAgLy8gVGhpcyBwYXJ0IGlzIG9ubHkgbmVlZGVkIHRvIGhhbmRsZSBgUG9ueWZpbGxCbG9iYCBvYmplY3RzXG4gICAgc3RhdGljIGJsb2JSZWdpc3RyeSA9IG5ldyBNYXAoKTtcbiAgICBzdGF0aWMgY3JlYXRlT2JqZWN0VVJMKGJsb2IpIHtcbiAgICAgICAgY29uc3QgYmxvYlVybCA9IGBibG9iOndoYXR3Z25vZGU6JHsoMCwgbm9kZV9jcnlwdG9fMS5yYW5kb21VVUlEKSgpfWA7XG4gICAgICAgIHRoaXMuYmxvYlJlZ2lzdHJ5LnNldChibG9iVXJsLCBibG9iKTtcbiAgICAgICAgcmV0dXJuIGJsb2JVcmw7XG4gICAgfVxuICAgIHN0YXRpYyByZXZva2VPYmplY3RVUkwodXJsKSB7XG4gICAgICAgIGlmICghdGhpcy5ibG9iUmVnaXN0cnkuaGFzKHVybCkpIHtcbiAgICAgICAgICAgIE5hdGl2ZVVSTC5yZXZva2VPYmplY3RVUkwodXJsKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMuYmxvYlJlZ2lzdHJ5LmRlbGV0ZSh1cmwpO1xuICAgICAgICB9XG4gICAgfVxuICAgIHN0YXRpYyBnZXRCbG9iRnJvbVVSTCh1cmwpIHtcbiAgICAgICAgcmV0dXJuICh0aGlzLmJsb2JSZWdpc3RyeS5nZXQodXJsKSB8fCBub2RlX2J1ZmZlcl8xLmRlZmF1bHQ/LnJlc29sdmVPYmplY3RVUkw/Lih1cmwpKTtcbiAgICB9XG59XG5leHBvcnRzLlBvbnlmaWxsVVJMID0gVVJMO1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/URL.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/URLSearchParams.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@whatwg-node/node-fetch/cjs/URLSearchParams.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PonyfillURLSearchParams = void 0;\nexports.PonyfillURLSearchParams = globalThis.URLSearchParams;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL25vZGUtZmV0Y2gvY2pzL1VSTFNlYXJjaFBhcmFtcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCwrQkFBK0I7QUFDL0IsK0JBQStCIiwic291cmNlcyI6WyIvaG9tZS9jZXRlYy9Ob2RlUHJvamVjdHMvYWd1aV90ZXN0L25vZGVfbW9kdWxlcy9Ad2hhdHdnLW5vZGUvbm9kZS1mZXRjaC9janMvVVJMU2VhcmNoUGFyYW1zLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5Qb255ZmlsbFVSTFNlYXJjaFBhcmFtcyA9IHZvaWQgMDtcbmV4cG9ydHMuUG9ueWZpbGxVUkxTZWFyY2hQYXJhbXMgPSBnbG9iYWxUaGlzLlVSTFNlYXJjaFBhcmFtcztcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/URLSearchParams.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/WritableStream.js":
/*!********************************************************************!*\
  !*** ./node_modules/@whatwg-node/node-fetch/cjs/WritableStream.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PonyfillWritableStream = void 0;\nconst node_events_1 = __webpack_require__(/*! node:events */ \"node:events\");\nconst node_stream_1 = __webpack_require__(/*! node:stream */ \"node:stream\");\nconst promise_helpers_1 = __webpack_require__(/*! @whatwg-node/promise-helpers */ \"(rsc)/./node_modules/@whatwg-node/promise-helpers/cjs/index.js\");\nconst utils_js_1 = __webpack_require__(/*! ./utils.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/utils.js\");\nclass PonyfillWritableStream {\n    writable;\n    constructor(underlyingSink) {\n        if (underlyingSink instanceof node_stream_1.Writable) {\n            this.writable = underlyingSink;\n        }\n        else if (underlyingSink) {\n            const writable = new node_stream_1.Writable({\n                write(chunk, _encoding, callback) {\n                    try {\n                        const result = underlyingSink.write?.(chunk, controller);\n                        if (result instanceof Promise) {\n                            result.then(() => {\n                                callback();\n                            }, err => {\n                                callback(err);\n                            });\n                        }\n                        else {\n                            callback();\n                        }\n                    }\n                    catch (err) {\n                        callback(err);\n                    }\n                },\n                final(callback) {\n                    const result = underlyingSink.close?.();\n                    if (result instanceof Promise) {\n                        result.then(() => {\n                            callback();\n                        }, err => {\n                            callback(err);\n                        });\n                    }\n                    else {\n                        callback();\n                    }\n                },\n            });\n            this.writable = writable;\n            const abortCtrl = new AbortController();\n            const controller = {\n                signal: abortCtrl.signal,\n                error(e) {\n                    writable.destroy(e);\n                },\n            };\n            writable.once('error', err => abortCtrl.abort(err));\n            writable.once('close', () => abortCtrl.abort());\n        }\n        else {\n            this.writable = new node_stream_1.Writable();\n        }\n    }\n    getWriter() {\n        const writable = this.writable;\n        return {\n            get closed() {\n                return (0, node_events_1.once)(writable, 'close');\n            },\n            get desiredSize() {\n                return writable.writableLength;\n            },\n            get ready() {\n                return (0, node_events_1.once)(writable, 'drain');\n            },\n            releaseLock() {\n                // no-op\n            },\n            write(chunk) {\n                const promise = (0, utils_js_1.fakePromise)();\n                if (chunk == null) {\n                    return promise;\n                }\n                return promise.then(() => (0, utils_js_1.safeWrite)(chunk, writable));\n            },\n            close() {\n                if (!writable.errored && writable.closed) {\n                    return (0, utils_js_1.fakePromise)();\n                }\n                if (writable.errored) {\n                    return (0, promise_helpers_1.fakeRejectPromise)(writable.errored);\n                }\n                return (0, utils_js_1.fakePromise)().then(() => (0, utils_js_1.endStream)(writable));\n            },\n            abort(reason) {\n                writable.destroy(reason);\n                return (0, node_events_1.once)(writable, 'close');\n            },\n        };\n    }\n    close() {\n        if (!this.writable.errored && this.writable.closed) {\n            return (0, utils_js_1.fakePromise)();\n        }\n        if (this.writable.errored) {\n            return (0, promise_helpers_1.fakeRejectPromise)(this.writable.errored);\n        }\n        return (0, utils_js_1.fakePromise)().then(() => (0, utils_js_1.endStream)(this.writable));\n    }\n    abort(reason) {\n        this.writable.destroy(reason);\n        return (0, node_events_1.once)(this.writable, 'close');\n    }\n    locked = false;\n}\nexports.PonyfillWritableStream = PonyfillWritableStream;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL25vZGUtZmV0Y2gvY2pzL1dyaXRhYmxlU3RyZWFtLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDhCQUE4QjtBQUM5QixzQkFBc0IsbUJBQU8sQ0FBQyxnQ0FBYTtBQUMzQyxzQkFBc0IsbUJBQU8sQ0FBQyxnQ0FBYTtBQUMzQywwQkFBMEIsbUJBQU8sQ0FBQyxvR0FBOEI7QUFDaEUsbUJBQW1CLG1CQUFPLENBQUMsNkVBQVk7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QjtBQUM3QjtBQUNBLDZCQUE2QjtBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUI7QUFDekI7QUFDQSx5QkFBeUI7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakIsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhCQUE4QiIsInNvdXJjZXMiOlsiL2hvbWUvY2V0ZWMvTm9kZVByb2plY3RzL2FndWlfdGVzdC9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL25vZGUtZmV0Y2gvY2pzL1dyaXRhYmxlU3RyZWFtLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5Qb255ZmlsbFdyaXRhYmxlU3RyZWFtID0gdm9pZCAwO1xuY29uc3Qgbm9kZV9ldmVudHNfMSA9IHJlcXVpcmUoXCJub2RlOmV2ZW50c1wiKTtcbmNvbnN0IG5vZGVfc3RyZWFtXzEgPSByZXF1aXJlKFwibm9kZTpzdHJlYW1cIik7XG5jb25zdCBwcm9taXNlX2hlbHBlcnNfMSA9IHJlcXVpcmUoXCJAd2hhdHdnLW5vZGUvcHJvbWlzZS1oZWxwZXJzXCIpO1xuY29uc3QgdXRpbHNfanNfMSA9IHJlcXVpcmUoXCIuL3V0aWxzLmpzXCIpO1xuY2xhc3MgUG9ueWZpbGxXcml0YWJsZVN0cmVhbSB7XG4gICAgd3JpdGFibGU7XG4gICAgY29uc3RydWN0b3IodW5kZXJseWluZ1NpbmspIHtcbiAgICAgICAgaWYgKHVuZGVybHlpbmdTaW5rIGluc3RhbmNlb2Ygbm9kZV9zdHJlYW1fMS5Xcml0YWJsZSkge1xuICAgICAgICAgICAgdGhpcy53cml0YWJsZSA9IHVuZGVybHlpbmdTaW5rO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKHVuZGVybHlpbmdTaW5rKSB7XG4gICAgICAgICAgICBjb25zdCB3cml0YWJsZSA9IG5ldyBub2RlX3N0cmVhbV8xLldyaXRhYmxlKHtcbiAgICAgICAgICAgICAgICB3cml0ZShjaHVuaywgX2VuY29kaW5nLCBjYWxsYmFjaykge1xuICAgICAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgcmVzdWx0ID0gdW5kZXJseWluZ1Npbmsud3JpdGU/LihjaHVuaywgY29udHJvbGxlcik7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAocmVzdWx0IGluc3RhbmNlb2YgUHJvbWlzZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlc3VsdC50aGVuKCgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2soKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LCBlcnIgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYWxsYmFjayhlcnIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2soKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBjYXRjaCAoZXJyKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjYWxsYmFjayhlcnIpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBmaW5hbChjYWxsYmFjaykge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCByZXN1bHQgPSB1bmRlcmx5aW5nU2luay5jbG9zZT8uKCk7XG4gICAgICAgICAgICAgICAgICAgIGlmIChyZXN1bHQgaW5zdGFuY2VvZiBQcm9taXNlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXN1bHQudGhlbigoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2soKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sIGVyciA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2soZXJyKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2soKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHRoaXMud3JpdGFibGUgPSB3cml0YWJsZTtcbiAgICAgICAgICAgIGNvbnN0IGFib3J0Q3RybCA9IG5ldyBBYm9ydENvbnRyb2xsZXIoKTtcbiAgICAgICAgICAgIGNvbnN0IGNvbnRyb2xsZXIgPSB7XG4gICAgICAgICAgICAgICAgc2lnbmFsOiBhYm9ydEN0cmwuc2lnbmFsLFxuICAgICAgICAgICAgICAgIGVycm9yKGUpIHtcbiAgICAgICAgICAgICAgICAgICAgd3JpdGFibGUuZGVzdHJveShlKTtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIHdyaXRhYmxlLm9uY2UoJ2Vycm9yJywgZXJyID0+IGFib3J0Q3RybC5hYm9ydChlcnIpKTtcbiAgICAgICAgICAgIHdyaXRhYmxlLm9uY2UoJ2Nsb3NlJywgKCkgPT4gYWJvcnRDdHJsLmFib3J0KCkpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgdGhpcy53cml0YWJsZSA9IG5ldyBub2RlX3N0cmVhbV8xLldyaXRhYmxlKCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZ2V0V3JpdGVyKCkge1xuICAgICAgICBjb25zdCB3cml0YWJsZSA9IHRoaXMud3JpdGFibGU7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBnZXQgY2xvc2VkKCkge1xuICAgICAgICAgICAgICAgIHJldHVybiAoMCwgbm9kZV9ldmVudHNfMS5vbmNlKSh3cml0YWJsZSwgJ2Nsb3NlJyk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZ2V0IGRlc2lyZWRTaXplKCkge1xuICAgICAgICAgICAgICAgIHJldHVybiB3cml0YWJsZS53cml0YWJsZUxlbmd0aDtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBnZXQgcmVhZHkoKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuICgwLCBub2RlX2V2ZW50c18xLm9uY2UpKHdyaXRhYmxlLCAnZHJhaW4nKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICByZWxlYXNlTG9jaygpIHtcbiAgICAgICAgICAgICAgICAvLyBuby1vcFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHdyaXRlKGNodW5rKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgcHJvbWlzZSA9ICgwLCB1dGlsc19qc18xLmZha2VQcm9taXNlKSgpO1xuICAgICAgICAgICAgICAgIGlmIChjaHVuayA9PSBudWxsKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBwcm9taXNlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gcHJvbWlzZS50aGVuKCgpID0+ICgwLCB1dGlsc19qc18xLnNhZmVXcml0ZSkoY2h1bmssIHdyaXRhYmxlKSk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgY2xvc2UoKSB7XG4gICAgICAgICAgICAgICAgaWYgKCF3cml0YWJsZS5lcnJvcmVkICYmIHdyaXRhYmxlLmNsb3NlZCkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gKDAsIHV0aWxzX2pzXzEuZmFrZVByb21pc2UpKCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmICh3cml0YWJsZS5lcnJvcmVkKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiAoMCwgcHJvbWlzZV9oZWxwZXJzXzEuZmFrZVJlamVjdFByb21pc2UpKHdyaXRhYmxlLmVycm9yZWQpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gKDAsIHV0aWxzX2pzXzEuZmFrZVByb21pc2UpKCkudGhlbigoKSA9PiAoMCwgdXRpbHNfanNfMS5lbmRTdHJlYW0pKHdyaXRhYmxlKSk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgYWJvcnQocmVhc29uKSB7XG4gICAgICAgICAgICAgICAgd3JpdGFibGUuZGVzdHJveShyZWFzb24pO1xuICAgICAgICAgICAgICAgIHJldHVybiAoMCwgbm9kZV9ldmVudHNfMS5vbmNlKSh3cml0YWJsZSwgJ2Nsb3NlJyk7XG4gICAgICAgICAgICB9LFxuICAgICAgICB9O1xuICAgIH1cbiAgICBjbG9zZSgpIHtcbiAgICAgICAgaWYgKCF0aGlzLndyaXRhYmxlLmVycm9yZWQgJiYgdGhpcy53cml0YWJsZS5jbG9zZWQpIHtcbiAgICAgICAgICAgIHJldHVybiAoMCwgdXRpbHNfanNfMS5mYWtlUHJvbWlzZSkoKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodGhpcy53cml0YWJsZS5lcnJvcmVkKSB7XG4gICAgICAgICAgICByZXR1cm4gKDAsIHByb21pc2VfaGVscGVyc18xLmZha2VSZWplY3RQcm9taXNlKSh0aGlzLndyaXRhYmxlLmVycm9yZWQpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiAoMCwgdXRpbHNfanNfMS5mYWtlUHJvbWlzZSkoKS50aGVuKCgpID0+ICgwLCB1dGlsc19qc18xLmVuZFN0cmVhbSkodGhpcy53cml0YWJsZSkpO1xuICAgIH1cbiAgICBhYm9ydChyZWFzb24pIHtcbiAgICAgICAgdGhpcy53cml0YWJsZS5kZXN0cm95KHJlYXNvbik7XG4gICAgICAgIHJldHVybiAoMCwgbm9kZV9ldmVudHNfMS5vbmNlKSh0aGlzLndyaXRhYmxlLCAnY2xvc2UnKTtcbiAgICB9XG4gICAgbG9ja2VkID0gZmFsc2U7XG59XG5leHBvcnRzLlBvbnlmaWxsV3JpdGFibGVTdHJlYW0gPSBQb255ZmlsbFdyaXRhYmxlU3RyZWFtO1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/WritableStream.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/fetch.js":
/*!***********************************************************!*\
  !*** ./node_modules/@whatwg-node/node-fetch/cjs/fetch.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.fetchPonyfill = fetchPonyfill;\nconst node_buffer_1 = __webpack_require__(/*! node:buffer */ \"node:buffer\");\nconst node_fs_1 = __webpack_require__(/*! node:fs */ \"node:fs\");\nconst node_url_1 = __webpack_require__(/*! node:url */ \"node:url\");\nconst fetchCurl_js_1 = __webpack_require__(/*! ./fetchCurl.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/fetchCurl.js\");\nconst fetchNodeHttp_js_1 = __webpack_require__(/*! ./fetchNodeHttp.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/fetchNodeHttp.js\");\nconst Request_js_1 = __webpack_require__(/*! ./Request.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/Request.js\");\nconst Response_js_1 = __webpack_require__(/*! ./Response.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/Response.js\");\nconst URL_js_1 = __webpack_require__(/*! ./URL.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/URL.js\");\nconst utils_js_1 = __webpack_require__(/*! ./utils.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/utils.js\");\nconst BASE64_SUFFIX = ';base64';\nasync function getResponseForFile(url) {\n    const path = (0, node_url_1.fileURLToPath)(url);\n    try {\n        await node_fs_1.promises.access(path, node_fs_1.promises.constants.R_OK);\n        const stats = await node_fs_1.promises.stat(path, {\n            bigint: true,\n        });\n        const readable = (0, node_fs_1.createReadStream)(path);\n        return new Response_js_1.PonyfillResponse(readable, {\n            status: 200,\n            statusText: 'OK',\n            headers: {\n                'content-type': 'application/octet-stream',\n                'last-modified': stats.mtime.toUTCString(),\n            },\n        });\n    }\n    catch (err) {\n        if (err.code === 'ENOENT') {\n            return new Response_js_1.PonyfillResponse(null, {\n                status: 404,\n                statusText: 'Not Found',\n            });\n        }\n        else if (err.code === 'EACCES') {\n            return new Response_js_1.PonyfillResponse(null, {\n                status: 403,\n                statusText: 'Forbidden',\n            });\n        }\n        throw err;\n    }\n}\nfunction getResponseForDataUri(url) {\n    const [mimeType = 'text/plain', ...datas] = url.substring(5).split(',');\n    const data = decodeURIComponent(datas.join(','));\n    if (mimeType.endsWith(BASE64_SUFFIX)) {\n        const buffer = node_buffer_1.Buffer.from(data, 'base64url');\n        const realMimeType = mimeType.slice(0, -BASE64_SUFFIX.length);\n        return new Response_js_1.PonyfillResponse(buffer, {\n            status: 200,\n            statusText: 'OK',\n            headers: {\n                'content-type': realMimeType,\n            },\n        });\n    }\n    return new Response_js_1.PonyfillResponse(data, {\n        status: 200,\n        statusText: 'OK',\n        headers: {\n            'content-type': mimeType,\n        },\n    });\n}\nfunction getResponseForBlob(url) {\n    const blob = URL_js_1.PonyfillURL.getBlobFromURL(url);\n    if (!blob) {\n        throw new TypeError('Invalid Blob URL');\n    }\n    return new Response_js_1.PonyfillResponse(blob, {\n        status: 200,\n        headers: {\n            'content-type': blob.type,\n            'content-length': blob.size.toString(),\n        },\n    });\n}\nfunction isURL(obj) {\n    return obj != null && obj.href != null;\n}\nfunction fetchPonyfill(info, init) {\n    if (typeof info === 'string' || isURL(info)) {\n        const ponyfillRequest = new Request_js_1.PonyfillRequest(info, init);\n        return fetchPonyfill(ponyfillRequest);\n    }\n    const fetchRequest = info;\n    if (fetchRequest.url.startsWith('data:')) {\n        const response = getResponseForDataUri(fetchRequest.url);\n        return (0, utils_js_1.fakePromise)(response);\n    }\n    if (fetchRequest.url.startsWith('file:')) {\n        const response = getResponseForFile(fetchRequest.url);\n        return response;\n    }\n    if (fetchRequest.url.startsWith('blob:')) {\n        const response = getResponseForBlob(fetchRequest.url);\n        return (0, utils_js_1.fakePromise)(response);\n    }\n    if (globalThis.libcurl && !fetchRequest.agent) {\n        return (0, fetchCurl_js_1.fetchCurl)(fetchRequest);\n    }\n    return (0, fetchNodeHttp_js_1.fetchNodeHttp)(fetchRequest);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL25vZGUtZmV0Y2gvY2pzL2ZldGNoLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHFCQUFxQjtBQUNyQixzQkFBc0IsbUJBQU8sQ0FBQyxnQ0FBYTtBQUMzQyxrQkFBa0IsbUJBQU8sQ0FBQyx3QkFBUztBQUNuQyxtQkFBbUIsbUJBQU8sQ0FBQywwQkFBVTtBQUNyQyx1QkFBdUIsbUJBQU8sQ0FBQyxxRkFBZ0I7QUFDL0MsMkJBQTJCLG1CQUFPLENBQUMsNkZBQW9CO0FBQ3ZELHFCQUFxQixtQkFBTyxDQUFDLGlGQUFjO0FBQzNDLHNCQUFzQixtQkFBTyxDQUFDLG1GQUFlO0FBQzdDLGlCQUFpQixtQkFBTyxDQUFDLHlFQUFVO0FBQ25DLG1CQUFtQixtQkFBTyxDQUFDLDZFQUFZO0FBQ3ZDLHdCQUF3QjtBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2IsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYixTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIi9ob21lL2NldGVjL05vZGVQcm9qZWN0cy9hZ3VpX3Rlc3Qvbm9kZV9tb2R1bGVzL0B3aGF0d2ctbm9kZS9ub2RlLWZldGNoL2Nqcy9mZXRjaC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuZmV0Y2hQb255ZmlsbCA9IGZldGNoUG9ueWZpbGw7XG5jb25zdCBub2RlX2J1ZmZlcl8xID0gcmVxdWlyZShcIm5vZGU6YnVmZmVyXCIpO1xuY29uc3Qgbm9kZV9mc18xID0gcmVxdWlyZShcIm5vZGU6ZnNcIik7XG5jb25zdCBub2RlX3VybF8xID0gcmVxdWlyZShcIm5vZGU6dXJsXCIpO1xuY29uc3QgZmV0Y2hDdXJsX2pzXzEgPSByZXF1aXJlKFwiLi9mZXRjaEN1cmwuanNcIik7XG5jb25zdCBmZXRjaE5vZGVIdHRwX2pzXzEgPSByZXF1aXJlKFwiLi9mZXRjaE5vZGVIdHRwLmpzXCIpO1xuY29uc3QgUmVxdWVzdF9qc18xID0gcmVxdWlyZShcIi4vUmVxdWVzdC5qc1wiKTtcbmNvbnN0IFJlc3BvbnNlX2pzXzEgPSByZXF1aXJlKFwiLi9SZXNwb25zZS5qc1wiKTtcbmNvbnN0IFVSTF9qc18xID0gcmVxdWlyZShcIi4vVVJMLmpzXCIpO1xuY29uc3QgdXRpbHNfanNfMSA9IHJlcXVpcmUoXCIuL3V0aWxzLmpzXCIpO1xuY29uc3QgQkFTRTY0X1NVRkZJWCA9ICc7YmFzZTY0JztcbmFzeW5jIGZ1bmN0aW9uIGdldFJlc3BvbnNlRm9yRmlsZSh1cmwpIHtcbiAgICBjb25zdCBwYXRoID0gKDAsIG5vZGVfdXJsXzEuZmlsZVVSTFRvUGF0aCkodXJsKTtcbiAgICB0cnkge1xuICAgICAgICBhd2FpdCBub2RlX2ZzXzEucHJvbWlzZXMuYWNjZXNzKHBhdGgsIG5vZGVfZnNfMS5wcm9taXNlcy5jb25zdGFudHMuUl9PSyk7XG4gICAgICAgIGNvbnN0IHN0YXRzID0gYXdhaXQgbm9kZV9mc18xLnByb21pc2VzLnN0YXQocGF0aCwge1xuICAgICAgICAgICAgYmlnaW50OiB0cnVlLFxuICAgICAgICB9KTtcbiAgICAgICAgY29uc3QgcmVhZGFibGUgPSAoMCwgbm9kZV9mc18xLmNyZWF0ZVJlYWRTdHJlYW0pKHBhdGgpO1xuICAgICAgICByZXR1cm4gbmV3IFJlc3BvbnNlX2pzXzEuUG9ueWZpbGxSZXNwb25zZShyZWFkYWJsZSwge1xuICAgICAgICAgICAgc3RhdHVzOiAyMDAsXG4gICAgICAgICAgICBzdGF0dXNUZXh0OiAnT0snLFxuICAgICAgICAgICAgaGVhZGVyczoge1xuICAgICAgICAgICAgICAgICdjb250ZW50LXR5cGUnOiAnYXBwbGljYXRpb24vb2N0ZXQtc3RyZWFtJyxcbiAgICAgICAgICAgICAgICAnbGFzdC1tb2RpZmllZCc6IHN0YXRzLm10aW1lLnRvVVRDU3RyaW5nKCksXG4gICAgICAgICAgICB9LFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgY2F0Y2ggKGVycikge1xuICAgICAgICBpZiAoZXJyLmNvZGUgPT09ICdFTk9FTlQnKSB7XG4gICAgICAgICAgICByZXR1cm4gbmV3IFJlc3BvbnNlX2pzXzEuUG9ueWZpbGxSZXNwb25zZShudWxsLCB7XG4gICAgICAgICAgICAgICAgc3RhdHVzOiA0MDQsXG4gICAgICAgICAgICAgICAgc3RhdHVzVGV4dDogJ05vdCBGb3VuZCcsXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChlcnIuY29kZSA9PT0gJ0VBQ0NFUycpIHtcbiAgICAgICAgICAgIHJldHVybiBuZXcgUmVzcG9uc2VfanNfMS5Qb255ZmlsbFJlc3BvbnNlKG51bGwsIHtcbiAgICAgICAgICAgICAgICBzdGF0dXM6IDQwMyxcbiAgICAgICAgICAgICAgICBzdGF0dXNUZXh0OiAnRm9yYmlkZGVuJyxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIHRocm93IGVycjtcbiAgICB9XG59XG5mdW5jdGlvbiBnZXRSZXNwb25zZUZvckRhdGFVcmkodXJsKSB7XG4gICAgY29uc3QgW21pbWVUeXBlID0gJ3RleHQvcGxhaW4nLCAuLi5kYXRhc10gPSB1cmwuc3Vic3RyaW5nKDUpLnNwbGl0KCcsJyk7XG4gICAgY29uc3QgZGF0YSA9IGRlY29kZVVSSUNvbXBvbmVudChkYXRhcy5qb2luKCcsJykpO1xuICAgIGlmIChtaW1lVHlwZS5lbmRzV2l0aChCQVNFNjRfU1VGRklYKSkge1xuICAgICAgICBjb25zdCBidWZmZXIgPSBub2RlX2J1ZmZlcl8xLkJ1ZmZlci5mcm9tKGRhdGEsICdiYXNlNjR1cmwnKTtcbiAgICAgICAgY29uc3QgcmVhbE1pbWVUeXBlID0gbWltZVR5cGUuc2xpY2UoMCwgLUJBU0U2NF9TVUZGSVgubGVuZ3RoKTtcbiAgICAgICAgcmV0dXJuIG5ldyBSZXNwb25zZV9qc18xLlBvbnlmaWxsUmVzcG9uc2UoYnVmZmVyLCB7XG4gICAgICAgICAgICBzdGF0dXM6IDIwMCxcbiAgICAgICAgICAgIHN0YXR1c1RleHQ6ICdPSycsXG4gICAgICAgICAgICBoZWFkZXJzOiB7XG4gICAgICAgICAgICAgICAgJ2NvbnRlbnQtdHlwZSc6IHJlYWxNaW1lVHlwZSxcbiAgICAgICAgICAgIH0sXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICByZXR1cm4gbmV3IFJlc3BvbnNlX2pzXzEuUG9ueWZpbGxSZXNwb25zZShkYXRhLCB7XG4gICAgICAgIHN0YXR1czogMjAwLFxuICAgICAgICBzdGF0dXNUZXh0OiAnT0snLFxuICAgICAgICBoZWFkZXJzOiB7XG4gICAgICAgICAgICAnY29udGVudC10eXBlJzogbWltZVR5cGUsXG4gICAgICAgIH0sXG4gICAgfSk7XG59XG5mdW5jdGlvbiBnZXRSZXNwb25zZUZvckJsb2IodXJsKSB7XG4gICAgY29uc3QgYmxvYiA9IFVSTF9qc18xLlBvbnlmaWxsVVJMLmdldEJsb2JGcm9tVVJMKHVybCk7XG4gICAgaWYgKCFibG9iKSB7XG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0ludmFsaWQgQmxvYiBVUkwnKTtcbiAgICB9XG4gICAgcmV0dXJuIG5ldyBSZXNwb25zZV9qc18xLlBvbnlmaWxsUmVzcG9uc2UoYmxvYiwge1xuICAgICAgICBzdGF0dXM6IDIwMCxcbiAgICAgICAgaGVhZGVyczoge1xuICAgICAgICAgICAgJ2NvbnRlbnQtdHlwZSc6IGJsb2IudHlwZSxcbiAgICAgICAgICAgICdjb250ZW50LWxlbmd0aCc6IGJsb2Iuc2l6ZS50b1N0cmluZygpLFxuICAgICAgICB9LFxuICAgIH0pO1xufVxuZnVuY3Rpb24gaXNVUkwob2JqKSB7XG4gICAgcmV0dXJuIG9iaiAhPSBudWxsICYmIG9iai5ocmVmICE9IG51bGw7XG59XG5mdW5jdGlvbiBmZXRjaFBvbnlmaWxsKGluZm8sIGluaXQpIHtcbiAgICBpZiAodHlwZW9mIGluZm8gPT09ICdzdHJpbmcnIHx8IGlzVVJMKGluZm8pKSB7XG4gICAgICAgIGNvbnN0IHBvbnlmaWxsUmVxdWVzdCA9IG5ldyBSZXF1ZXN0X2pzXzEuUG9ueWZpbGxSZXF1ZXN0KGluZm8sIGluaXQpO1xuICAgICAgICByZXR1cm4gZmV0Y2hQb255ZmlsbChwb255ZmlsbFJlcXVlc3QpO1xuICAgIH1cbiAgICBjb25zdCBmZXRjaFJlcXVlc3QgPSBpbmZvO1xuICAgIGlmIChmZXRjaFJlcXVlc3QudXJsLnN0YXJ0c1dpdGgoJ2RhdGE6JykpIHtcbiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBnZXRSZXNwb25zZUZvckRhdGFVcmkoZmV0Y2hSZXF1ZXN0LnVybCk7XG4gICAgICAgIHJldHVybiAoMCwgdXRpbHNfanNfMS5mYWtlUHJvbWlzZSkocmVzcG9uc2UpO1xuICAgIH1cbiAgICBpZiAoZmV0Y2hSZXF1ZXN0LnVybC5zdGFydHNXaXRoKCdmaWxlOicpKSB7XG4gICAgICAgIGNvbnN0IHJlc3BvbnNlID0gZ2V0UmVzcG9uc2VGb3JGaWxlKGZldGNoUmVxdWVzdC51cmwpO1xuICAgICAgICByZXR1cm4gcmVzcG9uc2U7XG4gICAgfVxuICAgIGlmIChmZXRjaFJlcXVlc3QudXJsLnN0YXJ0c1dpdGgoJ2Jsb2I6JykpIHtcbiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBnZXRSZXNwb25zZUZvckJsb2IoZmV0Y2hSZXF1ZXN0LnVybCk7XG4gICAgICAgIHJldHVybiAoMCwgdXRpbHNfanNfMS5mYWtlUHJvbWlzZSkocmVzcG9uc2UpO1xuICAgIH1cbiAgICBpZiAoZ2xvYmFsVGhpcy5saWJjdXJsICYmICFmZXRjaFJlcXVlc3QuYWdlbnQpIHtcbiAgICAgICAgcmV0dXJuICgwLCBmZXRjaEN1cmxfanNfMS5mZXRjaEN1cmwpKGZldGNoUmVxdWVzdCk7XG4gICAgfVxuICAgIHJldHVybiAoMCwgZmV0Y2hOb2RlSHR0cF9qc18xLmZldGNoTm9kZUh0dHApKGZldGNoUmVxdWVzdCk7XG59XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/fetch.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/fetchCurl.js":
/*!***************************************************************!*\
  !*** ./node_modules/@whatwg-node/node-fetch/cjs/fetchCurl.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.fetchCurl = fetchCurl;\nconst node_stream_1 = __webpack_require__(/*! node:stream */ \"node:stream\");\nconst node_tls_1 = __webpack_require__(/*! node:tls */ \"node:tls\");\nconst promise_helpers_1 = __webpack_require__(/*! @whatwg-node/promise-helpers */ \"(rsc)/./node_modules/@whatwg-node/promise-helpers/cjs/index.js\");\nconst Response_js_1 = __webpack_require__(/*! ./Response.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/Response.js\");\nconst utils_js_1 = __webpack_require__(/*! ./utils.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/utils.js\");\nfunction fetchCurl(fetchRequest) {\n    const { Curl, CurlFeature, CurlPause, CurlProgressFunc } = globalThis['libcurl'];\n    const curlHandle = new Curl();\n    curlHandle.enable(CurlFeature.NoDataParsing);\n    curlHandle.setOpt('URL', fetchRequest.url);\n    if (process.env.NODE_TLS_REJECT_UNAUTHORIZED === '0') {\n        curlHandle.setOpt('SSL_VERIFYPEER', false);\n    }\n    if (process.env.NODE_EXTRA_CA_CERTS) {\n        curlHandle.setOpt('CAINFO', process.env.NODE_EXTRA_CA_CERTS);\n    }\n    else {\n        curlHandle.setOpt('CAINFO_BLOB', node_tls_1.rootCertificates.join('\\n'));\n    }\n    curlHandle.enable(CurlFeature.StreamResponse);\n    let signal;\n    if (fetchRequest._signal === null) {\n        signal = undefined;\n    }\n    else if (fetchRequest._signal) {\n        signal = fetchRequest._signal;\n    }\n    curlHandle.setStreamProgressCallback(function () {\n        return signal?.aborted ? (process.env.DEBUG ? CurlProgressFunc.Continue : 1) : 0;\n    });\n    if (fetchRequest['bodyType'] === 'String') {\n        curlHandle.setOpt('POSTFIELDS', fetchRequest['bodyInit']);\n    }\n    else {\n        const nodeReadable = (fetchRequest.body != null\n            ? (0, utils_js_1.isNodeReadable)(fetchRequest.body)\n                ? fetchRequest.body\n                : node_stream_1.Readable.from(fetchRequest.body)\n            : null);\n        if (nodeReadable) {\n            curlHandle.setOpt('UPLOAD', true);\n            curlHandle.setUploadStream(nodeReadable);\n        }\n    }\n    if (process.env.DEBUG) {\n        curlHandle.setOpt('VERBOSE', true);\n    }\n    curlHandle.setOpt('TRANSFER_ENCODING', false);\n    curlHandle.setOpt('HTTP_TRANSFER_DECODING', true);\n    curlHandle.setOpt('FOLLOWLOCATION', fetchRequest.redirect === 'follow');\n    curlHandle.setOpt('MAXREDIRS', 20);\n    curlHandle.setOpt('ACCEPT_ENCODING', '');\n    curlHandle.setOpt('CUSTOMREQUEST', fetchRequest.method);\n    const headersSerializer = fetchRequest.headersSerializer || utils_js_1.defaultHeadersSerializer;\n    let size;\n    const curlHeaders = headersSerializer(fetchRequest.headers, value => {\n        size = Number(value);\n    });\n    if (size != null) {\n        curlHandle.setOpt('INFILESIZE', size);\n    }\n    curlHandle.setOpt('HTTPHEADER', curlHeaders);\n    curlHandle.enable(CurlFeature.NoHeaderParsing);\n    const deferredPromise = (0, promise_helpers_1.createDeferredPromise)();\n    let streamResolved;\n    function onAbort() {\n        if (curlHandle.isOpen) {\n            try {\n                curlHandle.pause(CurlPause.Recv);\n            }\n            catch (e) {\n                deferredPromise.reject(e);\n            }\n        }\n    }\n    signal?.addEventListener('abort', onAbort, { once: true });\n    curlHandle.once('end', function endListener() {\n        try {\n            curlHandle.close();\n        }\n        catch (e) {\n            deferredPromise.reject(e);\n        }\n        signal?.removeEventListener('abort', onAbort);\n    });\n    curlHandle.once('error', function errorListener(error) {\n        if (streamResolved && !streamResolved.closed && !streamResolved.destroyed) {\n            streamResolved.destroy(error);\n        }\n        else {\n            if (error.message === 'Operation was aborted by an application callback') {\n                error.message = 'The operation was aborted.';\n            }\n            deferredPromise.reject(error);\n        }\n        try {\n            curlHandle.close();\n        }\n        catch (e) {\n            deferredPromise.reject(e);\n        }\n    });\n    curlHandle.once('stream', function streamListener(stream, status, headersBuf) {\n        const outputStream = stream.pipe(new node_stream_1.PassThrough(), {\n            end: true,\n        });\n        const headersFlat = headersBuf\n            .toString('utf8')\n            .split(/\\r?\\n|\\r/g)\n            .filter(headerFilter => {\n            if (headerFilter && !headerFilter.startsWith('HTTP/')) {\n                if (fetchRequest.redirect === 'error' &&\n                    headerFilter.toLowerCase().includes('location') &&\n                    (0, utils_js_1.shouldRedirect)(status)) {\n                    if (!stream.destroyed) {\n                        stream.resume();\n                    }\n                    outputStream.destroy();\n                    deferredPromise.reject(new Error('redirect is not allowed'));\n                }\n                return true;\n            }\n            return false;\n        });\n        const headersInit = headersFlat.map(headerFlat => headerFlat.split(/:\\s(.+)/).slice(0, 2));\n        const ponyfillResponse = new Response_js_1.PonyfillResponse(outputStream, {\n            status,\n            headers: headersInit,\n            url: curlHandle.getInfo(Curl.info.REDIRECT_URL)?.toString() || fetchRequest.url,\n            redirected: Number(curlHandle.getInfo(Curl.info.REDIRECT_COUNT)) > 0,\n        });\n        deferredPromise.resolve(ponyfillResponse);\n        streamResolved = outputStream;\n    });\n    setImmediate(() => {\n        curlHandle.perform();\n    });\n    return deferredPromise.promise;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/fetchCurl.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/fetchNodeHttp.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@whatwg-node/node-fetch/cjs/fetchNodeHttp.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.fetchNodeHttp = fetchNodeHttp;\nconst node_http_1 = __webpack_require__(/*! node:http */ \"node:http\");\nconst node_https_1 = __webpack_require__(/*! node:https */ \"node:https\");\nconst node_stream_1 = __webpack_require__(/*! node:stream */ \"node:stream\");\nconst node_zlib_1 = __webpack_require__(/*! node:zlib */ \"node:zlib\");\nconst promise_helpers_1 = __webpack_require__(/*! @whatwg-node/promise-helpers */ \"(rsc)/./node_modules/@whatwg-node/promise-helpers/cjs/index.js\");\nconst Request_js_1 = __webpack_require__(/*! ./Request.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/Request.js\");\nconst Response_js_1 = __webpack_require__(/*! ./Response.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/Response.js\");\nconst URL_js_1 = __webpack_require__(/*! ./URL.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/URL.js\");\nconst utils_js_1 = __webpack_require__(/*! ./utils.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/utils.js\");\nfunction getRequestFnForProtocol(url) {\n    if (url.startsWith('http:')) {\n        return node_http_1.request;\n    }\n    else if (url.startsWith('https:')) {\n        return node_https_1.request;\n    }\n    throw new Error(`Unsupported protocol: ${url.split(':')[0] || url}`);\n}\nfunction fetchNodeHttp(fetchRequest) {\n    return new Promise((resolve, reject) => {\n        try {\n            const requestFn = getRequestFnForProtocol(fetchRequest.parsedUrl?.protocol || fetchRequest.url);\n            const headersSerializer = fetchRequest.headersSerializer || utils_js_1.getHeadersObj;\n            const nodeHeaders = headersSerializer(fetchRequest.headers);\n            nodeHeaders['accept-encoding'] ||= 'gzip, deflate, br';\n            nodeHeaders['user-agent'] ||= 'node';\n            let signal;\n            if (fetchRequest._signal == null) {\n                signal = undefined;\n            }\n            else if (fetchRequest._signal) {\n                signal = fetchRequest._signal;\n            }\n            let nodeRequest;\n            // If it is our ponyfilled Request, it should have `parsedUrl` which is a `URL` object\n            if (fetchRequest.parsedUrl) {\n                nodeRequest = requestFn(fetchRequest.parsedUrl, {\n                    method: fetchRequest.method,\n                    headers: nodeHeaders,\n                    signal,\n                    agent: fetchRequest.agent,\n                });\n            }\n            else {\n                nodeRequest = requestFn(fetchRequest.url, {\n                    method: fetchRequest.method,\n                    headers: nodeHeaders,\n                    signal,\n                    agent: fetchRequest.agent,\n                });\n            }\n            nodeRequest.once('error', reject);\n            nodeRequest.once('response', nodeResponse => {\n                let outputStream;\n                const contentEncoding = nodeResponse.headers['content-encoding'];\n                switch (contentEncoding) {\n                    case 'x-gzip':\n                    case 'gzip':\n                        outputStream = (0, node_zlib_1.createGunzip)();\n                        break;\n                    case 'x-deflate':\n                    case 'deflate':\n                        outputStream = (0, node_zlib_1.createInflate)();\n                        break;\n                    case 'x-deflate-raw':\n                    case 'deflate-raw':\n                        outputStream = (0, node_zlib_1.createInflateRaw)();\n                        break;\n                    case 'br':\n                        outputStream = (0, node_zlib_1.createBrotliDecompress)();\n                        break;\n                }\n                if (nodeResponse.headers.location && (0, utils_js_1.shouldRedirect)(nodeResponse.statusCode)) {\n                    if (fetchRequest.redirect === 'error') {\n                        const redirectError = new Error('Redirects are not allowed');\n                        reject(redirectError);\n                        nodeResponse.resume();\n                        return;\n                    }\n                    if (fetchRequest.redirect === 'follow') {\n                        const redirectedUrl = new URL_js_1.PonyfillURL(nodeResponse.headers.location, fetchRequest.parsedUrl || fetchRequest.url);\n                        const redirectResponse$ = fetchNodeHttp(new Request_js_1.PonyfillRequest(redirectedUrl, fetchRequest));\n                        resolve(redirectResponse$.then(redirectResponse => {\n                            redirectResponse.redirected = true;\n                            return redirectResponse;\n                        }));\n                        nodeResponse.resume();\n                        return;\n                    }\n                }\n                outputStream ||= new node_stream_1.PassThrough();\n                (0, utils_js_1.pipeThrough)({\n                    src: nodeResponse,\n                    dest: outputStream,\n                    signal,\n                    onError: e => {\n                        if (!nodeResponse.destroyed) {\n                            nodeResponse.destroy(e);\n                        }\n                        if (!outputStream.destroyed) {\n                            outputStream.destroy(e);\n                        }\n                        reject(e);\n                    },\n                });\n                const statusCode = nodeResponse.statusCode || 200;\n                let statusText = nodeResponse.statusMessage || node_http_1.STATUS_CODES[statusCode];\n                if (statusText == null) {\n                    statusText = '';\n                }\n                const ponyfillResponse = new Response_js_1.PonyfillResponse(outputStream || nodeResponse, {\n                    status: statusCode,\n                    statusText,\n                    headers: nodeResponse.headers,\n                    url: fetchRequest.url,\n                    signal,\n                });\n                resolve(ponyfillResponse);\n            });\n            if (fetchRequest['_buffer'] != null) {\n                (0, promise_helpers_1.handleMaybePromise)(() => (0, utils_js_1.safeWrite)(fetchRequest['_buffer'], nodeRequest), () => (0, utils_js_1.endStream)(nodeRequest), reject);\n            }\n            else {\n                const nodeReadable = (fetchRequest.body != null\n                    ? (0, utils_js_1.isNodeReadable)(fetchRequest.body)\n                        ? fetchRequest.body\n                        : node_stream_1.Readable.from(fetchRequest.body)\n                    : null);\n                if (nodeReadable) {\n                    nodeReadable.pipe(nodeRequest);\n                }\n                else {\n                    (0, utils_js_1.endStream)(nodeRequest);\n                }\n            }\n        }\n        catch (e) {\n            reject(e);\n        }\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/fetchNodeHttp.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/index.js":
/*!***********************************************************!*\
  !*** ./node_modules/@whatwg-node/node-fetch/cjs/index.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.TextEncoderStream = exports.TextDecoderStream = exports.IteratorObject = exports.DecompressionStream = exports.CompressionStream = exports.TransformStream = exports.WritableStream = exports.URLSearchParams = exports.URL = exports.btoa = exports.TextDecoder = exports.TextEncoder = exports.Blob = exports.FormData = exports.File = exports.ReadableStream = exports.Response = exports.Request = exports.Body = exports.Headers = exports.fetch = void 0;\nvar fetch_js_1 = __webpack_require__(/*! ./fetch.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/fetch.js\");\nObject.defineProperty(exports, \"fetch\", ({ enumerable: true, get: function () { return fetch_js_1.fetchPonyfill; } }));\nvar Headers_js_1 = __webpack_require__(/*! ./Headers.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/Headers.js\");\nObject.defineProperty(exports, \"Headers\", ({ enumerable: true, get: function () { return Headers_js_1.PonyfillHeaders; } }));\nvar Body_js_1 = __webpack_require__(/*! ./Body.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/Body.js\");\nObject.defineProperty(exports, \"Body\", ({ enumerable: true, get: function () { return Body_js_1.PonyfillBody; } }));\nvar Request_js_1 = __webpack_require__(/*! ./Request.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/Request.js\");\nObject.defineProperty(exports, \"Request\", ({ enumerable: true, get: function () { return Request_js_1.PonyfillRequest; } }));\nvar Response_js_1 = __webpack_require__(/*! ./Response.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/Response.js\");\nObject.defineProperty(exports, \"Response\", ({ enumerable: true, get: function () { return Response_js_1.PonyfillResponse; } }));\nvar ReadableStream_js_1 = __webpack_require__(/*! ./ReadableStream.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/ReadableStream.js\");\nObject.defineProperty(exports, \"ReadableStream\", ({ enumerable: true, get: function () { return ReadableStream_js_1.PonyfillReadableStream; } }));\nvar File_js_1 = __webpack_require__(/*! ./File.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/File.js\");\nObject.defineProperty(exports, \"File\", ({ enumerable: true, get: function () { return File_js_1.PonyfillFile; } }));\nvar FormData_js_1 = __webpack_require__(/*! ./FormData.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/FormData.js\");\nObject.defineProperty(exports, \"FormData\", ({ enumerable: true, get: function () { return FormData_js_1.PonyfillFormData; } }));\nvar Blob_js_1 = __webpack_require__(/*! ./Blob.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/Blob.js\");\nObject.defineProperty(exports, \"Blob\", ({ enumerable: true, get: function () { return Blob_js_1.PonyfillBlob; } }));\nvar TextEncoderDecoder_js_1 = __webpack_require__(/*! ./TextEncoderDecoder.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/TextEncoderDecoder.js\");\nObject.defineProperty(exports, \"TextEncoder\", ({ enumerable: true, get: function () { return TextEncoderDecoder_js_1.PonyfillTextEncoder; } }));\nObject.defineProperty(exports, \"TextDecoder\", ({ enumerable: true, get: function () { return TextEncoderDecoder_js_1.PonyfillTextDecoder; } }));\nObject.defineProperty(exports, \"btoa\", ({ enumerable: true, get: function () { return TextEncoderDecoder_js_1.PonyfillBtoa; } }));\nvar URL_js_1 = __webpack_require__(/*! ./URL.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/URL.js\");\nObject.defineProperty(exports, \"URL\", ({ enumerable: true, get: function () { return URL_js_1.PonyfillURL; } }));\nvar URLSearchParams_js_1 = __webpack_require__(/*! ./URLSearchParams.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/URLSearchParams.js\");\nObject.defineProperty(exports, \"URLSearchParams\", ({ enumerable: true, get: function () { return URLSearchParams_js_1.PonyfillURLSearchParams; } }));\nvar WritableStream_js_1 = __webpack_require__(/*! ./WritableStream.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/WritableStream.js\");\nObject.defineProperty(exports, \"WritableStream\", ({ enumerable: true, get: function () { return WritableStream_js_1.PonyfillWritableStream; } }));\nvar TransformStream_js_1 = __webpack_require__(/*! ./TransformStream.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/TransformStream.js\");\nObject.defineProperty(exports, \"TransformStream\", ({ enumerable: true, get: function () { return TransformStream_js_1.PonyfillTransformStream; } }));\nvar CompressionStream_js_1 = __webpack_require__(/*! ./CompressionStream.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/CompressionStream.js\");\nObject.defineProperty(exports, \"CompressionStream\", ({ enumerable: true, get: function () { return CompressionStream_js_1.PonyfillCompressionStream; } }));\nvar DecompressionStream_js_1 = __webpack_require__(/*! ./DecompressionStream.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/DecompressionStream.js\");\nObject.defineProperty(exports, \"DecompressionStream\", ({ enumerable: true, get: function () { return DecompressionStream_js_1.PonyfillDecompressionStream; } }));\nvar IteratorObject_js_1 = __webpack_require__(/*! ./IteratorObject.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/IteratorObject.js\");\nObject.defineProperty(exports, \"IteratorObject\", ({ enumerable: true, get: function () { return IteratorObject_js_1.PonyfillIteratorObject; } }));\nvar TextEncoderDecoderStream_js_1 = __webpack_require__(/*! ./TextEncoderDecoderStream.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/TextEncoderDecoderStream.js\");\nObject.defineProperty(exports, \"TextDecoderStream\", ({ enumerable: true, get: function () { return TextEncoderDecoderStream_js_1.PonyfillTextDecoderStream; } }));\nObject.defineProperty(exports, \"TextEncoderStream\", ({ enumerable: true, get: function () { return TextEncoderDecoderStream_js_1.PonyfillTextEncoderStream; } }));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/utils.js":
/*!***********************************************************!*\
  !*** ./node_modules/@whatwg-node/node-fetch/cjs/utils.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.fakePromise = void 0;\nexports.getHeadersObj = getHeadersObj;\nexports.defaultHeadersSerializer = defaultHeadersSerializer;\nexports.isArrayBufferView = isArrayBufferView;\nexports.isNodeReadable = isNodeReadable;\nexports.isIterable = isIterable;\nexports.shouldRedirect = shouldRedirect;\nexports.pipeThrough = pipeThrough;\nexports.endStream = endStream;\nexports.safeWrite = safeWrite;\nconst node_events_1 = __webpack_require__(/*! node:events */ \"node:events\");\nfunction isHeadersInstance(obj) {\n    return obj?.forEach != null;\n}\nfunction getHeadersObj(headers) {\n    if (headers == null || !isHeadersInstance(headers)) {\n        return headers;\n    }\n    // @ts-expect-error - `headersInit` is not a public property\n    if (headers.headersInit && !headers._map && !isHeadersInstance(headers.headersInit)) {\n        // @ts-expect-error - `headersInit` is not a public property\n        return headers.headersInit;\n    }\n    return Object.fromEntries(headers.entries());\n}\nfunction defaultHeadersSerializer(headers, onContentLength) {\n    const headerArray = [];\n    headers.forEach((value, key) => {\n        if (onContentLength && key === 'content-length') {\n            onContentLength(value);\n        }\n        headerArray.push(`${key}: ${value}`);\n    });\n    return headerArray;\n}\nvar promise_helpers_1 = __webpack_require__(/*! @whatwg-node/promise-helpers */ \"(rsc)/./node_modules/@whatwg-node/promise-helpers/cjs/index.js\");\nObject.defineProperty(exports, \"fakePromise\", ({ enumerable: true, get: function () { return promise_helpers_1.fakePromise; } }));\nfunction isArrayBufferView(obj) {\n    return obj != null && obj.buffer != null && obj.byteLength != null && obj.byteOffset != null;\n}\nfunction isNodeReadable(obj) {\n    return obj != null && obj.pipe != null;\n}\nfunction isIterable(value) {\n    return value?.[Symbol.iterator] != null;\n}\nfunction shouldRedirect(status) {\n    return status === 301 || status === 302 || status === 303 || status === 307 || status === 308;\n}\nfunction pipeThrough({ src, dest, signal, onError, }) {\n    if (onError) {\n        // listen for errors on the destination stream if necessary. if the readable\n        // stream (src) emits an error, the writable destination (dest) will be\n        // destroyed with that error (see below)\n        dest.once('error', onError);\n    }\n    src.once('error', (e) => {\n        // if the readable stream (src) emits an error during pipe, the writable\n        // destination (dest) is not closed automatically. that needs to be\n        // done manually. the readable stream is closed when error is emitted,\n        // so only the writable destination needs to be destroyed\n        dest.destroy(e);\n    });\n    dest.once('close', () => {\n        // if the writable destination (dest) is closed, the readable stream (src)\n        // is not closed automatically. that needs to be done manually\n        if (!src.destroyed) {\n            src.destroy();\n        }\n    });\n    if (signal) {\n        // this is faster than `import('node:signal').addAbortSignal(signal, src)`\n        const srcRef = new WeakRef(src);\n        const signalRef = new WeakRef(signal);\n        function cleanup() {\n            signalRef.deref()?.removeEventListener('abort', onAbort);\n            srcRef.deref()?.removeListener('end', cleanup);\n            srcRef.deref()?.removeListener('error', cleanup);\n            srcRef.deref()?.removeListener('close', cleanup);\n        }\n        function onAbort() {\n            srcRef.deref()?.destroy(new AbortError());\n            cleanup();\n        }\n        signal.addEventListener('abort', onAbort, { once: true });\n        // this is faster than `import('node:signal').finished(src, cleanup)`\n        src.once('end', cleanup);\n        src.once('error', cleanup);\n        src.once('close', cleanup);\n    }\n    src.pipe(dest, { end: true /* already default */ });\n}\nfunction endStream(stream) {\n    // @ts-expect-error Avoid arguments adaptor trampoline https://v8.dev/blog/adaptor-frame\n    return stream.end(null, null, null);\n}\nfunction safeWrite(chunk, stream) {\n    const result = stream.write(chunk);\n    if (!result) {\n        return (0, node_events_1.once)(stream, 'drain');\n    }\n}\n// https://github.com/nodejs/node/blob/f692878dec6354c0a82241f224906981861bc840/lib/internal/errors.js#L961-L973\nclass AbortError extends Error {\n    constructor(message = 'The operation was aborted', options = undefined) {\n        super(message, options);\n        this.name = 'AbortError';\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL25vZGUtZmV0Y2gvY2pzL3V0aWxzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELG1CQUFtQjtBQUNuQixxQkFBcUI7QUFDckIsZ0NBQWdDO0FBQ2hDLHlCQUF5QjtBQUN6QixzQkFBc0I7QUFDdEIsa0JBQWtCO0FBQ2xCLHNCQUFzQjtBQUN0QixtQkFBbUI7QUFDbkIsaUJBQWlCO0FBQ2pCLGlCQUFpQjtBQUNqQixzQkFBc0IsbUJBQU8sQ0FBQyxnQ0FBYTtBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCLElBQUksSUFBSSxNQUFNO0FBQzFDLEtBQUs7QUFDTDtBQUNBO0FBQ0Esd0JBQXdCLG1CQUFPLENBQUMsb0dBQThCO0FBQzlELCtDQUE4QyxFQUFFLHFDQUFxQyx5Q0FBeUMsRUFBQztBQUMvSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsNkJBQTZCO0FBQ3BEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9EQUFvRCxZQUFZO0FBQ2hFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUIsaUNBQWlDO0FBQ3REO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiL2hvbWUvY2V0ZWMvTm9kZVByb2plY3RzL2FndWlfdGVzdC9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL25vZGUtZmV0Y2gvY2pzL3V0aWxzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5mYWtlUHJvbWlzZSA9IHZvaWQgMDtcbmV4cG9ydHMuZ2V0SGVhZGVyc09iaiA9IGdldEhlYWRlcnNPYmo7XG5leHBvcnRzLmRlZmF1bHRIZWFkZXJzU2VyaWFsaXplciA9IGRlZmF1bHRIZWFkZXJzU2VyaWFsaXplcjtcbmV4cG9ydHMuaXNBcnJheUJ1ZmZlclZpZXcgPSBpc0FycmF5QnVmZmVyVmlldztcbmV4cG9ydHMuaXNOb2RlUmVhZGFibGUgPSBpc05vZGVSZWFkYWJsZTtcbmV4cG9ydHMuaXNJdGVyYWJsZSA9IGlzSXRlcmFibGU7XG5leHBvcnRzLnNob3VsZFJlZGlyZWN0ID0gc2hvdWxkUmVkaXJlY3Q7XG5leHBvcnRzLnBpcGVUaHJvdWdoID0gcGlwZVRocm91Z2g7XG5leHBvcnRzLmVuZFN0cmVhbSA9IGVuZFN0cmVhbTtcbmV4cG9ydHMuc2FmZVdyaXRlID0gc2FmZVdyaXRlO1xuY29uc3Qgbm9kZV9ldmVudHNfMSA9IHJlcXVpcmUoXCJub2RlOmV2ZW50c1wiKTtcbmZ1bmN0aW9uIGlzSGVhZGVyc0luc3RhbmNlKG9iaikge1xuICAgIHJldHVybiBvYmo/LmZvckVhY2ggIT0gbnVsbDtcbn1cbmZ1bmN0aW9uIGdldEhlYWRlcnNPYmooaGVhZGVycykge1xuICAgIGlmIChoZWFkZXJzID09IG51bGwgfHwgIWlzSGVhZGVyc0luc3RhbmNlKGhlYWRlcnMpKSB7XG4gICAgICAgIHJldHVybiBoZWFkZXJzO1xuICAgIH1cbiAgICAvLyBAdHMtZXhwZWN0LWVycm9yIC0gYGhlYWRlcnNJbml0YCBpcyBub3QgYSBwdWJsaWMgcHJvcGVydHlcbiAgICBpZiAoaGVhZGVycy5oZWFkZXJzSW5pdCAmJiAhaGVhZGVycy5fbWFwICYmICFpc0hlYWRlcnNJbnN0YW5jZShoZWFkZXJzLmhlYWRlcnNJbml0KSkge1xuICAgICAgICAvLyBAdHMtZXhwZWN0LWVycm9yIC0gYGhlYWRlcnNJbml0YCBpcyBub3QgYSBwdWJsaWMgcHJvcGVydHlcbiAgICAgICAgcmV0dXJuIGhlYWRlcnMuaGVhZGVyc0luaXQ7XG4gICAgfVxuICAgIHJldHVybiBPYmplY3QuZnJvbUVudHJpZXMoaGVhZGVycy5lbnRyaWVzKCkpO1xufVxuZnVuY3Rpb24gZGVmYXVsdEhlYWRlcnNTZXJpYWxpemVyKGhlYWRlcnMsIG9uQ29udGVudExlbmd0aCkge1xuICAgIGNvbnN0IGhlYWRlckFycmF5ID0gW107XG4gICAgaGVhZGVycy5mb3JFYWNoKCh2YWx1ZSwga2V5KSA9PiB7XG4gICAgICAgIGlmIChvbkNvbnRlbnRMZW5ndGggJiYga2V5ID09PSAnY29udGVudC1sZW5ndGgnKSB7XG4gICAgICAgICAgICBvbkNvbnRlbnRMZW5ndGgodmFsdWUpO1xuICAgICAgICB9XG4gICAgICAgIGhlYWRlckFycmF5LnB1c2goYCR7a2V5fTogJHt2YWx1ZX1gKTtcbiAgICB9KTtcbiAgICByZXR1cm4gaGVhZGVyQXJyYXk7XG59XG52YXIgcHJvbWlzZV9oZWxwZXJzXzEgPSByZXF1aXJlKFwiQHdoYXR3Zy1ub2RlL3Byb21pc2UtaGVscGVyc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImZha2VQcm9taXNlXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBwcm9taXNlX2hlbHBlcnNfMS5mYWtlUHJvbWlzZTsgfSB9KTtcbmZ1bmN0aW9uIGlzQXJyYXlCdWZmZXJWaWV3KG9iaikge1xuICAgIHJldHVybiBvYmogIT0gbnVsbCAmJiBvYmouYnVmZmVyICE9IG51bGwgJiYgb2JqLmJ5dGVMZW5ndGggIT0gbnVsbCAmJiBvYmouYnl0ZU9mZnNldCAhPSBudWxsO1xufVxuZnVuY3Rpb24gaXNOb2RlUmVhZGFibGUob2JqKSB7XG4gICAgcmV0dXJuIG9iaiAhPSBudWxsICYmIG9iai5waXBlICE9IG51bGw7XG59XG5mdW5jdGlvbiBpc0l0ZXJhYmxlKHZhbHVlKSB7XG4gICAgcmV0dXJuIHZhbHVlPy5bU3ltYm9sLml0ZXJhdG9yXSAhPSBudWxsO1xufVxuZnVuY3Rpb24gc2hvdWxkUmVkaXJlY3Qoc3RhdHVzKSB7XG4gICAgcmV0dXJuIHN0YXR1cyA9PT0gMzAxIHx8IHN0YXR1cyA9PT0gMzAyIHx8IHN0YXR1cyA9PT0gMzAzIHx8IHN0YXR1cyA9PT0gMzA3IHx8IHN0YXR1cyA9PT0gMzA4O1xufVxuZnVuY3Rpb24gcGlwZVRocm91Z2goeyBzcmMsIGRlc3QsIHNpZ25hbCwgb25FcnJvciwgfSkge1xuICAgIGlmIChvbkVycm9yKSB7XG4gICAgICAgIC8vIGxpc3RlbiBmb3IgZXJyb3JzIG9uIHRoZSBkZXN0aW5hdGlvbiBzdHJlYW0gaWYgbmVjZXNzYXJ5LiBpZiB0aGUgcmVhZGFibGVcbiAgICAgICAgLy8gc3RyZWFtIChzcmMpIGVtaXRzIGFuIGVycm9yLCB0aGUgd3JpdGFibGUgZGVzdGluYXRpb24gKGRlc3QpIHdpbGwgYmVcbiAgICAgICAgLy8gZGVzdHJveWVkIHdpdGggdGhhdCBlcnJvciAoc2VlIGJlbG93KVxuICAgICAgICBkZXN0Lm9uY2UoJ2Vycm9yJywgb25FcnJvcik7XG4gICAgfVxuICAgIHNyYy5vbmNlKCdlcnJvcicsIChlKSA9PiB7XG4gICAgICAgIC8vIGlmIHRoZSByZWFkYWJsZSBzdHJlYW0gKHNyYykgZW1pdHMgYW4gZXJyb3IgZHVyaW5nIHBpcGUsIHRoZSB3cml0YWJsZVxuICAgICAgICAvLyBkZXN0aW5hdGlvbiAoZGVzdCkgaXMgbm90IGNsb3NlZCBhdXRvbWF0aWNhbGx5LiB0aGF0IG5lZWRzIHRvIGJlXG4gICAgICAgIC8vIGRvbmUgbWFudWFsbHkuIHRoZSByZWFkYWJsZSBzdHJlYW0gaXMgY2xvc2VkIHdoZW4gZXJyb3IgaXMgZW1pdHRlZCxcbiAgICAgICAgLy8gc28gb25seSB0aGUgd3JpdGFibGUgZGVzdGluYXRpb24gbmVlZHMgdG8gYmUgZGVzdHJveWVkXG4gICAgICAgIGRlc3QuZGVzdHJveShlKTtcbiAgICB9KTtcbiAgICBkZXN0Lm9uY2UoJ2Nsb3NlJywgKCkgPT4ge1xuICAgICAgICAvLyBpZiB0aGUgd3JpdGFibGUgZGVzdGluYXRpb24gKGRlc3QpIGlzIGNsb3NlZCwgdGhlIHJlYWRhYmxlIHN0cmVhbSAoc3JjKVxuICAgICAgICAvLyBpcyBub3QgY2xvc2VkIGF1dG9tYXRpY2FsbHkuIHRoYXQgbmVlZHMgdG8gYmUgZG9uZSBtYW51YWxseVxuICAgICAgICBpZiAoIXNyYy5kZXN0cm95ZWQpIHtcbiAgICAgICAgICAgIHNyYy5kZXN0cm95KCk7XG4gICAgICAgIH1cbiAgICB9KTtcbiAgICBpZiAoc2lnbmFsKSB7XG4gICAgICAgIC8vIHRoaXMgaXMgZmFzdGVyIHRoYW4gYGltcG9ydCgnbm9kZTpzaWduYWwnKS5hZGRBYm9ydFNpZ25hbChzaWduYWwsIHNyYylgXG4gICAgICAgIGNvbnN0IHNyY1JlZiA9IG5ldyBXZWFrUmVmKHNyYyk7XG4gICAgICAgIGNvbnN0IHNpZ25hbFJlZiA9IG5ldyBXZWFrUmVmKHNpZ25hbCk7XG4gICAgICAgIGZ1bmN0aW9uIGNsZWFudXAoKSB7XG4gICAgICAgICAgICBzaWduYWxSZWYuZGVyZWYoKT8ucmVtb3ZlRXZlbnRMaXN0ZW5lcignYWJvcnQnLCBvbkFib3J0KTtcbiAgICAgICAgICAgIHNyY1JlZi5kZXJlZigpPy5yZW1vdmVMaXN0ZW5lcignZW5kJywgY2xlYW51cCk7XG4gICAgICAgICAgICBzcmNSZWYuZGVyZWYoKT8ucmVtb3ZlTGlzdGVuZXIoJ2Vycm9yJywgY2xlYW51cCk7XG4gICAgICAgICAgICBzcmNSZWYuZGVyZWYoKT8ucmVtb3ZlTGlzdGVuZXIoJ2Nsb3NlJywgY2xlYW51cCk7XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gb25BYm9ydCgpIHtcbiAgICAgICAgICAgIHNyY1JlZi5kZXJlZigpPy5kZXN0cm95KG5ldyBBYm9ydEVycm9yKCkpO1xuICAgICAgICAgICAgY2xlYW51cCgpO1xuICAgICAgICB9XG4gICAgICAgIHNpZ25hbC5hZGRFdmVudExpc3RlbmVyKCdhYm9ydCcsIG9uQWJvcnQsIHsgb25jZTogdHJ1ZSB9KTtcbiAgICAgICAgLy8gdGhpcyBpcyBmYXN0ZXIgdGhhbiBgaW1wb3J0KCdub2RlOnNpZ25hbCcpLmZpbmlzaGVkKHNyYywgY2xlYW51cClgXG4gICAgICAgIHNyYy5vbmNlKCdlbmQnLCBjbGVhbnVwKTtcbiAgICAgICAgc3JjLm9uY2UoJ2Vycm9yJywgY2xlYW51cCk7XG4gICAgICAgIHNyYy5vbmNlKCdjbG9zZScsIGNsZWFudXApO1xuICAgIH1cbiAgICBzcmMucGlwZShkZXN0LCB7IGVuZDogdHJ1ZSAvKiBhbHJlYWR5IGRlZmF1bHQgKi8gfSk7XG59XG5mdW5jdGlvbiBlbmRTdHJlYW0oc3RyZWFtKSB7XG4gICAgLy8gQHRzLWV4cGVjdC1lcnJvciBBdm9pZCBhcmd1bWVudHMgYWRhcHRvciB0cmFtcG9saW5lIGh0dHBzOi8vdjguZGV2L2Jsb2cvYWRhcHRvci1mcmFtZVxuICAgIHJldHVybiBzdHJlYW0uZW5kKG51bGwsIG51bGwsIG51bGwpO1xufVxuZnVuY3Rpb24gc2FmZVdyaXRlKGNodW5rLCBzdHJlYW0pIHtcbiAgICBjb25zdCByZXN1bHQgPSBzdHJlYW0ud3JpdGUoY2h1bmspO1xuICAgIGlmICghcmVzdWx0KSB7XG4gICAgICAgIHJldHVybiAoMCwgbm9kZV9ldmVudHNfMS5vbmNlKShzdHJlYW0sICdkcmFpbicpO1xuICAgIH1cbn1cbi8vIGh0dHBzOi8vZ2l0aHViLmNvbS9ub2RlanMvbm9kZS9ibG9iL2Y2OTI4NzhkZWM2MzU0YzBhODIyNDFmMjI0OTA2OTgxODYxYmM4NDAvbGliL2ludGVybmFsL2Vycm9ycy5qcyNMOTYxLUw5NzNcbmNsYXNzIEFib3J0RXJyb3IgZXh0ZW5kcyBFcnJvciB7XG4gICAgY29uc3RydWN0b3IobWVzc2FnZSA9ICdUaGUgb3BlcmF0aW9uIHdhcyBhYm9ydGVkJywgb3B0aW9ucyA9IHVuZGVmaW5lZCkge1xuICAgICAgICBzdXBlcihtZXNzYWdlLCBvcHRpb25zKTtcbiAgICAgICAgdGhpcy5uYW1lID0gJ0Fib3J0RXJyb3InO1xuICAgIH1cbn1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/utils.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@whatwg-node/promise-helpers/cjs/index.js":
/*!****************************************************************!*\
  !*** ./node_modules/@whatwg-node/promise-helpers/cjs/index.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isPromise = isPromise;\nexports.isActualPromise = isActualPromise;\nexports.handleMaybePromise = handleMaybePromise;\nexports.fakePromise = fakePromise;\nexports.createDeferredPromise = createDeferredPromise;\nexports.iterateAsync = iterateAsync;\nexports.iterateAsyncVoid = iterateAsync;\nexports.fakeRejectPromise = fakeRejectPromise;\nexports.mapMaybePromise = mapMaybePromise;\nexports.mapAsyncIterator = mapAsyncIterator;\nexports.promiseLikeFinally = promiseLikeFinally;\nexports.unfakePromise = unfakePromise;\nconst kFakePromise = Symbol.for('@whatwg-node/promise-helpers/FakePromise');\nfunction isPromise(value) {\n    return value?.then != null;\n}\nfunction isActualPromise(value) {\n    const maybePromise = value;\n    return maybePromise && maybePromise.then && maybePromise.catch && maybePromise.finally;\n}\nfunction handleMaybePromise(inputFactory, outputSuccessFactory, outputErrorFactory, finallyFactory) {\n    let result$ = fakePromise().then(inputFactory).then(outputSuccessFactory, outputErrorFactory);\n    if (finallyFactory) {\n        result$ = result$.finally(finallyFactory);\n    }\n    return unfakePromise(result$);\n}\nfunction fakePromise(value) {\n    if (value && isActualPromise(value)) {\n        return value;\n    }\n    if (isPromise(value)) {\n        return {\n            then: (resolve, reject) => fakePromise(value.then(resolve, reject)),\n            catch: reject => fakePromise(value.then(res => res, reject)),\n            finally: cb => fakePromise(cb ? promiseLikeFinally(value, cb) : value),\n            [Symbol.toStringTag]: 'Promise',\n        };\n    }\n    // Write a fake promise to avoid the promise constructor\n    // being called with `new Promise` in the browser.\n    return {\n        then(resolve) {\n            if (resolve) {\n                try {\n                    return fakePromise(resolve(value));\n                }\n                catch (err) {\n                    return fakeRejectPromise(err);\n                }\n            }\n            return this;\n        },\n        catch() {\n            return this;\n        },\n        finally(cb) {\n            if (cb) {\n                try {\n                    return fakePromise(cb()).then(() => value, () => value);\n                }\n                catch (err) {\n                    return fakeRejectPromise(err);\n                }\n            }\n            return this;\n        },\n        [Symbol.toStringTag]: 'Promise',\n        __fakePromiseValue: value,\n        [kFakePromise]: 'resolved',\n    };\n}\nfunction createDeferredPromise() {\n    if (Promise.withResolvers) {\n        return Promise.withResolvers();\n    }\n    let resolveFn;\n    let rejectFn;\n    const promise = new Promise(function deferredPromiseExecutor(resolve, reject) {\n        resolveFn = resolve;\n        rejectFn = reject;\n    });\n    return {\n        promise,\n        get resolve() {\n            return resolveFn;\n        },\n        get reject() {\n            return rejectFn;\n        },\n    };\n}\nfunction iterateAsync(iterable, callback, results) {\n    if (iterable?.length === 0) {\n        return;\n    }\n    const iterator = iterable[Symbol.iterator]();\n    let index = 0;\n    function iterate() {\n        const { done: endOfIterator, value } = iterator.next();\n        if (endOfIterator) {\n            return;\n        }\n        let endedEarly = false;\n        function endEarly() {\n            endedEarly = true;\n        }\n        return handleMaybePromise(function handleCallback() {\n            return callback(value, endEarly, index++);\n        }, function handleCallbackResult(result) {\n            if (result) {\n                results?.push(result);\n            }\n            if (endedEarly) {\n                return;\n            }\n            return iterate();\n        });\n    }\n    return iterate();\n}\nfunction fakeRejectPromise(error) {\n    return {\n        then(_resolve, reject) {\n            if (reject) {\n                try {\n                    return fakePromise(reject(error));\n                }\n                catch (err) {\n                    return fakeRejectPromise(err);\n                }\n            }\n            return this;\n        },\n        catch(reject) {\n            if (reject) {\n                try {\n                    return fakePromise(reject(error));\n                }\n                catch (err) {\n                    return fakeRejectPromise(err);\n                }\n            }\n            return this;\n        },\n        finally(cb) {\n            if (cb) {\n                try {\n                    cb();\n                }\n                catch (err) {\n                    return fakeRejectPromise(err);\n                }\n            }\n            return this;\n        },\n        __fakeRejectError: error,\n        [Symbol.toStringTag]: 'Promise',\n        [kFakePromise]: 'rejected',\n    };\n}\nfunction mapMaybePromise(input, onSuccess, onError) {\n    return handleMaybePromise(() => input, onSuccess, onError);\n}\n/**\n * Given an AsyncIterable and a callback function, return an AsyncIterator\n * which produces values mapped via calling the callback function.\n */\nfunction mapAsyncIterator(iterator, onNext, onError, onEnd) {\n    if (Symbol.asyncIterator in iterator) {\n        iterator = iterator[Symbol.asyncIterator]();\n    }\n    let $return;\n    let abruptClose;\n    let onEndWithValue;\n    if (onEnd) {\n        let onEndWithValueResult /** R in onEndWithValue */;\n        onEndWithValue = value => {\n            onEndWithValueResult ||= handleMaybePromise(onEnd, () => value, () => value);\n            return onEndWithValueResult;\n        };\n    }\n    if (typeof iterator.return === 'function') {\n        $return = iterator.return;\n        abruptClose = (error) => {\n            const rethrow = () => {\n                throw error;\n            };\n            return $return.call(iterator).then(rethrow, rethrow);\n        };\n    }\n    function mapResult(result) {\n        if (result.done) {\n            return onEndWithValue ? onEndWithValue(result) : result;\n        }\n        return handleMaybePromise(() => result.value, value => handleMaybePromise(() => onNext(value), iteratorResult, abruptClose));\n    }\n    let mapReject;\n    if (onError) {\n        let onErrorResult;\n        // Capture rejectCallback to ensure it cannot be null.\n        const reject = onError;\n        mapReject = (error) => {\n            onErrorResult ||= handleMaybePromise(() => error, error => handleMaybePromise(() => reject(error), iteratorResult, abruptClose));\n            return onErrorResult;\n        };\n    }\n    return {\n        next() {\n            return iterator.next().then(mapResult, mapReject);\n        },\n        return() {\n            const res$ = $return\n                ? $return.call(iterator).then(mapResult, mapReject)\n                : fakePromise({ value: undefined, done: true });\n            return onEndWithValue ? res$.then(onEndWithValue) : res$;\n        },\n        throw(error) {\n            if (typeof iterator.throw === 'function') {\n                return iterator.throw(error).then(mapResult, mapReject);\n            }\n            if (abruptClose) {\n                return abruptClose(error);\n            }\n            return fakeRejectPromise(error);\n        },\n        [Symbol.asyncIterator]() {\n            return this;\n        },\n    };\n}\nfunction iteratorResult(value) {\n    return { value, done: false };\n}\nfunction isFakePromise(value) {\n    return value?.[kFakePromise] === 'resolved';\n}\nfunction isFakeRejectPromise(value) {\n    return value?.[kFakePromise] === 'rejected';\n}\nfunction promiseLikeFinally(value, onFinally) {\n    if ('finally' in value) {\n        return value.finally(onFinally);\n    }\n    return value.then(res => {\n        const finallyRes = onFinally();\n        return isPromise(finallyRes) ? finallyRes.then(() => res) : res;\n    }, err => {\n        const finallyRes = onFinally();\n        if (isPromise(finallyRes)) {\n            return finallyRes.then(() => {\n                throw err;\n            });\n        }\n        else {\n            throw err;\n        }\n    });\n}\nfunction unfakePromise(promise) {\n    if (isFakePromise(promise)) {\n        return promise.__fakePromiseValue;\n    }\n    if (isFakeRejectPromise(promise)) {\n        throw promise.__fakeRejectError;\n    }\n    return promise;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@whatwg-node/promise-helpers/cjs/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@whatwg-node/server/cjs/createServerAdapter.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@whatwg-node/server/cjs/createServerAdapter.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.createServerAdapter = createServerAdapter;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(rsc)/./node_modules/tslib/tslib.es6.mjs\");\nconst instrumentation_1 = __webpack_require__(/*! @envelop/instrumentation */ \"(rsc)/./node_modules/@envelop/instrumentation/cjs/index.js\");\nconst disposablestack_1 = __webpack_require__(/*! @whatwg-node/disposablestack */ \"(rsc)/./node_modules/@whatwg-node/disposablestack/cjs/index.js\");\nconst DefaultFetchAPI = tslib_1.__importStar(__webpack_require__(/*! @whatwg-node/fetch */ \"(rsc)/./node_modules/@whatwg-node/fetch/dist/node-ponyfill.js\"));\nconst promise_helpers_1 = __webpack_require__(/*! @whatwg-node/promise-helpers */ \"(rsc)/./node_modules/@whatwg-node/promise-helpers/cjs/index.js\");\nconst utils_js_1 = __webpack_require__(/*! ./utils.js */ \"(rsc)/./node_modules/@whatwg-node/server/cjs/utils.js\");\nconst uwebsockets_js_1 = __webpack_require__(/*! ./uwebsockets.js */ \"(rsc)/./node_modules/@whatwg-node/server/cjs/uwebsockets.js\");\n// Required for envs like nextjs edge runtime\nfunction isRequestAccessible(serverContext) {\n    try {\n        return !!serverContext?.request;\n    }\n    catch {\n        return false;\n    }\n}\nconst EMPTY_OBJECT = {};\nfunction createServerAdapter(serverAdapterBaseObject, options) {\n    const useSingleWriteHead = options?.__useSingleWriteHead == null ? true : options.__useSingleWriteHead;\n    const fetchAPI = {\n        ...DefaultFetchAPI,\n        ...options?.fetchAPI,\n    };\n    const useCustomAbortCtrl = options?.__useCustomAbortCtrl == null\n        ? fetchAPI.Request !== globalThis.Request\n        : options.__useCustomAbortCtrl;\n    const givenHandleRequest = typeof serverAdapterBaseObject === 'function'\n        ? serverAdapterBaseObject\n        : serverAdapterBaseObject.handle;\n    const onRequestHooks = [];\n    const onResponseHooks = [];\n    let instrumentation;\n    const waitUntilPromises = new Set();\n    let _disposableStack;\n    function ensureDisposableStack() {\n        if (!_disposableStack) {\n            _disposableStack = new disposablestack_1.AsyncDisposableStack();\n            if (options?.disposeOnProcessTerminate) {\n                (0, utils_js_1.ensureDisposableStackRegisteredForTerminateEvents)(_disposableStack);\n            }\n            _disposableStack.defer(() => {\n                if (waitUntilPromises.size > 0) {\n                    return Promise.allSettled(waitUntilPromises).then(() => {\n                        waitUntilPromises.clear();\n                    }, () => {\n                        waitUntilPromises.clear();\n                    });\n                }\n            });\n        }\n        return _disposableStack;\n    }\n    function waitUntil(maybePromise) {\n        // Ensure that the disposable stack is created\n        if ((0, utils_js_1.isPromise)(maybePromise)) {\n            ensureDisposableStack();\n            waitUntilPromises.add(maybePromise);\n            maybePromise.then(() => {\n                waitUntilPromises.delete(maybePromise);\n            }, err => {\n                console.error(`Unexpected error while waiting: ${err.message || err}`);\n                waitUntilPromises.delete(maybePromise);\n            });\n        }\n    }\n    if (options?.plugins != null) {\n        for (const plugin of options.plugins) {\n            if (plugin.instrumentation) {\n                instrumentation = instrumentation\n                    ? (0, instrumentation_1.chain)(instrumentation, plugin.instrumentation)\n                    : plugin.instrumentation;\n            }\n            if (plugin.onRequest) {\n                onRequestHooks.push(plugin.onRequest);\n            }\n            if (plugin.onResponse) {\n                onResponseHooks.push(plugin.onResponse);\n            }\n            const disposeFn = plugin[disposablestack_1.DisposableSymbols.dispose];\n            if (disposeFn) {\n                ensureDisposableStack().defer(disposeFn);\n            }\n            const asyncDisposeFn = plugin[disposablestack_1.DisposableSymbols.asyncDispose];\n            if (asyncDisposeFn) {\n                ensureDisposableStack().defer(asyncDisposeFn);\n            }\n            if (plugin.onDispose) {\n                ensureDisposableStack().defer(plugin.onDispose);\n            }\n        }\n    }\n    let handleRequest = onRequestHooks.length > 0 || onResponseHooks.length > 0\n        ? function handleRequest(request, serverContext) {\n            let requestHandler = givenHandleRequest;\n            let response;\n            if (onRequestHooks.length === 0) {\n                return handleEarlyResponse();\n            }\n            let url = request['parsedUrl'] ||\n                new Proxy(EMPTY_OBJECT, {\n                    get(_target, prop, _receiver) {\n                        url = new fetchAPI.URL(request.url, 'http://localhost');\n                        return Reflect.get(url, prop, url);\n                    },\n                });\n            function handleResponse(response) {\n                if (onResponseHooks.length === 0) {\n                    return response;\n                }\n                return (0, promise_helpers_1.handleMaybePromise)(() => (0, utils_js_1.iterateAsyncVoid)(onResponseHooks, onResponseHook => onResponseHook({\n                    request,\n                    response,\n                    serverContext,\n                    setResponse(newResponse) {\n                        response = newResponse;\n                    },\n                    fetchAPI,\n                })), () => response);\n            }\n            function handleEarlyResponse() {\n                if (!response) {\n                    return (0, promise_helpers_1.handleMaybePromise)(() => requestHandler(request, serverContext), handleResponse);\n                }\n                return handleResponse(response);\n            }\n            return (0, promise_helpers_1.handleMaybePromise)(() => (0, utils_js_1.iterateAsyncVoid)(onRequestHooks, (onRequestHook, stopEarly) => onRequestHook({\n                request,\n                setRequest(newRequest) {\n                    request = newRequest;\n                },\n                serverContext,\n                fetchAPI,\n                url,\n                requestHandler,\n                setRequestHandler(newRequestHandler) {\n                    requestHandler = newRequestHandler;\n                },\n                endResponse(newResponse) {\n                    response = newResponse;\n                    if (newResponse) {\n                        stopEarly();\n                    }\n                },\n            })), handleEarlyResponse);\n        }\n        : givenHandleRequest;\n    if (instrumentation?.request) {\n        const originalRequestHandler = handleRequest;\n        handleRequest = (request, initialContext) => {\n            return (0, instrumentation_1.getInstrumented)({ request }).asyncFn(instrumentation.request, originalRequestHandler)(request, initialContext);\n        };\n    }\n    // TODO: Remove this on the next major version\n    function handleNodeRequest(nodeRequest, ...ctx) {\n        const serverContext = ctx.length > 1 ? (0, utils_js_1.completeAssign)(...ctx) : ctx[0] || {};\n        // Ensure `waitUntil` is available in the server context\n        if (!serverContext.waitUntil) {\n            serverContext.waitUntil = waitUntil;\n        }\n        const request = (0, utils_js_1.normalizeNodeRequest)(nodeRequest, fetchAPI, undefined, useCustomAbortCtrl);\n        return handleRequest(request, serverContext);\n    }\n    function handleNodeRequestAndResponse(nodeRequest, nodeResponseOrContainer, ...ctx) {\n        const nodeResponse = nodeResponseOrContainer.raw || nodeResponseOrContainer;\n        const serverContext = ctx.length > 1 ? (0, utils_js_1.completeAssign)(...ctx) : ctx[0] || {};\n        // Ensure `waitUntil` is available in the server context\n        if (!serverContext.waitUntil) {\n            serverContext.waitUntil = waitUntil;\n        }\n        const request = (0, utils_js_1.normalizeNodeRequest)(nodeRequest, fetchAPI, nodeResponse, useCustomAbortCtrl);\n        return handleRequest(request, serverContext);\n    }\n    function requestListener(nodeRequest, nodeResponse, ...ctx) {\n        const defaultServerContext = {\n            req: nodeRequest,\n            res: nodeResponse,\n            waitUntil,\n        };\n        return (0, promise_helpers_1.unfakePromise)((0, uwebsockets_js_1.fakePromise)()\n            .then(() => handleNodeRequestAndResponse(nodeRequest, nodeResponse, defaultServerContext, ...ctx))\n            .catch(err => (0, utils_js_1.handleErrorFromRequestHandler)(err, fetchAPI.Response))\n            .then(response => (0, utils_js_1.sendNodeResponse)(response, nodeResponse, nodeRequest, useSingleWriteHead))\n            .catch(err => console.error(`Unexpected error while handling request: ${err.message || err}`)));\n    }\n    function handleUWS(res, req, ...ctx) {\n        const defaultServerContext = {\n            res,\n            req,\n            waitUntil,\n        };\n        const filteredCtxParts = ctx.filter(partCtx => partCtx != null);\n        const serverContext = filteredCtxParts.length > 0\n            ? (0, utils_js_1.completeAssign)(defaultServerContext, ...ctx)\n            : defaultServerContext;\n        const controller = useCustomAbortCtrl\n            ? (0, utils_js_1.createCustomAbortControllerSignal)()\n            : new AbortController();\n        const originalResEnd = res.end.bind(res);\n        let resEnded = false;\n        res.end = function (data) {\n            resEnded = true;\n            return originalResEnd(data);\n        };\n        const originalOnAborted = res.onAborted.bind(res);\n        originalOnAborted(function () {\n            controller.abort();\n        });\n        res.onAborted = function (cb) {\n            controller.signal.addEventListener('abort', cb, { once: true });\n        };\n        const request = (0, uwebsockets_js_1.getRequestFromUWSRequest)({\n            req,\n            res,\n            fetchAPI,\n            controller,\n        });\n        return (0, promise_helpers_1.handleMaybePromise)(() => (0, promise_helpers_1.handleMaybePromise)(() => handleRequest(request, serverContext), response => response, err => (0, utils_js_1.handleErrorFromRequestHandler)(err, fetchAPI.Response)), response => {\n            if (!controller.signal.aborted && !resEnded) {\n                return (0, promise_helpers_1.handleMaybePromise)(() => (0, uwebsockets_js_1.sendResponseToUwsOpts)(res, response, controller, fetchAPI), r => r, err => {\n                    console.error(`Unexpected error while handling request: ${err.message || err}`);\n                });\n            }\n        });\n    }\n    function handleEvent(event, ...ctx) {\n        if (!event.respondWith || !event.request) {\n            throw new TypeError(`Expected FetchEvent, got ${event}`);\n        }\n        const filteredCtxParts = ctx.filter(partCtx => partCtx != null);\n        const serverContext = filteredCtxParts.length > 0\n            ? (0, utils_js_1.completeAssign)({}, event, ...filteredCtxParts)\n            : (0, utils_js_1.isolateObject)(event);\n        const response$ = handleRequest(event.request, serverContext);\n        event.respondWith(response$);\n    }\n    function handleRequestWithWaitUntil(request, ...ctx) {\n        const filteredCtxParts = ctx.filter(partCtx => partCtx != null);\n        const serverContext = filteredCtxParts.length > 1\n            ? (0, utils_js_1.completeAssign)({}, ...filteredCtxParts)\n            : (0, utils_js_1.isolateObject)(filteredCtxParts[0], filteredCtxParts[0] == null || filteredCtxParts[0].waitUntil == null\n                ? waitUntil\n                : undefined);\n        return handleRequest(request, serverContext);\n    }\n    const fetchFn = (input, ...maybeCtx) => {\n        if (typeof input === 'string' || 'href' in input) {\n            const [initOrCtx, ...restOfCtx] = maybeCtx;\n            if ((0, utils_js_1.isRequestInit)(initOrCtx)) {\n                const request = new fetchAPI.Request(input, initOrCtx);\n                const res$ = handleRequestWithWaitUntil(request, ...restOfCtx);\n                const signal = initOrCtx.signal;\n                if (signal) {\n                    return (0, utils_js_1.handleAbortSignalAndPromiseResponse)(res$, signal);\n                }\n                return res$;\n            }\n            const request = new fetchAPI.Request(input);\n            return handleRequestWithWaitUntil(request, ...maybeCtx);\n        }\n        const res$ = handleRequestWithWaitUntil(input, ...maybeCtx);\n        return (0, utils_js_1.handleAbortSignalAndPromiseResponse)(res$, input.signal);\n    };\n    const genericRequestHandler = (input, ...maybeCtx) => {\n        // If it is a Node request\n        const [initOrCtxOrRes, ...restOfCtx] = maybeCtx;\n        if ((0, utils_js_1.isNodeRequest)(input)) {\n            if (!(0, utils_js_1.isServerResponse)(initOrCtxOrRes)) {\n                throw new TypeError(`Expected ServerResponse, got ${initOrCtxOrRes}`);\n            }\n            return requestListener(input, initOrCtxOrRes, ...restOfCtx);\n        }\n        if ((0, uwebsockets_js_1.isUWSResponse)(input)) {\n            return handleUWS(input, initOrCtxOrRes, ...restOfCtx);\n        }\n        if ((0, utils_js_1.isServerResponse)(initOrCtxOrRes)) {\n            throw new TypeError('Got Node response without Node request');\n        }\n        // Is input a container object over Request?\n        if (isRequestAccessible(input)) {\n            // Is it FetchEvent?\n            if ((0, utils_js_1.isFetchEvent)(input)) {\n                return handleEvent(input, ...maybeCtx);\n            }\n            // In this input is also the context\n            return handleRequestWithWaitUntil(input.request, input, ...maybeCtx);\n        }\n        // Or is it Request itself?\n        // Then ctx is present and it is the context\n        return fetchFn(input, ...maybeCtx);\n    };\n    const adapterObj = {\n        handleRequest: handleRequestWithWaitUntil,\n        fetch: fetchFn,\n        handleNodeRequest,\n        handleNodeRequestAndResponse,\n        requestListener,\n        handleEvent,\n        handleUWS,\n        handle: genericRequestHandler,\n        get disposableStack() {\n            return ensureDisposableStack();\n        },\n        [disposablestack_1.DisposableSymbols.asyncDispose]() {\n            if (_disposableStack && !_disposableStack.disposed) {\n                return _disposableStack.disposeAsync();\n            }\n            return (0, uwebsockets_js_1.fakePromise)();\n        },\n        dispose() {\n            if (_disposableStack && !_disposableStack.disposed) {\n                return _disposableStack.disposeAsync();\n            }\n            return (0, uwebsockets_js_1.fakePromise)();\n        },\n        waitUntil,\n    };\n    const serverAdapter = new Proxy(genericRequestHandler, {\n        // It should have all the attributes of the handler function and the server instance\n        has: (_, prop) => {\n            return (prop in adapterObj ||\n                prop in genericRequestHandler ||\n                (serverAdapterBaseObject && prop in serverAdapterBaseObject));\n        },\n        get: (_, prop) => {\n            // Somehow Deno and Node 24 don't like bound dispose functions\n            if (globalThis.Deno || prop === Symbol.asyncDispose || prop === Symbol.dispose) {\n                const adapterProp = Reflect.get(adapterObj, prop, adapterObj);\n                if (adapterProp) {\n                    return adapterProp;\n                }\n            }\n            const adapterProp = adapterObj[prop];\n            if (adapterProp) {\n                if (adapterProp.bind) {\n                    return adapterProp.bind(adapterObj);\n                }\n                return adapterProp;\n            }\n            const handleProp = genericRequestHandler[prop];\n            if (handleProp) {\n                if (handleProp.bind) {\n                    return handleProp.bind(genericRequestHandler);\n                }\n                return handleProp;\n            }\n            if (serverAdapterBaseObject) {\n                const serverAdapterBaseObjectProp = serverAdapterBaseObject[prop];\n                if (serverAdapterBaseObjectProp) {\n                    if (serverAdapterBaseObjectProp.bind) {\n                        return function (...args) {\n                            const returnedVal = serverAdapterBaseObject[prop](...args);\n                            if (returnedVal === serverAdapterBaseObject) {\n                                return serverAdapter;\n                            }\n                            return returnedVal;\n                        };\n                    }\n                    return serverAdapterBaseObjectProp;\n                }\n            }\n        },\n        apply(_, __, args) {\n            return genericRequestHandler(...args);\n        },\n    });\n    return serverAdapter;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@whatwg-node/server/cjs/createServerAdapter.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@whatwg-node/server/cjs/index.js":
/*!*******************************************************!*\
  !*** ./node_modules/@whatwg-node/server/cjs/index.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.DisposableSymbols = exports.Response = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(rsc)/./node_modules/tslib/tslib.es6.mjs\");\ntslib_1.__exportStar(__webpack_require__(/*! ./createServerAdapter.js */ \"(rsc)/./node_modules/@whatwg-node/server/cjs/createServerAdapter.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./types.js */ \"(rsc)/./node_modules/@whatwg-node/server/cjs/types.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./utils.js */ \"(rsc)/./node_modules/@whatwg-node/server/cjs/utils.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./plugins/types.js */ \"(rsc)/./node_modules/@whatwg-node/server/cjs/plugins/types.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./plugins/useCors.js */ \"(rsc)/./node_modules/@whatwg-node/server/cjs/plugins/useCors.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./plugins/useErrorHandling.js */ \"(rsc)/./node_modules/@whatwg-node/server/cjs/plugins/useErrorHandling.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./plugins/useContentEncoding.js */ \"(rsc)/./node_modules/@whatwg-node/server/cjs/plugins/useContentEncoding.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./uwebsockets.js */ \"(rsc)/./node_modules/@whatwg-node/server/cjs/uwebsockets.js\"), exports);\nvar fetch_1 = __webpack_require__(/*! @whatwg-node/fetch */ \"(rsc)/./node_modules/@whatwg-node/fetch/dist/node-ponyfill.js\");\nObject.defineProperty(exports, \"Response\", ({ enumerable: true, get: function () { return fetch_1.Response; } }));\nvar disposablestack_1 = __webpack_require__(/*! @whatwg-node/disposablestack */ \"(rsc)/./node_modules/@whatwg-node/disposablestack/cjs/index.js\");\nObject.defineProperty(exports, \"DisposableSymbols\", ({ enumerable: true, get: function () { return disposablestack_1.DisposableSymbols; } }));\ntslib_1.__exportStar(__webpack_require__(/*! @envelop/instrumentation */ \"(rsc)/./node_modules/@envelop/instrumentation/cjs/index.js\"), exports);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL3NlcnZlci9janMvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QseUJBQXlCLEdBQUcsZ0JBQWdCO0FBQzVDLGdCQUFnQixtQkFBTyxDQUFDLHVEQUFPO0FBQy9CLHFCQUFxQixtQkFBTyxDQUFDLHFHQUEwQjtBQUN2RCxxQkFBcUIsbUJBQU8sQ0FBQyx5RUFBWTtBQUN6QyxxQkFBcUIsbUJBQU8sQ0FBQyx5RUFBWTtBQUN6QyxxQkFBcUIsbUJBQU8sQ0FBQyx5RkFBb0I7QUFDakQscUJBQXFCLG1CQUFPLENBQUMsNkZBQXNCO0FBQ25ELHFCQUFxQixtQkFBTyxDQUFDLCtHQUErQjtBQUM1RCxxQkFBcUIsbUJBQU8sQ0FBQyxtSEFBaUM7QUFDOUQscUJBQXFCLG1CQUFPLENBQUMscUZBQWtCO0FBQy9DLGNBQWMsbUJBQU8sQ0FBQyx5RkFBb0I7QUFDMUMsNENBQTJDLEVBQUUscUNBQXFDLDRCQUE0QixFQUFDO0FBQy9HLHdCQUF3QixtQkFBTyxDQUFDLG9HQUE4QjtBQUM5RCxxREFBb0QsRUFBRSxxQ0FBcUMsK0NBQStDLEVBQUM7QUFDM0kscUJBQXFCLG1CQUFPLENBQUMsNEZBQTBCIiwic291cmNlcyI6WyIvaG9tZS9jZXRlYy9Ob2RlUHJvamVjdHMvYWd1aV90ZXN0L25vZGVfbW9kdWxlcy9Ad2hhdHdnLW5vZGUvc2VydmVyL2Nqcy9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuRGlzcG9zYWJsZVN5bWJvbHMgPSBleHBvcnRzLlJlc3BvbnNlID0gdm9pZCAwO1xuY29uc3QgdHNsaWJfMSA9IHJlcXVpcmUoXCJ0c2xpYlwiKTtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2NyZWF0ZVNlcnZlckFkYXB0ZXIuanNcIiksIGV4cG9ydHMpO1xudHNsaWJfMS5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vdHlwZXMuanNcIiksIGV4cG9ydHMpO1xudHNsaWJfMS5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vdXRpbHMuanNcIiksIGV4cG9ydHMpO1xudHNsaWJfMS5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vcGx1Z2lucy90eXBlcy5qc1wiKSwgZXhwb3J0cyk7XG50c2xpYl8xLl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9wbHVnaW5zL3VzZUNvcnMuanNcIiksIGV4cG9ydHMpO1xudHNsaWJfMS5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vcGx1Z2lucy91c2VFcnJvckhhbmRsaW5nLmpzXCIpLCBleHBvcnRzKTtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3BsdWdpbnMvdXNlQ29udGVudEVuY29kaW5nLmpzXCIpLCBleHBvcnRzKTtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3V3ZWJzb2NrZXRzLmpzXCIpLCBleHBvcnRzKTtcbnZhciBmZXRjaF8xID0gcmVxdWlyZShcIkB3aGF0d2ctbm9kZS9mZXRjaFwiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIlJlc3BvbnNlXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBmZXRjaF8xLlJlc3BvbnNlOyB9IH0pO1xudmFyIGRpc3Bvc2FibGVzdGFja18xID0gcmVxdWlyZShcIkB3aGF0d2ctbm9kZS9kaXNwb3NhYmxlc3RhY2tcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJEaXNwb3NhYmxlU3ltYm9sc1wiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gZGlzcG9zYWJsZXN0YWNrXzEuRGlzcG9zYWJsZVN5bWJvbHM7IH0gfSk7XG50c2xpYl8xLl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiQGVudmVsb3AvaW5zdHJ1bWVudGF0aW9uXCIpLCBleHBvcnRzKTtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@whatwg-node/server/cjs/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@whatwg-node/server/cjs/plugins/types.js":
/*!***************************************************************!*\
  !*** ./node_modules/@whatwg-node/server/cjs/plugins/types.js ***!
  \***************************************************************/
/***/ (() => {



/***/ }),

/***/ "(rsc)/./node_modules/@whatwg-node/server/cjs/plugins/useContentEncoding.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@whatwg-node/server/cjs/plugins/useContentEncoding.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.useContentEncoding = useContentEncoding;\nconst utils_js_1 = __webpack_require__(/*! ../utils.js */ \"(rsc)/./node_modules/@whatwg-node/server/cjs/utils.js\");\nconst emptyEncodings = ['none', 'identity'];\nfunction useContentEncoding() {\n    return {\n        onRequest({ request, setRequest, fetchAPI, endResponse }) {\n            const contentEncodingHeader = request.headers.get('content-encoding');\n            if (contentEncodingHeader &&\n                contentEncodingHeader !== 'none' &&\n                contentEncodingHeader !== 'identity' &&\n                request.body) {\n                const contentEncodings = contentEncodingHeader\n                    .split(',')\n                    .filter(encoding => !emptyEncodings.includes(encoding));\n                if (contentEncodings.length) {\n                    if (!contentEncodings.every(encoding => (0, utils_js_1.getSupportedEncodings)(fetchAPI).includes(encoding))) {\n                        endResponse(new fetchAPI.Response(`Unsupported 'Content-Encoding': ${contentEncodingHeader}`, {\n                            status: 415,\n                            statusText: 'Unsupported Media Type',\n                        }));\n                        return;\n                    }\n                    let newBody = request.body;\n                    for (const contentEncoding of contentEncodings) {\n                        newBody = request.body.pipeThrough(new fetchAPI.DecompressionStream(contentEncoding));\n                    }\n                    setRequest(new fetchAPI.Request(request.url, {\n                        body: newBody,\n                        cache: request.cache,\n                        credentials: request.credentials,\n                        headers: request.headers,\n                        integrity: request.integrity,\n                        keepalive: request.keepalive,\n                        method: request.method,\n                        mode: request.mode,\n                        redirect: request.redirect,\n                        referrer: request.referrer,\n                        referrerPolicy: request.referrerPolicy,\n                        signal: request.signal,\n                        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n                        // @ts-ignore - not in the TS types yet\n                        duplex: 'half',\n                    }));\n                }\n            }\n        },\n        onResponse({ request, response, setResponse, fetchAPI }) {\n            const acceptEncoding = request.headers.get('accept-encoding');\n            if (acceptEncoding) {\n                const encodings = acceptEncoding.split(',');\n                if (encodings.length && response.body) {\n                    const supportedEncoding = encodings.find(encoding => (0, utils_js_1.getSupportedEncodings)(fetchAPI).includes(encoding));\n                    if (supportedEncoding) {\n                        const compressionStream = new fetchAPI.CompressionStream(supportedEncoding);\n                        const newHeaders = new fetchAPI.Headers(response.headers);\n                        newHeaders.set('content-encoding', supportedEncoding);\n                        newHeaders.delete('content-length');\n                        const compressedBody = response.body.pipeThrough(compressionStream);\n                        const compressedResponse = new fetchAPI.Response(compressedBody, {\n                            status: response.status,\n                            statusText: response.statusText,\n                            headers: newHeaders,\n                        });\n                        utils_js_1.decompressedResponseMap.set(compressedResponse, response);\n                        setResponse(compressedResponse);\n                    }\n                }\n            }\n        },\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL3NlcnZlci9janMvcGx1Z2lucy91c2VDb250ZW50RW5jb2RpbmcuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsMEJBQTBCO0FBQzFCLG1CQUFtQixtQkFBTyxDQUFDLDBFQUFhO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQiw0Q0FBNEM7QUFDaEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2RkFBNkYsc0JBQXNCO0FBQ25IO0FBQ0E7QUFDQSx5QkFBeUI7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBLFNBQVM7QUFDVCxxQkFBcUIsMENBQTBDO0FBQy9EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QjtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0EiLCJzb3VyY2VzIjpbIi9ob21lL2NldGVjL05vZGVQcm9qZWN0cy9hZ3VpX3Rlc3Qvbm9kZV9tb2R1bGVzL0B3aGF0d2ctbm9kZS9zZXJ2ZXIvY2pzL3BsdWdpbnMvdXNlQ29udGVudEVuY29kaW5nLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy51c2VDb250ZW50RW5jb2RpbmcgPSB1c2VDb250ZW50RW5jb2Rpbmc7XG5jb25zdCB1dGlsc19qc18xID0gcmVxdWlyZShcIi4uL3V0aWxzLmpzXCIpO1xuY29uc3QgZW1wdHlFbmNvZGluZ3MgPSBbJ25vbmUnLCAnaWRlbnRpdHknXTtcbmZ1bmN0aW9uIHVzZUNvbnRlbnRFbmNvZGluZygpIHtcbiAgICByZXR1cm4ge1xuICAgICAgICBvblJlcXVlc3QoeyByZXF1ZXN0LCBzZXRSZXF1ZXN0LCBmZXRjaEFQSSwgZW5kUmVzcG9uc2UgfSkge1xuICAgICAgICAgICAgY29uc3QgY29udGVudEVuY29kaW5nSGVhZGVyID0gcmVxdWVzdC5oZWFkZXJzLmdldCgnY29udGVudC1lbmNvZGluZycpO1xuICAgICAgICAgICAgaWYgKGNvbnRlbnRFbmNvZGluZ0hlYWRlciAmJlxuICAgICAgICAgICAgICAgIGNvbnRlbnRFbmNvZGluZ0hlYWRlciAhPT0gJ25vbmUnICYmXG4gICAgICAgICAgICAgICAgY29udGVudEVuY29kaW5nSGVhZGVyICE9PSAnaWRlbnRpdHknICYmXG4gICAgICAgICAgICAgICAgcmVxdWVzdC5ib2R5KSB7XG4gICAgICAgICAgICAgICAgY29uc3QgY29udGVudEVuY29kaW5ncyA9IGNvbnRlbnRFbmNvZGluZ0hlYWRlclxuICAgICAgICAgICAgICAgICAgICAuc3BsaXQoJywnKVxuICAgICAgICAgICAgICAgICAgICAuZmlsdGVyKGVuY29kaW5nID0+ICFlbXB0eUVuY29kaW5ncy5pbmNsdWRlcyhlbmNvZGluZykpO1xuICAgICAgICAgICAgICAgIGlmIChjb250ZW50RW5jb2RpbmdzLmxlbmd0aCkge1xuICAgICAgICAgICAgICAgICAgICBpZiAoIWNvbnRlbnRFbmNvZGluZ3MuZXZlcnkoZW5jb2RpbmcgPT4gKDAsIHV0aWxzX2pzXzEuZ2V0U3VwcG9ydGVkRW5jb2RpbmdzKShmZXRjaEFQSSkuaW5jbHVkZXMoZW5jb2RpbmcpKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgZW5kUmVzcG9uc2UobmV3IGZldGNoQVBJLlJlc3BvbnNlKGBVbnN1cHBvcnRlZCAnQ29udGVudC1FbmNvZGluZyc6ICR7Y29udGVudEVuY29kaW5nSGVhZGVyfWAsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGF0dXM6IDQxNSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGF0dXNUZXh0OiAnVW5zdXBwb3J0ZWQgTWVkaWEgVHlwZScsXG4gICAgICAgICAgICAgICAgICAgICAgICB9KSk7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgbGV0IG5ld0JvZHkgPSByZXF1ZXN0LmJvZHk7XG4gICAgICAgICAgICAgICAgICAgIGZvciAoY29uc3QgY29udGVudEVuY29kaW5nIG9mIGNvbnRlbnRFbmNvZGluZ3MpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG5ld0JvZHkgPSByZXF1ZXN0LmJvZHkucGlwZVRocm91Z2gobmV3IGZldGNoQVBJLkRlY29tcHJlc3Npb25TdHJlYW0oY29udGVudEVuY29kaW5nKSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgc2V0UmVxdWVzdChuZXcgZmV0Y2hBUEkuUmVxdWVzdChyZXF1ZXN0LnVybCwge1xuICAgICAgICAgICAgICAgICAgICAgICAgYm9keTogbmV3Qm9keSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGNhY2hlOiByZXF1ZXN0LmNhY2hlLFxuICAgICAgICAgICAgICAgICAgICAgICAgY3JlZGVudGlhbHM6IHJlcXVlc3QuY3JlZGVudGlhbHMsXG4gICAgICAgICAgICAgICAgICAgICAgICBoZWFkZXJzOiByZXF1ZXN0LmhlYWRlcnMsXG4gICAgICAgICAgICAgICAgICAgICAgICBpbnRlZ3JpdHk6IHJlcXVlc3QuaW50ZWdyaXR5LFxuICAgICAgICAgICAgICAgICAgICAgICAga2VlcGFsaXZlOiByZXF1ZXN0LmtlZXBhbGl2ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIG1ldGhvZDogcmVxdWVzdC5tZXRob2QsXG4gICAgICAgICAgICAgICAgICAgICAgICBtb2RlOiByZXF1ZXN0Lm1vZGUsXG4gICAgICAgICAgICAgICAgICAgICAgICByZWRpcmVjdDogcmVxdWVzdC5yZWRpcmVjdCxcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlZmVycmVyOiByZXF1ZXN0LnJlZmVycmVyLFxuICAgICAgICAgICAgICAgICAgICAgICAgcmVmZXJyZXJQb2xpY3k6IHJlcXVlc3QucmVmZXJyZXJQb2xpY3ksXG4gICAgICAgICAgICAgICAgICAgICAgICBzaWduYWw6IHJlcXVlc3Quc2lnbmFsLFxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9iYW4tdHMtY29tbWVudFxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gQHRzLWlnbm9yZSAtIG5vdCBpbiB0aGUgVFMgdHlwZXMgeWV0XG4gICAgICAgICAgICAgICAgICAgICAgICBkdXBsZXg6ICdoYWxmJyxcbiAgICAgICAgICAgICAgICAgICAgfSkpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgb25SZXNwb25zZSh7IHJlcXVlc3QsIHJlc3BvbnNlLCBzZXRSZXNwb25zZSwgZmV0Y2hBUEkgfSkge1xuICAgICAgICAgICAgY29uc3QgYWNjZXB0RW5jb2RpbmcgPSByZXF1ZXN0LmhlYWRlcnMuZ2V0KCdhY2NlcHQtZW5jb2RpbmcnKTtcbiAgICAgICAgICAgIGlmIChhY2NlcHRFbmNvZGluZykge1xuICAgICAgICAgICAgICAgIGNvbnN0IGVuY29kaW5ncyA9IGFjY2VwdEVuY29kaW5nLnNwbGl0KCcsJyk7XG4gICAgICAgICAgICAgICAgaWYgKGVuY29kaW5ncy5sZW5ndGggJiYgcmVzcG9uc2UuYm9keSkge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBzdXBwb3J0ZWRFbmNvZGluZyA9IGVuY29kaW5ncy5maW5kKGVuY29kaW5nID0+ICgwLCB1dGlsc19qc18xLmdldFN1cHBvcnRlZEVuY29kaW5ncykoZmV0Y2hBUEkpLmluY2x1ZGVzKGVuY29kaW5nKSk7XG4gICAgICAgICAgICAgICAgICAgIGlmIChzdXBwb3J0ZWRFbmNvZGluZykge1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgY29tcHJlc3Npb25TdHJlYW0gPSBuZXcgZmV0Y2hBUEkuQ29tcHJlc3Npb25TdHJlYW0oc3VwcG9ydGVkRW5jb2RpbmcpO1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgbmV3SGVhZGVycyA9IG5ldyBmZXRjaEFQSS5IZWFkZXJzKHJlc3BvbnNlLmhlYWRlcnMpO1xuICAgICAgICAgICAgICAgICAgICAgICAgbmV3SGVhZGVycy5zZXQoJ2NvbnRlbnQtZW5jb2RpbmcnLCBzdXBwb3J0ZWRFbmNvZGluZyk7XG4gICAgICAgICAgICAgICAgICAgICAgICBuZXdIZWFkZXJzLmRlbGV0ZSgnY29udGVudC1sZW5ndGgnKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGNvbXByZXNzZWRCb2R5ID0gcmVzcG9uc2UuYm9keS5waXBlVGhyb3VnaChjb21wcmVzc2lvblN0cmVhbSk7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBjb21wcmVzc2VkUmVzcG9uc2UgPSBuZXcgZmV0Y2hBUEkuUmVzcG9uc2UoY29tcHJlc3NlZEJvZHksIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGF0dXM6IHJlc3BvbnNlLnN0YXR1cyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGF0dXNUZXh0OiByZXNwb25zZS5zdGF0dXNUZXh0LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhlYWRlcnM6IG5ld0hlYWRlcnMsXG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHV0aWxzX2pzXzEuZGVjb21wcmVzc2VkUmVzcG9uc2VNYXAuc2V0KGNvbXByZXNzZWRSZXNwb25zZSwgcmVzcG9uc2UpO1xuICAgICAgICAgICAgICAgICAgICAgICAgc2V0UmVzcG9uc2UoY29tcHJlc3NlZFJlc3BvbnNlKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICB9O1xufVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@whatwg-node/server/cjs/plugins/useContentEncoding.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@whatwg-node/server/cjs/plugins/useCors.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@whatwg-node/server/cjs/plugins/useCors.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getCORSHeadersByRequestAndOptions = getCORSHeadersByRequestAndOptions;\nexports.useCORS = useCORS;\nconst promise_helpers_1 = __webpack_require__(/*! @whatwg-node/promise-helpers */ \"(rsc)/./node_modules/@whatwg-node/promise-helpers/cjs/index.js\");\nfunction getCORSHeadersByRequestAndOptions(request, corsOptions) {\n    const currentOrigin = request.headers.get('origin');\n    if (corsOptions === false || currentOrigin == null) {\n        return null;\n    }\n    const headers = {};\n    // If defined origins have '*' or undefined by any means, we should allow all origins\n    if (corsOptions.origin == null ||\n        corsOptions.origin.length === 0 ||\n        corsOptions.origin.includes('*')) {\n        headers['Access-Control-Allow-Origin'] = currentOrigin;\n        // Vary by origin because there are multiple origins\n        headers['Vary'] = 'Origin';\n    }\n    else if (typeof corsOptions.origin === 'string') {\n        // If there is one specific origin is specified, use it directly\n        headers['Access-Control-Allow-Origin'] = corsOptions.origin;\n    }\n    else if (Array.isArray(corsOptions.origin)) {\n        // If there is only one origin defined in the array, consider it as a single one\n        if (corsOptions.origin.length === 1) {\n            headers['Access-Control-Allow-Origin'] = corsOptions.origin[0];\n        }\n        else if (corsOptions.origin.includes(currentOrigin)) {\n            // If origin is available in the headers, use it\n            headers['Access-Control-Allow-Origin'] = currentOrigin;\n            // Vary by origin because there are multiple origins\n            headers['Vary'] = 'Origin';\n        }\n        else {\n            // There is no origin found in the headers, so we should return null\n            headers['Access-Control-Allow-Origin'] = 'null';\n        }\n    }\n    if (corsOptions.methods?.length) {\n        headers['Access-Control-Allow-Methods'] = corsOptions.methods.join(', ');\n    }\n    else {\n        const requestMethod = request.headers.get('access-control-request-method');\n        if (requestMethod) {\n            headers['Access-Control-Allow-Methods'] = requestMethod;\n        }\n    }\n    if (corsOptions.allowedHeaders?.length) {\n        headers['Access-Control-Allow-Headers'] = corsOptions.allowedHeaders.join(', ');\n    }\n    else {\n        const requestHeaders = request.headers.get('access-control-request-headers');\n        if (requestHeaders) {\n            headers['Access-Control-Allow-Headers'] = requestHeaders;\n            if (headers['Vary']) {\n                headers['Vary'] += ', Access-Control-Request-Headers';\n            }\n            else {\n                headers['Vary'] = 'Access-Control-Request-Headers';\n            }\n        }\n    }\n    if (corsOptions.credentials != null) {\n        if (corsOptions.credentials === true) {\n            headers['Access-Control-Allow-Credentials'] = 'true';\n        }\n    }\n    else if (headers['Access-Control-Allow-Origin'] !== '*') {\n        headers['Access-Control-Allow-Credentials'] = 'true';\n    }\n    if (corsOptions.exposedHeaders) {\n        headers['Access-Control-Expose-Headers'] = corsOptions.exposedHeaders.join(', ');\n    }\n    if (corsOptions.maxAge) {\n        headers['Access-Control-Max-Age'] = corsOptions.maxAge.toString();\n    }\n    return headers;\n}\nfunction getCORSResponseHeaders(request, corsOptionsFactory, serverContext) {\n    return (0, promise_helpers_1.handleMaybePromise)(() => corsOptionsFactory(request, serverContext), corsOptions => getCORSHeadersByRequestAndOptions(request, corsOptions));\n}\nfunction useCORS(options) {\n    let corsOptionsFactory = () => ({});\n    if (options != null) {\n        if (typeof options === 'function') {\n            corsOptionsFactory = options;\n        }\n        else if (typeof options === 'object') {\n            const corsOptions = {\n                ...options,\n            };\n            corsOptionsFactory = () => corsOptions;\n        }\n        else if (options === false) {\n            corsOptionsFactory = () => false;\n        }\n    }\n    return {\n        onRequest({ request, fetchAPI, endResponse }) {\n            if (request.method.toUpperCase() === 'OPTIONS') {\n                const response = new fetchAPI.Response(null, {\n                    status: 204,\n                    // Safari (and potentially other browsers) need content-length 0,\n                    // for 204 or they just hang waiting for a body\n                    // see: https://github.com/expressjs/cors/blob/master/lib/index.js#L176\n                    headers: {\n                        'Content-Length': '0',\n                    },\n                });\n                endResponse(response);\n            }\n        },\n        onResponse({ request, serverContext, response }) {\n            return (0, promise_helpers_1.handleMaybePromise)(() => getCORSResponseHeaders(request, corsOptionsFactory, serverContext), headers => {\n                if (headers != null) {\n                    for (const headerName in headers) {\n                        response.headers.set(headerName, headers[headerName]);\n                    }\n                }\n            });\n        },\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@whatwg-node/server/cjs/plugins/useCors.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@whatwg-node/server/cjs/plugins/useErrorHandling.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@whatwg-node/server/cjs/plugins/useErrorHandling.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.HTTPError = void 0;\nexports.createDefaultErrorHandler = createDefaultErrorHandler;\nexports.useErrorHandling = useErrorHandling;\nconst fetch_1 = __webpack_require__(/*! @whatwg-node/fetch */ \"(rsc)/./node_modules/@whatwg-node/fetch/dist/node-ponyfill.js\");\nconst promise_helpers_1 = __webpack_require__(/*! @whatwg-node/promise-helpers */ \"(rsc)/./node_modules/@whatwg-node/promise-helpers/cjs/index.js\");\nfunction createDefaultErrorHandler(ResponseCtor = fetch_1.Response) {\n    return function defaultErrorHandler(e) {\n        if (e.details || e.status || e.headers || e.name === 'HTTPError') {\n            return new ResponseCtor(typeof e.details === 'object' ? JSON.stringify(e.details) : e.message, {\n                status: e.status,\n                headers: e.headers || {},\n            });\n        }\n        console.error(e);\n        return createDefaultErrorResponse(ResponseCtor);\n    };\n}\nfunction createDefaultErrorResponse(ResponseCtor) {\n    if (ResponseCtor.error) {\n        return ResponseCtor.error();\n    }\n    return new ResponseCtor(null, { status: 500 });\n}\nclass HTTPError extends Error {\n    status;\n    message;\n    headers;\n    details;\n    name = 'HTTPError';\n    constructor(status = 500, message, headers = {}, details) {\n        super(message);\n        this.status = status;\n        this.message = message;\n        this.headers = headers;\n        this.details = details;\n        Error.captureStackTrace(this, HTTPError);\n    }\n}\nexports.HTTPError = HTTPError;\nfunction useErrorHandling(onError) {\n    return {\n        onRequest({ requestHandler, setRequestHandler, fetchAPI }) {\n            const errorHandler = onError || createDefaultErrorHandler(fetchAPI.Response);\n            setRequestHandler(function handlerWithErrorHandling(request, serverContext) {\n                return (0, promise_helpers_1.handleMaybePromise)(() => requestHandler(request, serverContext), response => response, e => errorHandler(e, request, serverContext) ||\n                    createDefaultErrorResponse(fetchAPI.Response));\n            });\n        },\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL3NlcnZlci9janMvcGx1Z2lucy91c2VFcnJvckhhbmRsaW5nLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGlCQUFpQjtBQUNqQixpQ0FBaUM7QUFDakMsd0JBQXdCO0FBQ3hCLGdCQUFnQixtQkFBTyxDQUFDLHlGQUFvQjtBQUM1QywwQkFBMEIsbUJBQU8sQ0FBQyxvR0FBOEI7QUFDaEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdDQUF3QztBQUN4QyxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0NBQW9DLGFBQWE7QUFDakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtREFBbUQ7QUFDbkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0Esb0JBQW9CLDZDQUE2QztBQUNqRTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYixTQUFTO0FBQ1Q7QUFDQSIsInNvdXJjZXMiOlsiL2hvbWUvY2V0ZWMvTm9kZVByb2plY3RzL2FndWlfdGVzdC9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL3NlcnZlci9janMvcGx1Z2lucy91c2VFcnJvckhhbmRsaW5nLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5IVFRQRXJyb3IgPSB2b2lkIDA7XG5leHBvcnRzLmNyZWF0ZURlZmF1bHRFcnJvckhhbmRsZXIgPSBjcmVhdGVEZWZhdWx0RXJyb3JIYW5kbGVyO1xuZXhwb3J0cy51c2VFcnJvckhhbmRsaW5nID0gdXNlRXJyb3JIYW5kbGluZztcbmNvbnN0IGZldGNoXzEgPSByZXF1aXJlKFwiQHdoYXR3Zy1ub2RlL2ZldGNoXCIpO1xuY29uc3QgcHJvbWlzZV9oZWxwZXJzXzEgPSByZXF1aXJlKFwiQHdoYXR3Zy1ub2RlL3Byb21pc2UtaGVscGVyc1wiKTtcbmZ1bmN0aW9uIGNyZWF0ZURlZmF1bHRFcnJvckhhbmRsZXIoUmVzcG9uc2VDdG9yID0gZmV0Y2hfMS5SZXNwb25zZSkge1xuICAgIHJldHVybiBmdW5jdGlvbiBkZWZhdWx0RXJyb3JIYW5kbGVyKGUpIHtcbiAgICAgICAgaWYgKGUuZGV0YWlscyB8fCBlLnN0YXR1cyB8fCBlLmhlYWRlcnMgfHwgZS5uYW1lID09PSAnSFRUUEVycm9yJykge1xuICAgICAgICAgICAgcmV0dXJuIG5ldyBSZXNwb25zZUN0b3IodHlwZW9mIGUuZGV0YWlscyA9PT0gJ29iamVjdCcgPyBKU09OLnN0cmluZ2lmeShlLmRldGFpbHMpIDogZS5tZXNzYWdlLCB7XG4gICAgICAgICAgICAgICAgc3RhdHVzOiBlLnN0YXR1cyxcbiAgICAgICAgICAgICAgICBoZWFkZXJzOiBlLmhlYWRlcnMgfHwge30sXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICBjb25zb2xlLmVycm9yKGUpO1xuICAgICAgICByZXR1cm4gY3JlYXRlRGVmYXVsdEVycm9yUmVzcG9uc2UoUmVzcG9uc2VDdG9yKTtcbiAgICB9O1xufVxuZnVuY3Rpb24gY3JlYXRlRGVmYXVsdEVycm9yUmVzcG9uc2UoUmVzcG9uc2VDdG9yKSB7XG4gICAgaWYgKFJlc3BvbnNlQ3Rvci5lcnJvcikge1xuICAgICAgICByZXR1cm4gUmVzcG9uc2VDdG9yLmVycm9yKCk7XG4gICAgfVxuICAgIHJldHVybiBuZXcgUmVzcG9uc2VDdG9yKG51bGwsIHsgc3RhdHVzOiA1MDAgfSk7XG59XG5jbGFzcyBIVFRQRXJyb3IgZXh0ZW5kcyBFcnJvciB7XG4gICAgc3RhdHVzO1xuICAgIG1lc3NhZ2U7XG4gICAgaGVhZGVycztcbiAgICBkZXRhaWxzO1xuICAgIG5hbWUgPSAnSFRUUEVycm9yJztcbiAgICBjb25zdHJ1Y3RvcihzdGF0dXMgPSA1MDAsIG1lc3NhZ2UsIGhlYWRlcnMgPSB7fSwgZGV0YWlscykge1xuICAgICAgICBzdXBlcihtZXNzYWdlKTtcbiAgICAgICAgdGhpcy5zdGF0dXMgPSBzdGF0dXM7XG4gICAgICAgIHRoaXMubWVzc2FnZSA9IG1lc3NhZ2U7XG4gICAgICAgIHRoaXMuaGVhZGVycyA9IGhlYWRlcnM7XG4gICAgICAgIHRoaXMuZGV0YWlscyA9IGRldGFpbHM7XG4gICAgICAgIEVycm9yLmNhcHR1cmVTdGFja1RyYWNlKHRoaXMsIEhUVFBFcnJvcik7XG4gICAgfVxufVxuZXhwb3J0cy5IVFRQRXJyb3IgPSBIVFRQRXJyb3I7XG5mdW5jdGlvbiB1c2VFcnJvckhhbmRsaW5nKG9uRXJyb3IpIHtcbiAgICByZXR1cm4ge1xuICAgICAgICBvblJlcXVlc3QoeyByZXF1ZXN0SGFuZGxlciwgc2V0UmVxdWVzdEhhbmRsZXIsIGZldGNoQVBJIH0pIHtcbiAgICAgICAgICAgIGNvbnN0IGVycm9ySGFuZGxlciA9IG9uRXJyb3IgfHwgY3JlYXRlRGVmYXVsdEVycm9ySGFuZGxlcihmZXRjaEFQSS5SZXNwb25zZSk7XG4gICAgICAgICAgICBzZXRSZXF1ZXN0SGFuZGxlcihmdW5jdGlvbiBoYW5kbGVyV2l0aEVycm9ySGFuZGxpbmcocmVxdWVzdCwgc2VydmVyQ29udGV4dCkge1xuICAgICAgICAgICAgICAgIHJldHVybiAoMCwgcHJvbWlzZV9oZWxwZXJzXzEuaGFuZGxlTWF5YmVQcm9taXNlKSgoKSA9PiByZXF1ZXN0SGFuZGxlcihyZXF1ZXN0LCBzZXJ2ZXJDb250ZXh0KSwgcmVzcG9uc2UgPT4gcmVzcG9uc2UsIGUgPT4gZXJyb3JIYW5kbGVyKGUsIHJlcXVlc3QsIHNlcnZlckNvbnRleHQpIHx8XG4gICAgICAgICAgICAgICAgICAgIGNyZWF0ZURlZmF1bHRFcnJvclJlc3BvbnNlKGZldGNoQVBJLlJlc3BvbnNlKSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSxcbiAgICB9O1xufVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@whatwg-node/server/cjs/plugins/useErrorHandling.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@whatwg-node/server/cjs/types.js":
/*!*******************************************************!*\
  !*** ./node_modules/@whatwg-node/server/cjs/types.js ***!
  \*******************************************************/
/***/ (() => {



/***/ }),

/***/ "(rsc)/./node_modules/@whatwg-node/server/cjs/utils.js":
/*!*******************************************************!*\
  !*** ./node_modules/@whatwg-node/server/cjs/utils.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.decompressedResponseMap = exports.iterateAsyncVoid = exports.createDeferredPromise = exports.isPromise = void 0;\nexports.isAsyncIterable = isAsyncIterable;\nexports.normalizeNodeRequest = normalizeNodeRequest;\nexports.isReadable = isReadable;\nexports.isNodeRequest = isNodeRequest;\nexports.isServerResponse = isServerResponse;\nexports.isReadableStream = isReadableStream;\nexports.isFetchEvent = isFetchEvent;\nexports.sendNodeResponse = sendNodeResponse;\nexports.isRequestInit = isRequestInit;\nexports.completeAssign = completeAssign;\nexports.handleErrorFromRequestHandler = handleErrorFromRequestHandler;\nexports.isolateObject = isolateObject;\nexports.handleAbortSignalAndPromiseResponse = handleAbortSignalAndPromiseResponse;\nexports.getSupportedEncodings = getSupportedEncodings;\nexports.handleResponseDecompression = handleResponseDecompression;\nexports.ensureDisposableStackRegisteredForTerminateEvents = ensureDisposableStackRegisteredForTerminateEvents;\nexports.createCustomAbortControllerSignal = createCustomAbortControllerSignal;\nconst promise_helpers_1 = __webpack_require__(/*! @whatwg-node/promise-helpers */ \"(rsc)/./node_modules/@whatwg-node/promise-helpers/cjs/index.js\");\nObject.defineProperty(exports, \"createDeferredPromise\", ({ enumerable: true, get: function () { return promise_helpers_1.createDeferredPromise; } }));\nObject.defineProperty(exports, \"isPromise\", ({ enumerable: true, get: function () { return promise_helpers_1.isPromise; } }));\nfunction isAsyncIterable(body) {\n    return (body != null && typeof body === 'object' && typeof body[Symbol.asyncIterator] === 'function');\n}\nfunction getPort(nodeRequest) {\n    if (nodeRequest.socket?.localPort) {\n        return nodeRequest.socket?.localPort;\n    }\n    const hostInHeader = nodeRequest.headers?.[':authority'] || nodeRequest.headers?.host;\n    const portInHeader = hostInHeader?.split(':')?.[1];\n    if (portInHeader) {\n        return portInHeader;\n    }\n    return 80;\n}\nfunction getHostnameWithPort(nodeRequest) {\n    if (nodeRequest.headers?.[':authority']) {\n        return nodeRequest.headers?.[':authority'];\n    }\n    if (nodeRequest.headers?.host) {\n        return nodeRequest.headers?.host;\n    }\n    const port = getPort(nodeRequest);\n    if (nodeRequest.hostname) {\n        return nodeRequest.hostname + ':' + port;\n    }\n    const localIp = nodeRequest.socket?.localAddress;\n    if (localIp && !localIp?.includes('::') && !localIp?.includes('ffff')) {\n        return `${localIp}:${port}`;\n    }\n    return 'localhost';\n}\nfunction buildFullUrl(nodeRequest) {\n    const hostnameWithPort = getHostnameWithPort(nodeRequest);\n    const protocol = nodeRequest.protocol || (nodeRequest.socket?.encrypted ? 'https' : 'http');\n    const endpoint = nodeRequest.originalUrl || nodeRequest.url || '/graphql';\n    return `${protocol}://${hostnameWithPort}${endpoint}`;\n}\nfunction isRequestBody(body) {\n    const stringTag = body[Symbol.toStringTag];\n    if (typeof body === 'string' ||\n        stringTag === 'Uint8Array' ||\n        stringTag === 'Blob' ||\n        stringTag === 'FormData' ||\n        stringTag === 'URLSearchParams' ||\n        isAsyncIterable(body)) {\n        return true;\n    }\n    return false;\n}\nfunction normalizeNodeRequest(nodeRequest, fetchAPI, nodeResponse, __useCustomAbortCtrl) {\n    const rawRequest = nodeRequest.raw || nodeRequest.req || nodeRequest;\n    let fullUrl = buildFullUrl(rawRequest);\n    if (nodeRequest.query) {\n        const url = new fetchAPI.URL(fullUrl);\n        for (const key in nodeRequest.query) {\n            url.searchParams.set(key, nodeRequest.query[key]);\n        }\n        fullUrl = url.toString();\n    }\n    let normalizedHeaders = nodeRequest.headers;\n    if (nodeRequest.headers?.[':method']) {\n        normalizedHeaders = {};\n        for (const key in nodeRequest.headers) {\n            if (!key.startsWith(':')) {\n                normalizedHeaders[key] = nodeRequest.headers[key];\n            }\n        }\n    }\n    const controller = __useCustomAbortCtrl\n        ? createCustomAbortControllerSignal()\n        : new AbortController();\n    if (nodeResponse?.once) {\n        const closeEventListener = () => {\n            if (!controller.signal.aborted) {\n                Object.defineProperty(rawRequest, 'aborted', { value: true });\n                controller.abort(nodeResponse.errored ?? undefined);\n            }\n        };\n        nodeResponse.once('error', closeEventListener);\n        nodeResponse.once('close', closeEventListener);\n        nodeResponse.once('finish', () => {\n            nodeResponse.removeListener('close', closeEventListener);\n        });\n    }\n    if (nodeRequest.method === 'GET' || nodeRequest.method === 'HEAD') {\n        return new fetchAPI.Request(fullUrl, {\n            method: nodeRequest.method,\n            headers: normalizedHeaders,\n            signal: controller.signal,\n        });\n    }\n    /**\n     * Some Node server frameworks like Serverless Express sends a dummy object with body but as a Buffer not string\n     * so we do those checks to see is there something we can use directly as BodyInit\n     * because the presence of body means the request stream is already consumed and,\n     * rawRequest cannot be used as BodyInit/ReadableStream by Fetch API in this case.\n     */\n    const maybeParsedBody = nodeRequest.body;\n    if (maybeParsedBody != null && Object.keys(maybeParsedBody).length > 0) {\n        if (isRequestBody(maybeParsedBody)) {\n            return new fetchAPI.Request(fullUrl, {\n                method: nodeRequest.method || 'GET',\n                headers: normalizedHeaders,\n                body: maybeParsedBody,\n                signal: controller.signal,\n            });\n        }\n        const request = new fetchAPI.Request(fullUrl, {\n            method: nodeRequest.method || 'GET',\n            headers: normalizedHeaders,\n            signal: controller.signal,\n        });\n        if (!request.headers.get('content-type')?.includes('json')) {\n            request.headers.set('content-type', 'application/json; charset=utf-8');\n        }\n        return new Proxy(request, {\n            get: (target, prop, receiver) => {\n                switch (prop) {\n                    case 'json':\n                        return () => (0, promise_helpers_1.fakePromise)(maybeParsedBody);\n                    case 'text':\n                        return () => (0, promise_helpers_1.fakePromise)(JSON.stringify(maybeParsedBody));\n                    default:\n                        if (globalThis.Bun) {\n                            // workaround for https://github.com/oven-sh/bun/issues/12368\n                            // Proxy.get doesn't seem to get `receiver` correctly\n                            return Reflect.get(target, prop);\n                        }\n                        return Reflect.get(target, prop, receiver);\n                }\n            },\n        });\n    }\n    // perf: instead of spreading the object, we can just pass it as is and it performs better\n    return new fetchAPI.Request(fullUrl, {\n        method: nodeRequest.method,\n        headers: normalizedHeaders,\n        signal: controller.signal,\n        // @ts-expect-error - AsyncIterable is supported as body\n        body: rawRequest,\n        duplex: 'half',\n    });\n}\nfunction isReadable(stream) {\n    return stream.read != null;\n}\nfunction isNodeRequest(request) {\n    return isReadable(request);\n}\nfunction isServerResponse(stream) {\n    // Check all used functions are defined\n    return (stream != null &&\n        stream.setHeader != null &&\n        stream.end != null &&\n        stream.once != null &&\n        stream.write != null);\n}\nfunction isReadableStream(stream) {\n    return stream != null && stream.getReader != null;\n}\nfunction isFetchEvent(event) {\n    return event != null && event.request != null && event.respondWith != null;\n}\nfunction configureSocket(rawRequest) {\n    rawRequest?.socket?.setTimeout?.(0);\n    rawRequest?.socket?.setNoDelay?.(true);\n    rawRequest?.socket?.setKeepAlive?.(true);\n}\nfunction endResponse(serverResponse) {\n    // @ts-expect-error Avoid arguments adaptor trampoline https://v8.dev/blog/adaptor-frame\n    serverResponse.end(null, null, null);\n}\nfunction sendAsyncIterable(serverResponse, asyncIterable) {\n    let closed = false;\n    const closeEventListener = () => {\n        closed = true;\n    };\n    serverResponse.once('error', closeEventListener);\n    serverResponse.once('close', closeEventListener);\n    serverResponse.once('finish', () => {\n        serverResponse.removeListener('close', closeEventListener);\n        serverResponse.removeListener('error', closeEventListener);\n    });\n    const iterator = asyncIterable[Symbol.asyncIterator]();\n    const pump = () => iterator.next().then(({ done, value }) => {\n        if (closed || done) {\n            return;\n        }\n        return (0, promise_helpers_1.handleMaybePromise)(() => safeWrite(value, serverResponse), () => (closed ? endResponse(serverResponse) : pump()));\n    });\n    return pump();\n}\nfunction safeWrite(chunk, serverResponse) {\n    // @ts-expect-error http and http2 writes are actually compatible\n    const result = serverResponse.write(chunk);\n    if (!result) {\n        return new Promise(resolve => serverResponse.once('drain', resolve));\n    }\n}\nconst isNode1x = globalThis.process?.versions?.node?.startsWith('1');\nfunction sendNodeResponse(fetchResponse, serverResponse, nodeRequest, __useSingleWriteHead) {\n    if (serverResponse.closed || serverResponse.destroyed || serverResponse.writableEnded) {\n        return;\n    }\n    if (!fetchResponse) {\n        serverResponse.statusCode = 404;\n        endResponse(serverResponse);\n        return;\n    }\n    if (__useSingleWriteHead &&\n        // @ts-expect-error - headersInit is a private property\n        fetchResponse.headers?.headersInit &&\n        // @ts-expect-error - headersInit is a private property\n        !Array.isArray(fetchResponse.headers.headersInit) &&\n        // @ts-expect-error - headersInit is a private property\n        !fetchResponse.headers.headersInit.get &&\n        // @ts-expect-error - map is a private property\n        !fetchResponse.headers._map &&\n        // @ts-expect-error - _setCookies is a private property\n        !fetchResponse.headers._setCookies?.length) {\n        serverResponse.writeHead(fetchResponse.status, fetchResponse.statusText, \n        // @ts-expect-error - headersInit is a private property\n        fetchResponse.headers.headersInit);\n    }\n    else {\n        // Avoid using `setHeaders` on Node.js 18 as it is broken with multiple headers with the same name\n        // @ts-expect-error - setHeaders exist\n        if (serverResponse.setHeaders && !isNode1x) {\n            // @ts-expect-error - setHeaders exist\n            serverResponse.setHeaders(fetchResponse.headers);\n        }\n        else {\n            let setCookiesSet = false;\n            fetchResponse.headers.forEach((value, key) => {\n                if (key === 'set-cookie') {\n                    if (setCookiesSet) {\n                        return;\n                    }\n                    setCookiesSet = true;\n                    const setCookies = fetchResponse.headers.getSetCookie?.();\n                    if (setCookies) {\n                        serverResponse.setHeader('set-cookie', setCookies);\n                        return;\n                    }\n                }\n                serverResponse.setHeader(key, value);\n            });\n        }\n        serverResponse.writeHead(fetchResponse.status, fetchResponse.statusText);\n    }\n    // @ts-expect-error - Handle the case where the response is a string\n    if (fetchResponse['bodyType'] === 'String') {\n        return (0, promise_helpers_1.handleMaybePromise)(\n        // @ts-expect-error - bodyInit is a private property\n        () => safeWrite(fetchResponse.bodyInit, serverResponse), () => endResponse(serverResponse));\n    }\n    // Optimizations for node-fetch\n    const bufOfRes = \n    // @ts-expect-error - _buffer is a private property\n    fetchResponse._buffer;\n    if (bufOfRes) {\n        return (0, promise_helpers_1.handleMaybePromise)(() => safeWrite(bufOfRes, serverResponse), () => endResponse(serverResponse));\n    }\n    // Other fetch implementations\n    const fetchBody = fetchResponse.body;\n    if (fetchBody == null) {\n        endResponse(serverResponse);\n        return;\n    }\n    if (\n    // @ts-expect-error - Uint8Array is a valid body type\n    fetchBody[Symbol.toStringTag] === 'Uint8Array') {\n        return (0, promise_helpers_1.handleMaybePromise)(() => safeWrite(fetchBody, serverResponse), () => endResponse(serverResponse));\n    }\n    configureSocket(nodeRequest);\n    if (isReadable(fetchBody)) {\n        serverResponse.once('close', () => {\n            fetchBody.destroy();\n        });\n        fetchBody.pipe(serverResponse, {\n            end: true,\n        });\n        return;\n    }\n    if (isReadableStream(fetchBody)) {\n        return sendReadableStream(nodeRequest, serverResponse, fetchBody);\n    }\n    if (isAsyncIterable(fetchBody)) {\n        return sendAsyncIterable(serverResponse, fetchBody);\n    }\n}\nfunction sendReadableStream(nodeRequest, serverResponse, readableStream) {\n    const reader = readableStream.getReader();\n    nodeRequest?.once?.('error', err => {\n        reader.cancel(err);\n    });\n    function pump() {\n        return reader\n            .read()\n            .then(({ done, value }) => done\n            ? endResponse(serverResponse)\n            : (0, promise_helpers_1.handleMaybePromise)(() => safeWrite(value, serverResponse), pump));\n    }\n    return pump();\n}\nfunction isRequestInit(val) {\n    return (val != null &&\n        typeof val === 'object' &&\n        ('body' in val ||\n            'cache' in val ||\n            'credentials' in val ||\n            'headers' in val ||\n            'integrity' in val ||\n            'keepalive' in val ||\n            'method' in val ||\n            'mode' in val ||\n            'redirect' in val ||\n            'referrer' in val ||\n            'referrerPolicy' in val ||\n            'signal' in val ||\n            'window' in val));\n}\n// from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign#copying_accessors\nfunction completeAssign(...args) {\n    const [target, ...sources] = args.filter(arg => arg != null && typeof arg === 'object');\n    sources.forEach(source => {\n        // modified Object.keys to Object.getOwnPropertyNames\n        // because Object.keys only returns enumerable properties\n        const descriptors = Object.getOwnPropertyNames(source).reduce((descriptors, key) => {\n            const descriptor = Object.getOwnPropertyDescriptor(source, key);\n            if (descriptor) {\n                descriptors[key] = Object.getOwnPropertyDescriptor(source, key);\n            }\n            return descriptors;\n        }, {});\n        // By default, Object.assign copies enumerable Symbols, too\n        Object.getOwnPropertySymbols(source).forEach(sym => {\n            const descriptor = Object.getOwnPropertyDescriptor(source, sym);\n            if (descriptor?.enumerable) {\n                descriptors[sym] = descriptor;\n            }\n        });\n        Object.defineProperties(target, descriptors);\n    });\n    return target;\n}\nvar promise_helpers_2 = __webpack_require__(/*! @whatwg-node/promise-helpers */ \"(rsc)/./node_modules/@whatwg-node/promise-helpers/cjs/index.js\");\nObject.defineProperty(exports, \"iterateAsyncVoid\", ({ enumerable: true, get: function () { return promise_helpers_2.iterateAsyncVoid; } }));\nfunction handleErrorFromRequestHandler(error, ResponseCtor) {\n    return new ResponseCtor(error.stack || error.message || error.toString(), {\n        status: error.status || 500,\n    });\n}\nfunction isolateObject(originalCtx, waitUntilFn) {\n    if (originalCtx == null) {\n        if (waitUntilFn == null) {\n            return {};\n        }\n        return {\n            waitUntil: waitUntilFn,\n        };\n    }\n    return completeAssign(Object.create(originalCtx), {\n        waitUntil: waitUntilFn,\n    }, originalCtx);\n}\nfunction handleAbortSignalAndPromiseResponse(response$, abortSignal) {\n    if (abortSignal?.aborted) {\n        throw abortSignal.reason;\n    }\n    if ((0, promise_helpers_1.isPromise)(response$) && abortSignal) {\n        const deferred$ = (0, promise_helpers_1.createDeferredPromise)();\n        function abortSignalFetchErrorHandler() {\n            deferred$.reject(abortSignal.reason);\n        }\n        abortSignal.addEventListener('abort', abortSignalFetchErrorHandler, { once: true });\n        response$\n            .then(function fetchSuccessHandler(res) {\n            deferred$.resolve(res);\n        })\n            .catch(function fetchErrorHandler(err) {\n            deferred$.reject(err);\n        })\n            .finally(() => {\n            abortSignal.removeEventListener('abort', abortSignalFetchErrorHandler);\n        });\n        return deferred$.promise;\n    }\n    return response$;\n}\nexports.decompressedResponseMap = new WeakMap();\nconst supportedEncodingsByFetchAPI = new WeakMap();\nfunction getSupportedEncodings(fetchAPI) {\n    let supportedEncodings = supportedEncodingsByFetchAPI.get(fetchAPI);\n    if (!supportedEncodings) {\n        const possibleEncodings = ['deflate', 'gzip', 'deflate-raw', 'br'];\n        if (fetchAPI.DecompressionStream?.['supportedFormats']) {\n            supportedEncodings = fetchAPI.DecompressionStream['supportedFormats'];\n        }\n        else {\n            supportedEncodings = possibleEncodings.filter(encoding => {\n                // deflate-raw is not supported in Node.js >v20\n                if (globalThis.process?.version?.startsWith('v2') &&\n                    fetchAPI.DecompressionStream === globalThis.DecompressionStream &&\n                    encoding === 'deflate-raw') {\n                    return false;\n                }\n                try {\n                    // eslint-disable-next-line no-new\n                    new fetchAPI.DecompressionStream(encoding);\n                    return true;\n                }\n                catch {\n                    return false;\n                }\n            });\n        }\n        supportedEncodingsByFetchAPI.set(fetchAPI, supportedEncodings);\n    }\n    return supportedEncodings;\n}\nfunction handleResponseDecompression(response, fetchAPI) {\n    const contentEncodingHeader = response?.headers.get('content-encoding');\n    if (!contentEncodingHeader || contentEncodingHeader === 'none') {\n        return response;\n    }\n    if (!response?.body) {\n        return response;\n    }\n    let decompressedResponse = exports.decompressedResponseMap.get(response);\n    if (!decompressedResponse || decompressedResponse.bodyUsed) {\n        let decompressedBody = response.body;\n        const contentEncodings = contentEncodingHeader.split(',');\n        if (!contentEncodings.every(encoding => getSupportedEncodings(fetchAPI).includes(encoding))) {\n            return new fetchAPI.Response(`Unsupported 'Content-Encoding': ${contentEncodingHeader}`, {\n                status: 415,\n                statusText: 'Unsupported Media Type',\n            });\n        }\n        for (const contentEncoding of contentEncodings) {\n            decompressedBody = decompressedBody.pipeThrough(new fetchAPI.DecompressionStream(contentEncoding));\n        }\n        decompressedResponse = new fetchAPI.Response(decompressedBody, response);\n        exports.decompressedResponseMap.set(response, decompressedResponse);\n    }\n    return decompressedResponse;\n}\nconst terminateEvents = ['SIGINT', 'exit', 'SIGTERM'];\nconst disposableStacks = new Set();\nlet eventListenerRegistered = false;\nfunction ensureEventListenerForDisposableStacks() {\n    if (eventListenerRegistered) {\n        return;\n    }\n    eventListenerRegistered = true;\n    for (const event of terminateEvents) {\n        globalThis.process.once(event, function terminateHandler() {\n            return Promise.allSettled([...disposableStacks].map(stack => !stack.disposed && stack.disposeAsync()));\n        });\n    }\n}\nfunction ensureDisposableStackRegisteredForTerminateEvents(disposableStack) {\n    if (globalThis.process) {\n        ensureEventListenerForDisposableStacks();\n        if (!disposableStacks.has(disposableStack)) {\n            disposableStacks.add(disposableStack);\n            disposableStack.defer(() => {\n                disposableStacks.delete(disposableStack);\n            });\n        }\n    }\n}\nclass CustomAbortControllerSignal extends EventTarget {\n    aborted = false;\n    _onabort = null;\n    _reason;\n    constructor() {\n        super();\n        const nodeEvents = globalThis.process?.getBuiltinModule?.('node:events');\n        // @ts-expect-error - We know kMaxEventTargetListeners is available in node:events\n        if (nodeEvents?.kMaxEventTargetListeners) {\n            // @ts-expect-error - See https://github.com/nodejs/node/pull/55816/files#diff-03bd4f07a1006cb0daaddced702858751b20f5ab7681cb0719c1b1d80d6ca05cR31\n            this[nodeEvents.kMaxEventTargetListeners] = 0;\n        }\n    }\n    throwIfAborted() {\n        if (this._nativeCtrl?.signal?.throwIfAborted) {\n            return this._nativeCtrl.signal.throwIfAborted();\n        }\n        if (this.aborted) {\n            throw this._reason;\n        }\n    }\n    _nativeCtrl;\n    ensureNativeCtrl() {\n        if (!this._nativeCtrl) {\n            const isAborted = this.aborted;\n            this._nativeCtrl = new AbortController();\n            if (isAborted) {\n                this._nativeCtrl.abort(this._reason);\n            }\n        }\n        return this._nativeCtrl;\n    }\n    abort(reason) {\n        if (this._nativeCtrl?.abort) {\n            return this._nativeCtrl?.abort(reason);\n        }\n        this._reason = reason || new DOMException('This operation was aborted', 'AbortError');\n        this.aborted = true;\n        this.dispatchEvent(new Event('abort'));\n    }\n    get signal() {\n        if (this._nativeCtrl?.signal) {\n            return this._nativeCtrl.signal;\n        }\n        return this;\n    }\n    get reason() {\n        if (this._nativeCtrl?.signal) {\n            return this._nativeCtrl.signal.reason;\n        }\n        return this._reason;\n    }\n    get onabort() {\n        if (this._onabort) {\n            return this._onabort;\n        }\n        return this._onabort;\n    }\n    set onabort(value) {\n        if (this._nativeCtrl?.signal) {\n            this._nativeCtrl.signal.onabort = value;\n            return;\n        }\n        if (this._onabort) {\n            this.removeEventListener('abort', this._onabort);\n        }\n        this._onabort = value;\n        if (value) {\n            this.addEventListener('abort', value);\n        }\n    }\n}\nfunction createCustomAbortControllerSignal() {\n    if (globalThis.Bun || globalThis.Deno) {\n        return new AbortController();\n    }\n    return new Proxy(new CustomAbortControllerSignal(), {\n        get(target, prop, receiver) {\n            if (prop.toString().includes('kDependantSignals')) {\n                const nativeCtrl = target.ensureNativeCtrl();\n                return Reflect.get(nativeCtrl.signal, prop, nativeCtrl.signal);\n            }\n            return Reflect.get(target, prop, receiver);\n        },\n        set(target, prop, value, receiver) {\n            if (prop.toString().includes('kDependantSignals')) {\n                const nativeCtrl = target.ensureNativeCtrl();\n                return Reflect.set(nativeCtrl.signal, prop, value, nativeCtrl.signal);\n            }\n            return Reflect.set(target, prop, value, receiver);\n        },\n        getPrototypeOf() {\n            return AbortSignal.prototype;\n        },\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@whatwg-node/server/cjs/utils.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@whatwg-node/server/cjs/uwebsockets.js":
/*!*************************************************************!*\
  !*** ./node_modules/@whatwg-node/server/cjs/uwebsockets.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.fakePromise = void 0;\nexports.isUWSResponse = isUWSResponse;\nexports.getRequestFromUWSRequest = getRequestFromUWSRequest;\nexports.createWritableFromUWS = createWritableFromUWS;\nexports.sendResponseToUwsOpts = sendResponseToUwsOpts;\nconst promise_helpers_1 = __webpack_require__(/*! @whatwg-node/promise-helpers */ \"(rsc)/./node_modules/@whatwg-node/promise-helpers/cjs/index.js\");\nObject.defineProperty(exports, \"fakePromise\", ({ enumerable: true, get: function () { return promise_helpers_1.fakePromise; } }));\nfunction isUWSResponse(res) {\n    return !!res.onData;\n}\nfunction getRequestFromUWSRequest({ req, res, fetchAPI, controller, }) {\n    const method = req.getMethod();\n    let duplex;\n    const chunks = [];\n    const pushFns = [\n        (chunk) => {\n            chunks.push(chunk);\n        },\n    ];\n    const push = (chunk) => {\n        for (const pushFn of pushFns) {\n            pushFn(chunk);\n        }\n    };\n    let stopped = false;\n    const stopFns = [\n        () => {\n            stopped = true;\n        },\n    ];\n    const stop = () => {\n        for (const stopFn of stopFns) {\n            stopFn();\n        }\n    };\n    res.onData(function (ab, isLast) {\n        push(Buffer.from(Buffer.from(ab, 0, ab.byteLength)));\n        if (isLast) {\n            stop();\n        }\n    });\n    let getReadableStream;\n    if (method !== 'get' && method !== 'head') {\n        duplex = 'half';\n        controller.signal.addEventListener('abort', () => {\n            stop();\n        }, { once: true });\n        let readableStream;\n        getReadableStream = () => {\n            if (!readableStream) {\n                readableStream = new fetchAPI.ReadableStream({\n                    start(streamCtrl) {\n                        for (const chunk of chunks) {\n                            streamCtrl.enqueue(chunk);\n                        }\n                        if (stopped) {\n                            streamCtrl.close();\n                            return;\n                        }\n                        pushFns.push((chunk) => {\n                            streamCtrl.enqueue(chunk);\n                        });\n                        stopFns.push(() => {\n                            if (controller.signal.reason) {\n                                streamCtrl.error(controller.signal.reason);\n                                return;\n                            }\n                            if (streamCtrl.desiredSize) {\n                                streamCtrl.close();\n                            }\n                        });\n                    },\n                });\n            }\n            return readableStream;\n        };\n    }\n    const headers = new fetchAPI.Headers();\n    req.forEach((key, value) => {\n        headers.append(key, value);\n    });\n    let url = `http://localhost${req.getUrl()}`;\n    const query = req.getQuery();\n    if (query) {\n        url += `?${query}`;\n    }\n    let buffer;\n    function getBody() {\n        if (!getReadableStream) {\n            return null;\n        }\n        if (stopped) {\n            return getBufferFromChunks();\n        }\n        return getReadableStream();\n    }\n    const request = new fetchAPI.Request(url, {\n        method,\n        headers,\n        get body() {\n            return getBody();\n        },\n        signal: controller.signal,\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore - not in the TS types yet\n        duplex,\n    });\n    function getBufferFromChunks() {\n        if (!buffer) {\n            buffer = chunks.length === 1 ? chunks[0] : Buffer.concat(chunks);\n        }\n        return buffer;\n    }\n    function collectBuffer() {\n        if (stopped) {\n            return (0, promise_helpers_1.fakePromise)(getBufferFromChunks());\n        }\n        return new Promise((resolve, reject) => {\n            try {\n                stopFns.push(() => {\n                    resolve(getBufferFromChunks());\n                });\n            }\n            catch (e) {\n                reject(e);\n            }\n        });\n    }\n    Object.defineProperties(request, {\n        body: {\n            get() {\n                return getBody();\n            },\n            configurable: true,\n            enumerable: true,\n        },\n        json: {\n            value() {\n                return collectBuffer()\n                    .then(b => b.toString('utf8'))\n                    .then(t => JSON.parse(t));\n            },\n            configurable: true,\n            enumerable: true,\n        },\n        text: {\n            value() {\n                return collectBuffer().then(b => b.toString('utf8'));\n            },\n            configurable: true,\n            enumerable: true,\n        },\n        arrayBuffer: {\n            value() {\n                return collectBuffer();\n            },\n            configurable: true,\n            enumerable: true,\n        },\n    });\n    return request;\n}\nfunction createWritableFromUWS(uwsResponse, fetchAPI) {\n    return new fetchAPI.WritableStream({\n        write(chunk) {\n            uwsResponse.cork(() => {\n                uwsResponse.write(chunk);\n            });\n        },\n        close() {\n            uwsResponse.cork(() => {\n                uwsResponse.end();\n            });\n        },\n    });\n}\nfunction sendResponseToUwsOpts(uwsResponse, fetchResponse, controller, fetchAPI) {\n    if (!fetchResponse) {\n        uwsResponse.writeStatus('404 Not Found');\n        uwsResponse.end();\n        return;\n    }\n    const bufferOfRes = fetchResponse._buffer;\n    // @ts-expect-error - Handle the case where the response is a string\n    const strBody = fetchResponse['bodyType'] === 'String' ? fetchResponse.bodyInit : undefined;\n    if (controller.signal.aborted) {\n        return;\n    }\n    uwsResponse.cork(() => {\n        uwsResponse.writeStatus(`${fetchResponse.status} ${fetchResponse.statusText}`);\n        let isSetCookieHandled = false;\n        for (const [key, value] of fetchResponse.headers) {\n            // content-length causes an error with Node.js's fetch\n            if (key !== 'content-length') {\n                if (key === 'set-cookie') {\n                    if (isSetCookieHandled) {\n                        continue;\n                    }\n                    isSetCookieHandled = true;\n                    const setCookies = fetchResponse.headers.getSetCookie?.();\n                    if (setCookies) {\n                        for (const setCookie of setCookies) {\n                            uwsResponse.writeHeader(key, setCookie);\n                        }\n                        continue;\n                    }\n                }\n                uwsResponse.writeHeader(key, value);\n            }\n        }\n        if (strBody) {\n            uwsResponse.end(strBody);\n        }\n        else if (bufferOfRes) {\n            uwsResponse.end(bufferOfRes);\n        }\n        else if (!fetchResponse.body) {\n            uwsResponse.end();\n        }\n    });\n    if (strBody || bufferOfRes || !fetchResponse.body) {\n        return;\n    }\n    controller.signal.addEventListener('abort', () => {\n        if (!fetchResponse.body?.locked) {\n            fetchResponse.body?.cancel(controller.signal.reason);\n        }\n    }, { once: true });\n    return fetchResponse.body\n        .pipeTo(createWritableFromUWS(uwsResponse, fetchAPI), {\n        signal: controller.signal,\n    })\n        .catch(err => {\n        if (controller.signal.aborted) {\n            return;\n        }\n        throw err;\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@whatwg-node/server/cjs/uwebsockets.js\n");

/***/ })

};
;